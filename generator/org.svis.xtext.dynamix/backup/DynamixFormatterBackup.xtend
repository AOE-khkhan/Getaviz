/*
 * generated by Xtext
 */
package org.svis.xtext.formatting

import org.eclipse.xtext.Keyword
import org.eclipse.xtext.formatting.impl.AbstractDeclarativeFormatter
import org.eclipse.xtext.formatting.impl.FormattingConfig
import org.eclipse.xtext.xbase.lib.Pair
import org.svis.xtext.services.DynamixGrammarAccess

import com.google.inject.Inject;
// import org.svis.xtext.services.DynamixGrammarAccess

/**
 * This class contains custom formatting description.
 * 
 * see : http://www.eclipse.org/Xtext/documentation.html#formatting
 * on how and when to use it 
 * 
 * Also see {@link org.eclipse.xtext.xtext.XtextFormattingTokenSerializer} as an example
 */
class DynamixFormatterBackup extends AbstractDeclarativeFormatter {

//	@Inject extension DynamixGrammarAccess
	
	override protected void configureFormatting(FormattingConfig c) {
//	DynamixGrammarAccess f = getGrammarAccess();
//	
//c.setAutoLinewrap(120);
//// find common keywords an specify formatting for them
//for (Pair<Keyword, Keyword> pair : f.findKeywordPairs("(", ")")) {
//c.setNoSpace().after(pair.getFirst());
//c.setNoSpace().before(pair.getSecond());
//}
//for (Keyword comma : f.findKeywords(",")) {
//c.setNoSpace().before(comma);
//}
// 
//// formatting for grammar rule Line
//c.setLinewrap(2).after(f.getLineAccess().getSemicolonKeyword_1());
//c.setNoSpace().before(f.getLineAccess().getSemicolonKeyword_1());
//// formatting for grammar rule TestIndentation
//c.setIndentationIncrement().after(
//f.getTestIndentationAccess().getLeftCurlyBracketKeyword_1());
//c.setIndentationDecrement().before(
//f.getTestIndentationAccess().getRightCurlyBracketKeyword_3());
//c.setLinewrap().after(
//f.getTestIndentationAccess().getLeftCurlyBracketKeyword_1());
//c.setLinewrap().after(
//f.getTestIndentationAccess().getRightCurlyBracketKeyword_3());
//// formatting for grammar rule Param
//c.setNoLinewrap().around(f.getParamAccess().getColonKeyword_1());
//c.setNoSpace().around(f.getParamAccess().getColonKeyword_1());
//// formatting for Comments
//		cfg.setLinewrap(0, 1, 2).before(g.getSL_COMMENTRule());
//		cfg.setLinewrap(0, 1, 2).before(g.getML_COMMENTRule());
//		cfg.setLinewrap(0, 1, 1).after(g.getML_COMMENTRule());
	}
}
