digraph bankmodel {
	node [label="\N", shape=record, style=filled, fillcolor=gray95];
	graph [bb="0,0,15541,15331"];
	subgraph cluster_freemind {
		graph [label=freemind,
			levelType="1_FAMIX.Namespace",
			bb="-0.35513,-0.20374,15541,15331"];
		subgraph cluster_freemind_controller {
			graph [label=controller,
				levelType="2_FAMIX.Namespace",
				bb="10727,7.5925,15532,5708.6"];
			subgraph cluster_freemind_controller_printpreview {
				graph [label=printpreview,
					levelType="3_FAMIX.Namespace",
					bb="14179,179.89,14795,693.89"];
				freemind_controller_printpreview_PreviewDialog [label="{+ PreviewDialog|# view : MapView\l- pageNumber : JLabel\l- DEFAULT_ZOOM_FACTOR_STEP : double\l|- getButton(String,String,AbstractAction\
): JButton \l+ actionPerformed(ActionEvent): void \l &lt;Initializer&gt;() \l- getButton(String,AbstractAction): JButton\
 \l- getButton(String): JButton \l+ PreviewDialog(String,MapView)}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="14638,275.19", rects="14488,339.19,14788,362.19 14488,286.19,14788,339.19 14488,188.19,14788,286.19", width="4.1667", height="2.4306"];
				freemind_controller_printpreview_BrowseAction [label="{ BrowseAction|# pageStep : int\l- pageNumber : JLabel\l# preview : Preview\l- pageIndexPainter : Runnable\l|+ actionPerformed(ActionEvent\
): void \l- paintPageIndex(): void \l- getPageIndexText(): String \l+ BrowseAction(Preview,JLabel,int)}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="14605,493.19", rects="14487,549.69,14722,572.69 14487,481.69,14722,549.69 14487,413.69,14722,481.69", width="3.2639", height="2.2222"];
				freemind_controller_printpreview_Preview [label="{ Preview|- DEFAULT_PREVIEW_SIZE : int\l# view : MapView\l# zoom : double\l- MINIMUM_ZOOM_FACTOR : double\l- imageGraphics : Graphics2D\
\l# index : int\l- previewPageImage : BufferedImage\l|+ resize(): void \l &lt;Initializer&gt;() \l+ paint(Graphics): void\
 \l+ moveIndex(int): void \l+ getMinimumSize(): Dimension \l+ getPageIndex(): int \l- getPageFormat(): PageFormat \l+ changeZoom\
(double): void \l- getPageWidth(PageFormat): int \l- getPageHeight(PageFormat): int \l+ Preview(MapView,double) \l# paintPaper(Graphics\
,PageFormat): void}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="14313,350.19", rects="14187,489.19,14438,512.19 14187,376.19,14438,489.19 14187,188.19,14438,376.19", width="3.4861", height="4.5139"];
				freemind_controller_printpreview_ZoomAction [label="{ ZoomAction|# zoomStep : double\l# preview : Preview\l|+ actionPerformed(ActionEvent): void \l+ ZoomAction(Preview,double)}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="14330,613.19", rects="14212,639.69,14447,662.69 14212,601.69,14447,639.69 14212,563.69,14447,601.69", width="3.2639", height="1.3889"];
			}
			subgraph cluster_freemind_controller_filter {
				graph [label=filter,
					levelType="3_FAMIX.Namespace",
					bb="11063,589.89,14079,3081.9"];
				subgraph cluster_freemind_controller_filter_condition {
					graph [label=condition,
						levelType="4_FAMIX.Namespace",
						bb="11329,1028.2,12864,2430.2"];
					freemind_controller_filter_condition_CompareConditionAdapter [label="{* CompareConditionAdapter|- conditionValue : String\l- ignoreCase : boolean\l VALUE : String\l IGNORE_CASE : String\l| &lt;Initializer\
&gt;() \l+ createDescription(String,int,boolean): String \l+ saveAttributes(XMLElement): void \l CompareConditionAdapter(\
String,boolean) \l# compareTo(String): int}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="12717,1123.5", rects="12579,1187.5,12856,1210.5 12579,1119.5,12856,1187.5 12579,1036.5,12856,1119.5", width="3.8472", height="2.4306"];
					freemind_controller_filter_condition_JCondition [label="{+ JCondition|+ JCondition()}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="12277,1815.5", rects="12228,1815.5,12326,1838.5 12228,1792.5,12326,1815.5", width="1.3611", height="0.65278"];
					freemind_controller_filter_condition_IconNotContainedCondition [label="{+ IconNotContainedCondition| NAME : String\l ICON : String\l- iconName : String\l|- getIconName(): String \l- isStateIconContained\
(MindMapNode,String): boolean \l load(XMLElement): Condition \l &lt;Initializer&gt;() \l+ IconNotContainedCondition(String) \l+\
 checkNode(Controller,MindMapNode): boolean \l+ iconLastIndex(MindMapNode,String): int \l+ iconFirstIndex(MindMapNode,String):\
 int \l+ getListCellRendererComponent(): JComponent \l+ save(XMLElement): void}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="11961,1990.5", rects="11796,2084.5,12126,2107.5 11796,2031.5,12126,2084.5 11796,1873.5,12126,2031.5", width="4.5833", height="3.2639"];
					freemind_controller_filter_condition_IgnoreCaseNodeContainsCondition [label="{ IgnoreCaseNodeContainsCondition| NAME : String\l VALUE : String\l- value : String\l| IgnoreCaseNodeContainsCondition(String) \l\
 &lt;Initializer&gt;() \l+ checkNode(Controller,MindMapNode): boolean \l+ save(XMLElement): void \l load(XMLElement): Condition\
 \l# createDesctiption(): String}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="12379,1258.5", rects="12228,1322.5,12530,1345.5 12228,1269.5,12530,1322.5 12228,1171.5,12530,1269.5", width="4.1944", height="2.4306"];
					freemind_controller_filter_condition_ConditionRenderer [label="{+ ConditionRenderer|+ SELECTED_BACKGROUND : Color\l|+ ConditionRenderer() \l+ getListCellRendererComponent(JList,Object,int,boolean\
,boolean): Component \l &lt;Initializer&gt;()}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="12463,1437.5", rects="12228,1464,12699,1487 12228,1441,12699,1464 12228,1388,12699,1441", width="6.5417", height="1.3889"];
					freemind_controller_filter_condition_NodeContainsCondition [label="{ NodeContainsCondition| VALUE : String\l NAME : String\l- value : String\l| load(XMLElement): Condition \l# createDesctiption()\
: String \l+ save(XMLElement): void \l+ checkNode(Controller,MindMapNode): boolean \l NodeContainsCondition(String) \l &lt;Initializer\
&gt;()}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="12028,1312.5", rects="11877,1376.5,12179,1399.5 11877,1323.5,12179,1376.5 11877,1225.5,12179,1323.5", width="4.1944", height="2.4306"];
					freemind_controller_filter_condition_Condition [label="{+ Condition|+ getListCellRendererComponent(): JComponent \l checkNode(Controller,MindMapNode): boolean \l save(XMLElement): void\
}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="11836,1155.5", rects="11688,1170.5,11984,1193.5 11688,1117.5,11984,1170.5", width="4.1111", height="1.0694"];
					freemind_controller_filter_condition_AttributeCompareCondition [label="{+ AttributeCompareCondition| NAME : String\l SUCCEED : String\l- succeed : boolean\l- attribute : String\l- comparationResult :\
 int\l ATTRIBUTE : String\l COMPARATION_RESULT : String\l|# createDesctiption(): String \l+ checkNode(Controller,MindMapNode): boolean\
 \l+ save(XMLElement): void \l load(XMLElement): Condition \l+ AttributeCompareCondition(String,String,boolean,int,boolean\
) \l &lt;Initializer&gt;()}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="12364,1990.5", rects="12174,2084.5,12554,2107.5 12174,1971.5,12554,2084.5 12174,1873.5,12554,1971.5", width="5.2778", height="3.2639"];
					freemind_controller_filter_condition_IconContainedCondition [label="{+ IconContainedCondition|- iconName : String\l NAME : String\l ICON : String\l|- getIconName(): String \l+ checkNode(Controller\
,MindMapNode): boolean \l+ getListCellRendererComponent(): JComponent \l+ IconContainedCondition(String) \l+ iconLastIndex(MindMapNode\
,String): int \l- isStateIconContained(MindMapNode,String): boolean \l+ iconFirstIndex(MindMapNode,String): int \l+ save(XMLElement\
): void \l &lt;Initializer&gt;() \l load(XMLElement): Condition}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="12393,1639.5", rects="12228,1733.5,12558,1756.5 12228,1680.5,12558,1733.5 12228,1522.5,12558,1680.5", width="4.5833", height="3.2639"];
					freemind_controller_filter_condition_DisjunctConditions [label="{+ DisjunctConditions|- conditions : Object\l NAME : String\l| load(XMLElement): Condition \l+ DisjunctConditions(Object[]) \l+ \
getListCellRendererComponent(): JComponent \l+ save(XMLElement): void \l+ checkNode(Controller,MindMapNode): boolean \l &lt;Initializer\
&gt;()}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="12244,2223.5", rects="12093,2280,12395,2303 12093,2242,12395,2280 12093,2144,12395,2242", width="4.1944", height="2.2222"];
					freemind_controller_filter_condition_NodeCondition [label="{*+ NodeCondition|- description : String\l- renderer : JComponent\l|*# createDesctiption(): String \l+ saveAttributes(XMLElement\
): void \l# NodeCondition() \l+ getListCellRendererComponent(): JComponent \l+ toString(): String}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="11485,1108.5", rects="11337,1157.5,11633,1180.5 11337,1119.5,11633,1157.5 11337,1036.5,11633,1119.5", width="4.1111", height="2.0139"];
					freemind_controller_filter_condition_NoFilteringCondition [label="{+ NoFilteringCondition|- description : String\l- condition : NoFilteringCondition\l- renderer : JComponent\l|+ getListCellRendererComponent\
(): JComponent \l+ checkNode(Controller,MindMapNode): boolean \l+ toString(): String \l+ save(XMLElement): void \l- \
NoFilteringCondition() \l+ createCondition(): Condition}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="11596,2014.5", rects="11445,2078.5,11747,2101.5 11445,2025.5,11747,2078.5 11445,1927.5,11747,2025.5", width="4.1944", height="2.4306"];
					freemind_controller_filter_condition_AttributeExistsCondition [label="{+ AttributeExistsCondition| ATTRIBUTE : String\l NAME : String\l- attribute : String\l|+ AttributeExistsCondition(String) \l load\
(XMLElement): Condition \l+ checkNode(Controller,MindMapNode): boolean \l+ save(XMLElement): void \l &lt;Initializer&gt;() \l#\
 createDesctiption(): String}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="11542,2311.5", rects="11391,2375.5,11693,2398.5 11391,2322.5,11693,2375.5 11391,2224.5,11693,2322.5", width="4.1944", height="2.4306"];
					freemind_controller_filter_condition_ConditionNotSatisfiedDecorator [label="{+ ConditionNotSatisfiedDecorator|- originalCondition : Condition\l NAME : String\l| &lt;Initializer&gt;() \l load(XMLElement): \
Condition \l+ ConditionNotSatisfiedDecorator(Condition) \l+ checkNode(Controller,MindMapNode): boolean \l+ save(XMLElement): void\
 \l+ getListCellRendererComponent(): JComponent}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="11542,1791.5", rects="11391,1848,11693,1871 11391,1810,11693,1848 11391,1712,11693,1810", width="4.1944", height="2.2222"];
					freemind_controller_filter_condition_SelectedViewCondition [label="{+ SelectedViewCondition|- description : String\l- condition : Condition\l- renderer : JComponent\l|+ getListCellRendererComponent\
(): JComponent \l+ SelectedViewCondition() \l+ save(XMLElement): void \l+ checkNode(Controller,MindMapNode): boolean \l+ toString\
(): String \l+ CreateCondition(): Condition}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="11542,1582.5", rects="11391,1646.5,11693,1669.5 11391,1593.5,11693,1646.5 11391,1495.5,11693,1593.5", width="4.1944", height="2.4306"];
					freemind_controller_filter_condition_ConjunctConditions [label="{+ ConjunctConditions| NAME : String\l- conditions : Object\l|+ save(XMLElement): void \l+ getListCellRendererComponent(): JComponent\
 \l+ checkNode(Controller,MindMapNode): boolean \l+ ConjunctConditions(Object[]) \l load(XMLElement): Condition \l &lt;Initializer\
&gt;()}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="11893,2223.5", rects="11742,2280,12044,2303 11742,2242,12044,2280 11742,2144,12044,2242", width="4.1944", height="2.2222"];
					freemind_controller_filter_condition_AttributeNotExistsCondition [label="{+ AttributeNotExistsCondition|- attribute : String\l ATTRIBUTE : String\l NAME : String\l|+ checkNode(Controller,MindMapNode): \
boolean \l# createDesctiption(): String \l &lt;Initializer&gt;() \l load(XMLElement): Condition \l+ AttributeNotExistsCondition(\
String) \l+ save(XMLElement): void}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="11677,1312.5", rects="11526,1376.5,11828,1399.5 11526,1323.5,11828,1376.5 11526,1225.5,11828,1323.5", width="4.1944", height="2.4306"];
					freemind_controller_filter_condition_NodeCompareCondition [label="{ NodeCompareCondition|- succeed : boolean\l SUCCEED : String\l NAME : String\l VALUE : String\l COMPARATION_RESULT : String\l- \
comparationResult : int\l| NodeCompareCondition(String,boolean,int,boolean) \l load(XMLElement): Condition \l+ save(XMLElement):\
 void \l+ checkNode(Controller,MindMapNode): boolean \l &lt;Initializer&gt;() \l# createDesctiption(): String}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="12601,2253.5", rects="12444,2340,12758,2363 12444,2242,12758,2340 12444,2144,12758,2242", width="4.3611", height="3.0556"];
					freemind_controller_filter_condition_ConditionFactory [label="{+ ConditionFactory| FILTER_DOES_NOT_EXIST : String\l FILTER_NOT_CONTAINS : String\l FILTER_IGNORE_CASE : String\l FILTER_CONTAINS\
 : String\l FILTER_ICON : String\l FILTER_GT : String\l FILTER_LT : String\l FILTER_NODE : String\l FILTER_GE : String\l FILTER\
_IS_NOT_EQUAL_TO : String\l FILTER_LE : String\l FILTER_EXIST : String\l FILTER_IS_EQUAL_TO : String\l|+ ConditionFactory() \l+\
 getAttributeConditionNames(): NamedObject \l createDescription(String,String,String,boolean): String \l+ loadCondition(XMLElement\
): Condition \l+ getNodeConditionNames(): NamedObject \l# createNodeCondition(NamedObject,String,boolean): Condition \l+ createCellRendererComponent\
(String): JComponent \l+ getIconConditionNames(): Object \l+ createCondition(NamedObject,NamedObject,String\
,boolean): Condition \l &lt;Initializer&gt;() \l+ createAttributeCondition(String,NamedObject,String,boolean): Condition}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="11960,1641.5", rects="11742,1818,12178,1841 11742,1615,12178,1818 11742,1442,12178,1615", width="6.0556", height="5.5556"];
				}
				subgraph cluster_freemind_controller_filter_util {
					graph [label=util,
						levelType="4_FAMIX.Namespace",
						bb="12963,1974.2,14062,2922.2"];
					subgraph cluster_freemind_controller_filter_util_SortedMapVector {
						graph [label="+ SortedMapVector",
							levelType="5_FAMIX.Class",
							bb="13531,2542,14054,2891"];
						freemind_controller_filter_util_SortedMapVector [label="{SortedMapVector|- ELEMENT_NOT_FOUND_FLAG : int\l- CAPACITY_INCREMENT : int\l- elements : Vector\l|- findElement(Comparable): int\
 \l+ size(): int \l- findElement(Comparable,int,int): int \l+ getKey(int): Comparable \l+ SortedMapVector() \l+ remove(int): void\
 \l+ add(Comparable,Object): int \l+ containsKey(Comparable): boolean \l &lt;Initializer&gt;() \l+ remove(Comparable): boolean\
 \l+ getValue(Comparable): Object \l+ capacity(): int \l+ getValue(int): Object \l+ clear(): void \l+ indexOf(Comparable): int}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="13663,2705.3", rects="13538,2836.8,13787,2859.8 13538,2783.8,13787,2836.8 13538,2550.8,13787,2783.8", width="3.4583", height="4.3056"];
						freemind_controller_filter_util_SortedMapVector_MapElement [label="{- MapElement|- value : Object\l- key : Comparable\l| getKey(): Comparable \l+ MapElement(Comparable,Object) \l setValue(Object)\
: void \l getValue(): Object}", levelType="6_FAMIX.Class", hasData=true, hasMethods=true, pos="13935,2615.3", rects="13824,2656.8,14045,2679.8 13824,2618.8,14045,2656.8 13824,2550.8,14045,2618.8", width="3.0694", height="1.8056"];
					}
					subgraph cluster_freemind_controller_filter_util_ExtendedComboBoxModel {
						graph [label="+ ExtendedComboBoxModel",
							levelType="5_FAMIX.Class",
							bb="12971,2122,13570,2497"];
						freemind_controller_filter_util_ExtendedComboBoxModel [label="{ExtendedComboBoxModel|- extensionDataListener : ExtensionDataListener\l- extension : SortedListModel\l|+ ExtendedComboBoxModel(\
) \l+ removeElement(Object): void \l- getOwnSize(): int \l- getModel(): ExtendedComboBoxModel \l+ ExtendedComboBoxModel(Vector) \
\l+ getElementAt(int): Object \l+ setExtensionList(SortedListModel): void \l+ getIndexOf(Object): int \l+ getSize(): int \l+ removeElementAt\
(int): void \l- getExtensionSize(): int \l+ removeAllElements(): void \l &lt;Initializer&gt;() \l+ addSortedElement(\
Object): void \l+ ExtendedComboBoxModel(Object[]) \l+ insertElementAt(Object,int): void}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="13120,2311.3", rects="12979,2442.8,13261,2465.8 12979,2404.8,13261,2442.8 12979,2156.8,13261,2404.8", width="3.9167", height="4.3056"];
						freemind_controller_filter_util_ExtendedComboBoxModel_ExtensionDataListener [label="{- ExtensionDataListener|+ intervalRemoved(ListDataEvent): void \l- ExtensionDataListener() \l+ intervalAdded(ListDataEvent): void\
 \l+ contentsChanged(ListDataEvent): void}", levelType="6_FAMIX.Class", hasData=false, hasMethods=true, pos="13439,2176.3", rects="13316,2198.8,13561,2221.8 13316,2130.8,13561,2198.8", width="3.4028", height="1.2778"];
					}
					freemind_controller_filter_util_SortedComboBoxModel [label="{+ SortedComboBoxModel|- selectedItem : Object\l|+ getSelectedItem(): Object \l+ setSelectedItem(Object): void}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="13383,2024.5", rects="13286,2043.5,13480,2066.5 13286,2020.5,13480,2043.5 13286,1982.5,13480,2020.5", width="2.6944", height="1.1806"];
					freemind_controller_filter_util_SortedListModel [label="{+ SortedListModel| replace(Object,Object): void \l*+ clear(): void \l*+ contains(Object): boolean \l*+ add(Object): void \l remove\
(Object): void \l*+ getIndexOf(Object): int}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="13132,2603.5", rects="13041,2641,13224,2664 13041,2543,13224,2641", width="2.5417", height="1.6944"];
					freemind_controller_filter_util_SortedMapListModel [label="{+ SortedMapListModel| model : SortedSet\l|+ lastElement(): Object \l+ addAll(Object[]): void \l+ iterator(): Iterator \l+ firstElement\
(): Object \l+ getIndexOf(Object): int \l+ add(Object): void \l+ clear(): void \l+ remove(Object): void \l+ replace(Object\
,Object): void \l+ getElementAt(int): Object \l+ contains(Object): boolean \l+ getSize(): int \l+ SortedMapListModel()}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="13381,2667.5", rects="13286,2769,13477,2792 13286,2746,13477,2769 13286,2543,13477,2746", width="2.6528", height="3.4722"];
				}
				subgraph cluster_freemind_controller_filter_FilterComposerDialog {
					graph [label="+ FilterComposerDialog",
						levelType="4_FAMIX.Class",
						bb="12964,856.19,14072,1818.2"];
					freemind_controller_filter_FilterComposerDialog [label="{FilterComposerDialog|- simpleCondition : JComboBox\l- btnDelete : JButton\l- simpleAttributeConditionComboBoxModel : DefaultComboBoxModel\
\l- btnAnd : JButton\l- nodes : ExtendedComboBoxModel\l- attributes : JComboBox\l- internalConditionsModel : DefaultComboBoxModel\
\l- c : Controller\l- btnApply : JButton\l- btnCancel : JButton\l- conditionList : JList\l- btnNot : JButton\l- fc : \
FilterController\l- maxButtonDimension : Dimension\l- btnSave : JButton\l- btnAdd : JButton\l- btnOr : JButton\l- btnLoad : JButton\
\l- filteredAttributeComboBoxModel : ExtendedComboBoxModel\l- caseInsensitive : JCheckBox\l- ICON_POSITION : int\l- NODE_POSITION\
 : int\l- registeredAttributes : AttributeRegistry\l- icons : ExtendedComboBoxModel\l- conditionListListener : ConditionListSelectionListener\
\l- btnOK : JButton\l- externalConditionsModel : ComboBoxModel\l- simpleNodeConditionComboBoxModel : DefaultComboBoxModel\
\l- values : JComboBox\l- simpleIconConditionComboBoxModel : DefaultComboBoxModel\l- ft : FilterToolbar\l| mapChanged(\
MindMap): void \l+ setSelectedItem(Object): void \l+ FilterComposerDialog(Controller,FilterToolbar) \l- selectCondition(): boolean\
 \l+ show(): void \l# getFileChooser(): FreeMindFileDialog \l- applyChanges(): void \l- initInternalConditionModel(): void \l \
&lt;Initializer&gt;() \l- getAttributeValue(): String}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="13412,1296.5", rects="13202,1600.5,13621,1623.5 13202,1127.5,13621,1600.5 13202,969.48,13621,1127.5", width="5.8194", height="9.0972"];
					freemind_controller_filter_FilterComposerDialog_ConditionListMouseListener [label="{- ConditionListMouseListener|- ConditionListMouseListener() \l+ mouseClicked(MouseEvent): void}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="13522,895.48", rects="13413,902.98,13631,925.98 13413,864.98,13631,902.98", width="3.0278", height="0.86111"];
					freemind_controller_filter_FilterComposerDialog_LoadAction [label="{- LoadAction|- LoadAction() \l- handleLoadingException(Exception): void \l+ actionPerformed(ActionEvent): void}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="13796,1238.5", rects="13664,1253.5,13927,1276.5 13664,1200.5,13927,1253.5", width="3.6528", height="1.0694"];
					freemind_controller_filter_FilterComposerDialog_AddConditionAction [label="{- AddConditionAction|+ actionPerformed(ActionEvent): void \l AddConditionAction()}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="13572,1693.5", rects="13454,1701,13689,1724 13454,1663,13689,1701", width="3.2639", height="0.86111"];
					freemind_controller_filter_FilterComposerDialog_DeleteConditionAction [label="{- DeleteConditionAction| DeleteConditionAction() \l+ actionPerformed(ActionEvent): void}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="13780,979.48", rects="13664,986.98,13895,1010 13664,948.98,13895,986.98", width="3.2083", height="0.86111"];
					freemind_controller_filter_FilterComposerDialog_SimpleConditionChangeListener [label="{- SimpleConditionChangeListener|- SimpleConditionChangeListener() \l+ itemStateChanged(ItemEvent): void}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="13778,1441.5", rects="13665,1449,13891,1472 13665,1411,13891,1449", width="3.1389", height="0.86111"];
					freemind_controller_filter_FilterComposerDialog_ConditionListSelectionListener [label="{- ConditionListSelectionListener|+ valueChanged(ListSelectionEvent): void \l+ intervalRemoved(ListDataEvent): void \l- ConditionListSelectionListener\
() \l+ contentsChanged(ListDataEvent): void \l+ intervalAdded(ListDataEvent): void}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="13792,1106.5", rects="13665,1136.5,13919,1159.5 13665,1053.5,13919,1136.5", width="3.5278", height="1.4861"];
					freemind_controller_filter_FilterComposerDialog_CreateNotSatisfiedConditionAction [label="{- CreateNotSatisfiedConditionAction| CreateNotSatisfiedConditionAction() \l+ actionPerformed(ActionEvent): void}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="13843,1651.5", rects="13727,1659,13958,1682 13727,1621,13958,1659", width="3.2083", height="0.86111"];
					freemind_controller_filter_FilterComposerDialog_SaveAction [label="{- SaveAction|- SaveAction() \l+ actionPerformed(ActionEvent): void \l- handleSavingException(Exception): void}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="13790,1343.5", rects="13664,1358.5,13915,1381.5 13664,1305.5,13915,1358.5", width="3.4861", height="1.0694"];
					freemind_controller_filter_FilterComposerDialog_CloseAction [label="{- CloseAction|- CloseAction() \l+ actionPerformed(ActionEvent): void}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="13297,1693.5", rects="13181,1701,13412,1724 13181,1663,13412,1701", width="3.2083", height="0.86111"];
					freemind_controller_filter_FilterComposerDialog_CreateDisjunctConditionAction [label="{- CreateDisjunctConditionAction| CreateDisjunctConditionAction() \l+ actionPerformed(ActionEvent): void}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="13948,1756.5", rects="13832,1764,14063,1787 13832,1726,14063,1764", width="3.2083", height="0.86111"];
					freemind_controller_filter_FilterComposerDialog_MindMapFilterFileFilter [label="{- MindMapFilterFileFilter| filter : FileFilter\l|+ accept(File): boolean \l- MindMapFilterFileFilter() \l &lt;Initializer&gt;()\
 \l+ getDescription(): String}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="13078,1572.5", rects="12993,1606.5,13163,1629.5 12993,1583.5,13163,1606.5 12993,1515.5,13163,1583.5", width="2.3611", height="1.5972"];
					freemind_controller_filter_FilterComposerDialog_SelectedAttributeChangeListener [label="{- SelectedAttributeChangeListener|+ itemStateChanged(ItemEvent): void \l- SelectedAttributeChangeListener()}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="13780,1546.5", rects="13665,1554,13895,1577 13665,1516,13895,1554", width="3.1944", height="0.86111"];
					freemind_controller_filter_FilterComposerDialog_CreateConjunctConditionAction [label="{- CreateConjunctConditionAction| CreateConjunctConditionAction() \l+ actionPerformed(ActionEvent): void}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="13087,895.48", rects="12971,902.98,13202,925.98 12971,864.98,13202,902.98", width="3.2083", height="0.86111"];
				}
				subgraph cluster_freemind_controller_filter_FilterToolbar {
					graph [label=" FilterToolbar",
						levelType="4_FAMIX.Class",
						bb="12189,2576.2,12840,3030.2"];
					freemind_controller_filter_FilterToolbar [label="{FilterToolbar|- filterChangeListener : FilterChangeListener\l- filterDialog : FilterComposerDialog\l- activeFilter : Filter\l- \
btnUnfoldAncestors : JButton\l- btnEdit : JButton\l- showAncestors : JCheckBox\l- filterInactiveColor : Color\l- pathToFilterFile\
 : String\l- c : Controller\l- activeFilterConditionComboBox : JComboBox\l- fc : FilterController\l- showDescendants : JCheckBox\
\l| saveConditions(): void \l FilterToolbar(Controller) \l mapChanged(MindMap): void \l- refreshMap(): void \l+ resetFilter(): \
void \l- getSelectedCondition(): Condition \l getFilterDialog(): FilterComposerDialog \l setMapFilter(): void \l initConditions(\
): void \l getFilterConditionModel(): ComboBoxModel \l addStandardConditions(): void \l &lt;Initializer&gt;() \l setFilterConditionModel\
(ComboBoxModel): void}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="12346,2791.5", rects="12197,2975.5,12496,2998.5 12197,2787.5,12496,2975.5 12197,2584.5,12496,2787.5", width="4.1528", height="5.7639"];
					freemind_controller_filter_FilterToolbar_FilterChangeListener [label="{- FilterChangeListener|+ itemStateChanged(ItemEvent): void \l+ FilterChangeListener() \l+ propertyChange(PropertyChangeEvent): \
void \l+ actionPerformed(ActionEvent): void \l- filterChanged(): void}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="12689,2637.5", rects="12547,2667.5,12832,2690.5 12547,2584.5,12832,2667.5", width="3.9583", height="1.4861"];
					freemind_controller_filter_FilterToolbar_UnfoldAncestorsAction [label="{- UnfoldAncestorsAction| UnfoldAncestorsAction() \l- unfoldAncestors(MindMapNode): void \l- setFolded(MindMapNode,boolean): void\
 \l+ actionPerformed(ActionEvent): void}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="12676,2905.5", rects="12547,2928,12805,2951 12547,2860,12805,2928", width="3.5833", height="1.2778"];
					freemind_controller_filter_FilterToolbar_EditFilterAction [label="{- EditFilterAction|- getFilterDialog(): FilterComposerDialog \l+ actionPerformed(ActionEvent): void \l EditFilterAction()}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="12671,2772.5", rects="12547,2787.5,12796,2810.5 12547,2734.5,12796,2787.5", width="3.4583", height="1.0694"];
				}
				freemind_controller_filter_Filter [label="{+ Filter|+ FILTER_SHOW_HIDDEN : int\l+ FILTER_INITIAL_VALUE : int\l+ FILTER_SHOW_MATCHED : int\l+ FILTER_SHOW_ECLIPSED : int\l+\
 FILTER_SHOW_DESCENDANT : int\l+ FILTER_SHOW_ANCESTOR : int\l| getCondition(): Object \l &lt;Initializer&gt;() \l areMatchedShown\
(): boolean \l areHiddenShown(): boolean \l isVisible(MindMapNode): boolean \l areDescendantsShown(): boolean \l areAncestorsShown\
(): boolean \l applyFilter(Controller): void \l areEclipsedShown(): boolean}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="11369,2708.2", rects="11244,2817.2,11494,2840.2 11244,2719.2,11494,2817.2 11244,2576.2,11494,2719.2", width="3.4722", height="3.6806"];
				freemind_controller_filter_DefaultFilter [label="{+ DefaultFilter|- condition : Condition\l- options : int\l|+ DefaultFilter(Condition,boolean,boolean) \l- filterChildren(MindMapNode\
,Controller,boolean,boolean): boolean \l+ selectVisibleNode(MapView): void \l+ areEclipsedShown(): boolean \l- getNearestVisibleParent\
(NodeView): NodeView \l addFilterResult(MindMapNode,int): void \l+ resetFilter(MindMapNode): void \l- applyFilter(MindMapNode\
,Controller,boolean,boolean,boolean): boolean \l+ applyFilter(Controller): void \l+ isVisible(MindMapNode): boolean \l &\
lt;Initializer&gt;() \l+ areDescendantsShown(): boolean \l+ getCondition(): Object \l+ areHiddenShown(): boolean \l+ areMatchedShown\
(): boolean \l+ areAncestorsShown(): boolean}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="12322,753.19", rects="12103,884.69,12540,907.69 12103,846.69,12540,884.69 12103,598.69,12540,846.69", width="6.0694", height="4.3056"];
				freemind_controller_filter_FilterController [label="{+ FilterController| FREEMIND_FILTER_EXTENSION_WITHOUT_DOT : String\l- inactiveFilter : Filter\l- filterToolbar : FilterToolbar\l-\
 map : MindMap\l- conditionFactory : ConditionFactory\l- filterConditionModel : DefaultComboBoxModel\l- conditionRenderer : ConditionRenderer\
\l- c : Controller\l| loadConditions(DefaultComboBoxModel,String): void \l+ isMapModuleChangeAllowed(MapModule,Mode\
,MapModule,Mode): boolean \l+ getMap(): MindMap \l refreshMap(): void \l+ getConditionFactory(): ConditionFactory \l+ setFilterConditionModel\
(DefaultComboBoxModel): void \l+ numberOfOpenMapInformation(int,int): void \l+ getFilterConditionModel(): DefaultComboBoxModel\
 \l- setFilterToolbar(FilterToolbar): void \l &lt;Initializer&gt;() \l+ beforeMapModuleChange(MapModule,Mode,MapModule\
,Mode): void \l+ afterMapModuleChange(MapModule,Mode,MapModule,Mode): void \l saveConditions(DefaultComboBoxModel,String): void\
 \l getConditionRenderer(): ConditionRenderer \l+ FilterController(Controller) \l+ isVisible(): boolean \l+ saveConditions(): \
void \l+ afterMapClose(MapModule,Mode): void \l- createTransparentFilter(): Filter \l+ showFilterToolbar(boolean): void \l+ getFilterToolbar\
(): FilterToolbar}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="11824,2813.2", rects="11588,3027.2,12060,3050.2 11588,2899.2,12060,3027.2 11588,2576.2,12060,2899.2", width="6.5556", height="6.5972"];
				freemind_controller_filter_FilterInfo [label="{+ FilterInfo|- info : int\l|+ setAncestor(): void \l get(): int \l+ reset(): void \l add(int): void \l+ setDescendant(): void \l+\
 isMatched(): boolean \l+ FilterInfo() \l+ isAncestor(): boolean \l &lt;Initializer&gt;() \l+ setMatched(): void}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="11149,1818.2", rects="11072,1897.2,11226,1920.2 11072,1874.2,11226,1897.2 11072,1716.2,11226,1874.2", width="2.1389", height="2.8472"];
			}
			subgraph cluster_freemind_controller_NodeMouseMotionListener {
				graph [label="+ NodeMouseMotionListener",
					levelType="3_FAMIX.Class",
					bb="14179,835.39,14679,1194.4"];
				freemind_controller_NodeMouseMotionListener [label="{NodeMouseMotionListener|- c : Controller\l- mListener : NodeMouseMotionObserver\l|+ mouseDragged(MouseEvent): void \l+ mouseEntered\
(MouseEvent): void \l+ updateSelectionMethod(): void \l+ mouseReleased(MouseEvent): void \l+ mouseExited(MouseEvent): void \l+\
 NodeMouseMotionListener(Controller) \l+ mousePressed(MouseEvent): void \l+ mouseMoved(MouseEvent): void \l+ mouseClicked(MouseEvent\
): void \l+ deregister(): void \l+ register(NodeMouseMotionObserver): void}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="14323,960.69", rects="14187,1054.7,14458,1077.7 14187,1016.7,14458,1054.7 14187,843.69,14458,1016.7", width="3.7639", height="3.2639"];
				freemind_controller_NodeMouseMotionListener_NodeMouseMotionObserver [label="{+ NodeMouseMotionObserver| updateSelectionMethod(): void}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="14577,1139.7", rects="14482,1139.7,14672,1162.7 14482,1116.7,14672,1139.7", width="2.6389", height="0.65278"];
			}
			subgraph cluster_freemind_controller_NodeMotionListener {
				graph [label="+ NodeMotionListener",
					levelType="3_FAMIX.Class",
					bb="12539,179.39,12954,502.39"];
				freemind_controller_NodeMotionListener [label="{NodeMotionListener|- c : Controller\l- mListener : NodeMotionAdapter\l|+ mousePressed(MouseEvent): void \l+ mouseReleased(MouseEvent\
): void \l+ register(NodeMotionAdapter): void \l+ mouseMoved(MouseEvent): void \l+ mouseDragged(MouseEvent): void \l+ mouseClicked\
(MouseEvent): void \l+ mouseEntered(MouseEvent): void \l+ NodeMotionListener(Controller) \l+ mouseExited(MouseEvent): void\
 \l+ deregister(): void}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="12662,297.69", rects="12547,384.19,12777,407.19 12547,346.19,12777,384.19 12547,188.19,12777,346.19", width="3.1944", height="3.0556"];
				freemind_controller_NodeMotionListener_NodeMotionAdapter [label="{*+ NodeMotionAdapter}", levelType="4_FAMIX.Class", hasData=false, hasMethods=false, pos="12870,452.69", rects="12794,434.69,12946,470.69", width="2.1111", height="0.51389"];
			}
			subgraph cluster_freemind_controller_StructuredMenuHolder {
				graph [label="+ StructuredMenuHolder",
					levelType="3_FAMIX.Class",
					bb="12867,3213.4,13800,4062.4"];
				freemind_controller_StructuredMenuHolder [label="{StructuredMenuHolder|- mIndent : int\l- mOutputString : String\l- ORDER_NAME : String\l- logger : Logger\l- sSelectedIcon : ImageIcon\
\l+ AMOUNT_OF_VISIBLE_MENU_ITEMS : String\l menuMap : Map\l- SEPARATOR_TEXT : String\l- blindIcon : Icon\l- SELECTED_ICON_\
PATH : String\l+ ICON_SIZE : int\l|- getCategoryMap(StringTokenizer,Map): MapTokenPair \l- setSelected(JMenuItem,boolean): void \
\l+ StructuredMenuHolder() \l- adjustMenuItem(JMenuItem): void \l+ addCategory(String): void \l &lt;Initializer&gt;() \l+ updateMenus\
(JToolBar,String): void \l+ toString(): String \l+ addMenu(JMenu,String): JMenu \l+ addAction(Action,String): JMenuItem \l+\
 lastItemIsASeparator(JMenu): boolean \l- updateMenus(MenuAdder,Map,MenuAdderCreator): void \l+ lastItemIsASeparator(JPopupMenu)\
: boolean \l+ updateMenus(JMenuBar,String): void \l+ addMenuItem(JMenuItem,String): JMenuItem \l+ addSeparator(String): void \l-\
 addMenu(Object,StringTokenizer): Object \l- print(String): void \l+ updateMenus(JPopupMenu,String): void \l- adjustTooltips(StructuredMenuItemHolder\
): void}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="13249,3583.7", rects="13073,3812.7,13426,3835.7 13073,3639.7,13426,3812.7 13073,3331.7,13426,3639.7", width="4.9028", height="7.0139"];
				freemind_controller_StructuredMenuHolder_PrintMenuAdder [label="{- PrintMenuAdder|+ addMenuItem(StructuredMenuItemHolder): void \l+ addCategory(String): void \l+ addSeparator(): void \l- PrintMenuAdder\
()}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="13620,3839.7", rects="13469,3862.2,13772,3885.2 13469,3794.2,13772,3862.2", width="4.2083", height="1.2778"];
				freemind_controller_StructuredMenuHolder_SeparatorHolder [label="{- SeparatorHolder|+ SeparatorHolder()}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="13314,3266.7", rects="13249,3266.7,13379,3289.7 13249,3243.7,13379,3266.7", width="1.8056", height="0.65278"];
				freemind_controller_StructuredMenuHolder_StructuredMenuListener [label="{+ StructuredMenuListener|- menuItemHolder : Vector\l| &lt;Initializer&gt;() \l+ menuCanceled(MenuEvent): void \l+ menuSelected(\
MenuEvent): void \l+ StructuredMenuListener() \l+ menuDeselected(MenuEvent): void \l+ addItem(StructuredMenuItemHolder): void}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="13603,3689.7", rects="13469,3738.7,13737,3761.7 13469,3715.7,13737,3738.7 13469,3617.7,13737,3715.7", width="3.7222", height="2.0139"];
				freemind_controller_StructuredMenuHolder_MenuItemAdder [label="{- MenuItemAdder|- myMenuItem : JMenu\l- mAmountOfVisibleMenuItems : int\l- mMenuCounter : int\l- listener : StructuredMenuListener\
\l- mBaseMenuItem : JMenu\l- mItemCounter : int\l|+ addCategory(String): void \l &lt;Initializer&gt;() \l+ MenuItemAdder(JMenu\
) \l+ addSeparator(): void \l+ addMenuItem(StructuredMenuItemHolder): void}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="13618,3477.7", rects="13469,3556.7,13768,3579.7 13469,3458.7,13768,3556.7 13469,3375.7,13768,3458.7", width="4.1528", height="2.8472"];
				freemind_controller_StructuredMenuHolder_DefaultMenuAdderCreator [label="{- DefaultMenuAdderCreator|- DefaultMenuAdderCreator() \l+ createAdder(JMenu): MenuAdder}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="12983,4000.7", rects="12875,4008.2,13091,4031.2 12875,3970.2,13091,4008.2", width=3, height="0.86111"];
				freemind_controller_StructuredMenuHolder_MenuAdderCreator [label="{- MenuAdderCreator| createAdder(JMenu): MenuAdder}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="12999,3904.7", rects="12897,3904.7,13101,3927.7 12897,3881.7,13101,3904.7", width="2.8333", height="0.65278"];
				freemind_controller_StructuredMenuHolder_MapTokenPair [label="{- MapTokenPair| map : Map\l token : String\l order : Vector\l| MapTokenPair(Map,String,Vector)}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="13685,3975.7", rects="13579,4002.2,13792,4025.2 13579,3949.2,13792,4002.2 13579,3926.2,13792,3949.2", width="2.9583", height="1.3889"];
				freemind_controller_StructuredMenuHolder_MenuAdder [label="{- MenuAdder| addCategory(String): void \l addSeparator(): void \l addMenuItem(StructuredMenuItemHolder): void}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="13284,3919.7", rects="13139,3934.7,13430,3957.7 13139,3881.7,13430,3934.7", width="4.0417", height="1.0694"];
				freemind_controller_StructuredMenuHolder_PrintMenuAdderCreator [label="{- PrintMenuAdderCreator|+ createAdder(JMenu): MenuAdder \l- PrintMenuAdderCreator()}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="12985,3252.7", rects="12875,3260.2,13095,3283.2 12875,3222.2,13095,3260.2", width="3.0556", height="0.86111"];
				freemind_controller_StructuredMenuHolder_MenuEventSupplier [label="{+ MenuEventSupplier|*+ addMenuListener(MenuListener): void \l removeMenuListener(MenuListener): void}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="13596,3296.7", rects="13469,3304.2,13723,3327.2 13469,3266.2,13723,3304.2", width="3.5278", height="0.86111"];
			}
			subgraph cluster_freemind_controller_MapMouseMotionListener {
				graph [label="+ MapMouseMotionListener",
					levelType="3_FAMIX.Class",
					bb="13113,179.89,13658,499.89"];
				freemind_controller_MapMouseMotionListener [label="{MapMouseMotionListener|- mReceiver : MapMouseMotionReceiver\l- c : Controller\l|+ register(MapMouseMotionReceiver): void \l+ deregister\
(): void \l- handlePopup(MouseEvent): void \l+ mouseMoved(MouseEvent): void \l+ mouseEntered(MouseEvent): void \l+ mouseDragged\
(MouseEvent): void \l+ mousePressed(MouseEvent): void \l+ mouseReleased(MouseEvent): void \l+ mouseClicked(MouseEvent): void\
 \l+ MapMouseMotionListener(Controller) \l+ mouseExited(MouseEvent): void}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="13254,351.19", rects="13121,445.19,13387,468.19 13121,407.19,13387,445.19 13121,234.19,13387,407.19", width="3.6944", height="3.2639"];
				freemind_controller_MapMouseMotionListener_MapMouseMotionReceiver [label="{+ MapMouseMotionReceiver|+ mousePressed(MouseEvent): void \l+ mouseReleased(MouseEvent): void \l+ mouseDragged(MouseEvent): void\
}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="13535,226.19", rects="13420,241.19,13650,264.19 13420,188.19,13650,241.19", width="3.1944", height="1.0694"];
			}
			subgraph cluster_freemind_controller_MapModuleManager {
				graph [label="+ MapModuleManager",
					levelType="3_FAMIX.Class",
					bb="11801,3213.9,12739,3779.9"];
				freemind_controller_MapModuleManager [label="{MapModuleManager|- mController : Controller\l- mapModule : MapModule\l- mapModuleVector : Vector\l- mCurrentMode : Mode\l listener\
 : MapModuleChangeObserverCompound\l|- sameFile(URL,URL): boolean \l MapModuleManager(Controller) \l+ tryToChangeToMapModule(\
String): boolean \l nextMapModule(): void \l+ changeToMapModule(String): boolean \l+ removeListener(MapModuleChangeObserver): void\
 \l previousMapModule(): void \l+ newMapModule(MindMap,ModeController): void \l+ close(boolean,StringBuffer): boolean \l+ updateMapModuleName\
(): void \l+ getMapKeys(): List \l+ swapModules(int,int): void \l+ getMapModuleVector(): List \l+ changeToMapModule\
(MapModule): boolean \l+ checkIfFileIsAlreadyOpened(URL): String \l- fireNumberOfOpenMapInformation(): void \l+ changeToMapOfMode\
(Mode): void \l setMapModule(MapModule,Mode): boolean \l+ getModuleGivenModeController(ModeController): MapModule \l+ addListener\
(MapModuleChangeObserver): void \l- addToOrChangeInMapModules(String,MapModule): void \l &lt;Initializer&gt;() \l+ getMapModule\
(): MapModule \l+ getMapModules(): Map}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="12003,3459.2", rects="11809,3673.2,12196,3696.2 11809,3590.2,12196,3673.2 11809,3222.2,12196,3590.2", width="5.375", height="6.5972"];
				freemind_controller_MapModuleManager_MapTitleChangeListener [label="{+ MapTitleChangeListener|*+ setMapTitle(String,MapModule,MindMap): void}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="12412,3725.2", rects="12259,3725.2,12564,3748.2 12259,3702.2,12564,3725.2", width="4.2361", height="0.65278"];
				freemind_controller_MapModuleManager_MapTitleContributor [label="{+ MapTitleContributor|*+ getMapTitle(String,MapModule,MindMap): String}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="12417,3635.2", rects="12260,3635.2,12574,3658.2 12260,3612.2,12574,3635.2", width="4.3611", height="0.65278"];
				freemind_controller_MapModuleManager_MapModuleChangeObserverCompound [label="{+ MapModuleChangeObserverCompound|- listeners : HashSet\l|+ afterMapClose(MapModule,Mode): void \l &lt;Initializer&gt;() \l+ numberOfOpenMapInformation\
(int,int): void \l+ isMapModuleChangeAllowed(MapModule,Mode,MapModule,Mode): boolean \l+ beforeMapModuleChange\
(MapModule,Mode,MapModule,Mode): void \l+ addListener(MapModuleChangeObserver): void \l+ afterMapModuleChange(MapModule,Mode\
,MapModule,Mode): void \l+ removeListener(MapModuleChangeObserver): void \l+ MapModuleChangeObserverCompound()}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="12496,3317.2", rects="12260,3388.7,12732,3411.7 12260,3365.7,12732,3388.7 12260,3222.7,12732,3365.7", width="6.5556", height="2.6389"];
				freemind_controller_MapModuleManager_MapModuleChangeObserver [label="{+ MapModuleChangeObserver| afterMapModuleChange(MapModule,Mode,MapModule,Mode): void \l afterMapClose(MapModule,Mode): void \l \
beforeMapModuleChange(MapModule,Mode,MapModule,Mode): void \l isMapModuleChangeAllowed(MapModule,Mode,MapModule,Mode): boolean \l\
 numberOfOpenMapInformation(int,int): void}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="12492,3515.2", rects="12260,3545.2,12724,3568.2 12260,3462.2,12724,3545.2", width="6.4444", height="1.4861"];
			}
			subgraph cluster_freemind_controller_Controller {
				graph [label="+ Controller",
					levelType="3_FAMIX.Class",
					bb="13933,3213.9,15524,5677.9"];
				freemind_controller_Controller [label="{Controller|- mZoomListenerSet : HashSet\l- mTabbedPaneMapModules : Vector\l- mTabbedPane : JTabbedPane\l- mFilterController : FilterController\
\l- PAGE_FORMAT_PROPERTY : String\l+ toggleToolbar : Action\l- antialiasEdges : boolean\l- mapModuleManager : MapModuleManager\
\l leftToolbarVisible : boolean\l+ showAttributeManagerAction : Action\l- nodeMouseMotionListener : NodeMouseMotionListener\
\l+ zoomIn : Action\l+ localDocumentationLinkConverter : LocalLinkConverter\l+ toggleMenubar : Action\l- filterToolbar :\
 JToolBar\l+ optionSelectionMechanismAction : Action\l+ close : CloseAction\l+ documentation : Action\l+ showFilterToolbarAction\
 : Action\l+ keyDocumentation : Action\l+ freemindUrl : OpenURLAction\l+ page : Action\l- logger : Logger\l- antialiasAll : boolean\
\l+ toggleLeftToolbar : Action\l- printerJob : PrinterJob\l+ showAllAttributes : Action\l isPrintingAllowed : boolean\l+ moveToRoot\
 : Action\l+ webDocu : Action\l- attributeDialog : AttributeManagerDialog\l- nodeMotionListener : NodeMotionListener\l- mapMouseMotionListener\
 : MapMouseMotionListener\l- lastOpened : LastOpenedList\l- nodeDropListener : NodeDropListener\l+ faq : Action\
\l+ navigationNextMap : Action\l+ JAVA_VERSION : String\l+ showSelectedAttributes : Action\l- mMode : Mode\l- zoomValues : float\
\l+ hideAllAttributes : Action\l- nodeKeyListener : NodeKeyListener\l+ print : Action\l+ optionHTMLExportFoldingAction : Action\
\l+ quit : Action\l- fontMap : Map\l- pageFormat : PageFormat\l- northToolbarPanel : JPanel\l+ navigationMoveMapLeftAction : Action\
\l+ printPreview : Action\l- mModescreator : ModesCreator\l- mMapTitleContributorSet : HashSet\l- colorChooser : JColorChooser\
\l+ license : Action\l- propertyChangeListeners : Vector\l toolbarVisible : boolean\l- bswatch : Icon\l- toolbar : MainToolBar\
\l- frame : FreeMindMain\l menubarVisible : boolean\l- mTabbedPaneSelectionUpdate : boolean\l+ optionAntialiasAction : OptionAntialiasAction\
\l+ propertyAction : PropertyAction\l- mMapTitleChangeListenerSet : HashSet\l+ navigationMoveMapRightAction : Action\
\l- nodeDragListener : NodeDragListener\l+ about : Action\l+ showSelectionAsRectangle : Action\l+ navigationPreviousMap : Action\
\l+ zoomOut : Action\l+ printDirect : Action\l- mapMouseWheelListener : MapMouseWheelListener\l|+ getZooms(): String \l+ getCommonJColorChooser\
(): JColorChooser \l+ getModel(): MindMap \l+ getMapMouseWheelListener(): MapMouseWheelListener \l+ isMapModuleChangeAllowed\
(MapModule,Mode,MapModule,Mode): boolean \l+ getMap(): MindMap \l+ initialization(): void \l# storePageFormat(): void\
 \l+ getFilterController(): FilterController \l+ setAllActions(boolean): void \l+ getResourceString(String): String \l+ getNodeKeyListener\
(): NodeKeyListener \l+ getMapMouseMotionListener(): MapMouseMotionListener \l+ numberOfOpenMapInformation(int,int): \
void \l# changeZoomValueProperty(float): void \l+ setLeftToolbarVisible(boolean): void \l+ setToolbarVisible(boolean): void \l+ \
addPropertyChangeListener(FreemindPropertyListener): void \l+ getPropertyChangeListeners(): Collection \l- isSelectionAsRectangle\
(): boolean \l+ getNodeDropListener(): NodeDropListener \l+ registerMapTitleChangeListener(MapTitleChangeListener): void \l+ getNodeMotionListener\
(): NodeMotionListener \l- quit(): void \l- getAntialiasEdges(): boolean \l- getToolBar(): JToolBar \l+ getMapModuleManager\
(): MapModuleManager \l+ setZoom(float): void \l- acquirePrinterJobAndPageFormat(): boolean \l+ createNewMode(String\
): boolean \l+ deregisterMapTitleContributor(MapTitleContributor): void \l+ addPropertyChangeListenerAndPropagate(FreemindPropertyListener\
): void \l+ showCommonJColorChooserDialog(Component,String,Color): Color \l+ getDefaultFont(): Font \l+ getDefaultFontStyle\
(): int \l+ moveTab(int,int): void \l+ setAntialiasAll(boolean): void \l+ afterMapModuleChange(MapModule,Mode,MapModule,Mode\
): void \l+ setAntialiasEdges(boolean): void \l+ getMode(): Mode \l+ obtainFocusForSelected(): void \l+ getMapModule(): MapModule\
 \l+ informationMessage(Object,JComponent): void \l+ removePropertyChangeListener(FreemindPropertyListener): void \l+ Controller\
(FreeMindMain) \l+ getLastOpenedList(): LastOpenedList \l+ getPageFormat(): PageFormat \l+ errorMessage(Object,JComponent): \
void \l+ getIntProperty(String,int): int \l+ getModeController(): ModeController \l &lt;Initializer&gt;() \l+ getDefaultFontSize\
(): int \l+ registerMapTitleContributor(MapTitleContributor): void \l moveToRoot(): void \l+ getToolbar(): JToolBar \l+ errorMessage\
(Object): void \l+ getFontThroughMap(Font): Font \l+ getView(): MapView \l+ getJFrame(): JFrame \l+ setProperty(String,String\
): void \l+ getFrame(): FreeMindMain \l+ afterMapClose(MapModule,Mode): void \l+ getProperty(String): String \l+ deregisterZoomListener\
(ZoomListener): void \l+ deregisterMapTitleChangeListener(MapTitleChangeListener): void \l+ addTabbedPane(JTabbedPane): \
void \l+ getDefaultFontFamilyName(): String \l+ init(): void \l+ setTitle(): void \l getModes(): Set \l+ close(boolean): void \l+\
 toggleSelectionAsRectangle(): void \l+ setEdgesRenderingHint(Graphics2D): Object \l- firePropertyChanged(String,String,String)\
: void \l+ getResource(String): URL \l+ beforeMapModuleChange(MapModule,Mode,MapModule,Mode): void \l+ setMenubarVisible(boolean\
): void \l+ getNodeDragListener(): NodeDragListener \l+ setAttributeViewType(MindMap,String): void \l- tabSelectionChanged(): void\
 \l+ registerZoomListener(ZoomListener): void \l+ informationMessage(Object): void \l+ setTextRenderingHint(Graphics2D): void \
\l+ setFrame(FreeMindMain): void \l+ getNodeMouseMotionListener(): NodeMouseMotionListener \l- getAntialiasAll(): boolean}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="14633,4434.2", rects="14397,5623.2,14869,5646.2 14397,4520.2,14869,5623.2 14397,3222.2,14869,4520.2", width="6.5556", height="33.681"];
				freemind_controller_Controller_AboutAction [label="{- AboutAction| controller : Controller\l| AboutAction(Controller) \l+ actionPerformed(ActionEvent): void}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="15328,4200.2", rects="15213,4219.2,15444,4242.2 15213,4196.2,15444,4219.2 15213,4158.2,15444,4196.2", width="3.2083", height="1.1806"];
				freemind_controller_Controller_OpenURLAction [label="{- OpenURLAction| c : Controller\l- url : String\l|+ actionPerformed(ActionEvent): void \l OpenURLAction(Controller,String,String\
)}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="15052,4784.2", rects="14925,4810.7,15180,4833.7 14925,4772.7,15180,4810.7 14925,4734.7,15180,4772.7", width="3.5417", height="1.3889"];
				freemind_controller_Controller_ShowSelectedAttributesAction [label="{- ShowSelectedAttributesAction|+ actionPerformed(ActionEvent): void \l setAttributeViewType(MindMap): void \l+ ShowSelectedAttributesAction\
()}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="14230,4532.2", rects="14109,4547.2,14351,4570.2 14109,4494.2,14351,4547.2", width="3.3611", height="1.0694"];
				freemind_controller_Controller_ToggleToolbarAction [label="{- ToggleToolbarAction| ToggleToolbarAction(Controller) \l+ isSelected(JMenuItem,Action): boolean \l+ actionPerformed(ActionEvent\
): void}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="14234,4076.2", rects="14109,4091.2,14360,4114.2 14109,4038.2,14360,4091.2", width="3.4861", height="1.0694"];
				freemind_controller_Controller_PropertyAction [label="{+ PropertyAction|- controller : Controller\l|+ PropertyAction(Controller) \l+ actionPerformed(ActionEvent): void}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="15400,5136.2", rects="15285,5155.2,15516,5178.2 15285,5132.2,15516,5155.2 15285,5094.2,15516,5132.2", width="3.2083", height="1.1806"];
				freemind_controller_Controller_Closer [label="{ Closer|+ windowClosing(WindowEvent): void \l Closer()}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="15332,4765.2", rects="15213,4772.7,15452,4795.7 15213,4734.7,15452,4772.7", width="3.3194", height="0.86111"];
				freemind_controller_Controller_ShowAllAttributesAction [label="{- ShowAllAttributesAction|+ actionPerformed(ActionEvent): void \l+ setAttributeViewType(MindMap): void \l+ ShowAllAttributesAction\
()}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="15290,5012.2", rects="15165,5027.2,15415,5050.2 15165,4974.2,15415,5027.2", width="3.4722", height="1.0694"];
				freemind_controller_Controller_LicenseAction [label="{- LicenseAction| controller : Controller\l| LicenseAction(Controller) \l+ actionPerformed(ActionEvent): void}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="15328,4536.2", rects="15213,4555.2,15444,4578.2 15213,4532.2,15444,4555.2 15213,4494.2,15444,4532.2", width="3.2083", height="1.1806"];
				freemind_controller_Controller_DisposeOnClose [label="{ DisposeOnClose|+ componentHidden(ComponentEvent): void \l DisposeOnClose()}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="15038,3973.2", rects="14901,3980.7,15175,4003.7 14901,3942.7,15175,3980.7", width="3.8056", height="0.86111"];
				freemind_controller_Controller_KeyDocumentationAction [label="{- KeyDocumentationAction| controller : Controller\l|+ actionPerformed(ActionEvent): void \l KeyDocumentationAction(Controller)}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="14250,4872.2", rects="14133,4891.2,14368,4914.2 14133,4868.2,14368,4891.2 14133,4830.2,14368,4868.2", width="3.2639", height="1.1806"];
				freemind_controller_Controller_LocalLinkConverter [label="{+ LocalLinkConverter| convertLocalLink(String): URL}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="15260,3797.2", rects="15165,3797.2,15356,3820.2 15165,3774.2,15356,3797.2", width="2.6528", height="0.65278"];
				freemind_controller_Controller_ShowSelectionAsRectangleAction [label="{# ShowSelectionAsRectangleAction|+ actionPerformed(ActionEvent): void \l+ isSelected(JMenuItem,Action): boolean \l+ ShowSelectionAsRectangleAction\
(Controller)}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="15043,4652.2", rects="14901,4667.2,15186,4690.2 14901,4614.2,15186,4667.2", width="3.9583", height="1.0694"];
				freemind_controller_Controller_CloseAction [label="{+ CloseAction|- controller : Controller\l| CloseAction(Controller) \l+ actionPerformed(ActionEvent): void}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="15328,4416.2", rects="15213,4435.2,15444,4458.2 15213,4412.2,15444,4435.2 15213,4374.2,15444,4412.2", width="3.2083", height="1.1806"];
				freemind_controller_Controller_ZoomInAction [label="{# ZoomInAction|+ ZoomInAction(Controller) \l+ actionPerformed(ActionEvent): void}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="14248,5125.2", rects="14133,5132.7,14364,5155.7 14133,5094.7,14364,5132.7", width="3.2083", height="0.86111"];
				freemind_controller_Controller_DocumentationAction [label="{- DocumentationAction| controller : Controller\l|+ actionPerformed(ActionEvent): void \l DocumentationAction(Controller)}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="15018,5016.2", rects="14901,5035.2,15136,5058.2 14901,5012.2,15136,5035.2 14901,4974.2,15136,5012.2", width="3.2639", height="1.1806"];
				freemind_controller_Controller_QuitAction [label="{- QuitAction| QuitAction(Controller) \l+ actionPerformed(ActionEvent): void}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="15136,5125.2", rects="15021,5132.7,15252,5155.7 15021,5094.7,15252,5132.7", width="3.2083", height="0.86111"];
				freemind_controller_Controller_NavigationNextMapAction [label="{- NavigationNextMapAction|+ actionPerformed(ActionEvent): void \l NavigationNextMapAction(Controller)}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="15018,3877.2", rects="14901,3884.7,15136,3907.7 14901,3846.7,15136,3884.7", width="3.2639", height="0.86111"];
				freemind_controller_Controller_MoveToRootAction [label="{- MoveToRootAction|+ actionPerformed(ActionEvent): void \l MoveToRootAction(Controller)}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="15330,4309.2", rects="15213,4316.7,15448,4339.7 15213,4278.7,15448,4316.7", width="3.2639", height="0.86111"];
				freemind_controller_Controller_OptionHTMLExportFoldingAction [label="{- OptionHTMLExportFoldingAction| OptionHTMLExportFoldingAction(Controller) \l+ actionPerformed(ActionEvent): void}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="15210,4909.2", rects="15069,4916.7,15351,4939.7 15069,4878.7,15351,4916.7", width="3.9167", height="0.86111"];
				freemind_controller_Controller_ToggleLeftToolbarAction [label="{- ToggleLeftToolbarAction|+ actionPerformed(ActionEvent): void \l ToggleLeftToolbarAction(Controller) \l+ isSelected(JMenuItem,\
Action): boolean}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="14233,3956.2", rects="14109,3971.2,14357,3994.2 14109,3918.2,14357,3971.2", width="3.4444", height="1.0694"];
				freemind_controller_Controller_ZoomOutAction [label="{# ZoomOutAction|+ actionPerformed(ActionEvent): void \l+ ZoomOutAction(Controller)}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="15354,4645.2", rects="15237,4652.7,15472,4675.7 15237,4614.7,15472,4652.7", width="3.2639", height="0.86111"];
				freemind_controller_Controller_OptionAntialiasAction [label="{+ OptionAntialiasAction|+ actionPerformed(ActionEvent): void \l+ changeAntialias(String): void \l+ propertyChanged(String,String\
,String): void \l OptionAntialiasAction(Controller)}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="15039,4372.2", rects="14901,4394.7,15178,4417.7 14901,4326.7,15178,4394.7", width="3.8472", height="1.2778"];
				freemind_controller_Controller_NavigationPreviousMapAction [label="{- NavigationPreviousMapAction|+ actionPerformed(ActionEvent): void \l NavigationPreviousMapAction(Controller)}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="15341,3901.2", rects="15213,3908.7,15470,3931.7 15213,3870.7,15470,3908.7", width="3.5694", height="0.86111"];
				freemind_controller_Controller_OptionSelectionMechanismAction [label="{- OptionSelectionMechanismAction| c : Controller\l|+ actionPerformed(ActionEvent): void \l OptionSelectionMechanismAction(Controller\
) \l- changeSelection(String): void \l+ propertyChanged(String,String,String): void}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="15041,4239.2", rects="14901,4273.2,15182,4296.2 14901,4250.2,15182,4273.2 14901,4182.2,15182,4250.2", width="3.9028", height="1.5972"];
				freemind_controller_Controller_ShowFilterToolbarAction [label="{- ShowFilterToolbarAction| ShowFilterToolbarAction(Controller) \l+ actionPerformed(ActionEvent): void}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="14128,3853.2", rects="14013,3860.7,14244,3883.7 14013,3822.7,14244,3860.7", width="3.2083", height="0.86111"];
				freemind_controller_Controller_NavigationMoveMapRightAction [label="{- NavigationMoveMapRightAction|+ actionPerformed(ActionEvent): void \l NavigationMoveMapRightAction(Controller)}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="14220,4765.2", rects="14085,4772.7,14355,4795.7 14085,4734.7,14355,4772.7", width="3.75", height="0.86111"];
				freemind_controller_Controller_DefaultLocalLinkConverter [label="{- DefaultLocalLinkConverter|+ convertLocalLink(String): URL \l- DefaultLocalLinkConverter()}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="15004,3781.2", rects="14901,3788.7,15108,3811.7 14901,3750.7,15108,3788.7", width="2.875", height="0.86111"];
				freemind_controller_Controller_PrintAction [label="{- PrintAction| isDlg : boolean\l controller : Controller\l|+ actionPerformed(ActionEvent): void \l PrintAction(Controller,boolean\
)}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="15018,4088.2", rects="14901,4114.7,15136,4137.7 14901,4076.7,15136,4114.7 14901,4038.7,15136,4076.7", width="3.2639", height="1.3889"];
				freemind_controller_Controller_ToggleMenubarAction [label="{- ToggleMenubarAction|+ actionPerformed(ActionEvent): void \l ToggleMenubarAction(Controller) \l+ isSelected(JMenuItem,Action):\
 boolean}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="14233,4316.2", rects="14109,4331.2,14357,4354.2 14109,4278.2,14357,4331.2", width="3.4444", height="1.0694"];
				freemind_controller_Controller_ShowAttributeDialogAction [label="{- ShowAttributeDialogAction|- c : Controller\l|+ actionPerformed(ActionEvent): void \l- getAttributeDialog(): AttributeManagerDialog\
 \l ShowAttributeDialogAction(Controller)}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="15040,4520.2", rects="14901,4546.7,15179,4569.7 14901,4523.7,15179,4546.7 14901,4470.7,15179,4523.7", width="3.8611", height="1.3889"];
				freemind_controller_Controller_HideAllAttributesAction [label="{- HideAllAttributesAction|+ actionPerformed(ActionEvent): void \l+ HideAllAttributesAction() \l+ setAttributeViewType(MindMap):\
 void}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="15288,4076.2", rects="15165,4091.2,15411,4114.2 15165,4038.2,15411,4091.2", width="3.4167", height="1.0694"];
				freemind_controller_Controller_PrintPreviewAction [label="{- PrintPreviewAction| controller : Controller\l|+ actionPerformed(ActionEvent): void \l PrintPreviewAction(Controller)}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="14250,4200.2", rects="14133,4219.2,14368,4242.2 14133,4196.2,14368,4219.2 14133,4158.2,14368,4196.2", width="3.2639", height="1.1806"];
				freemind_controller_Controller_NavigationMoveMapLeftAction [label="{- NavigationMoveMapLeftAction|+ actionPerformed(ActionEvent): void \l NavigationMoveMapLeftAction(Controller)}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="14216,4429.2", rects="14085,4436.7,14348,4459.7 14085,4398.7,14348,4436.7", width="3.6528", height="0.86111"];
				freemind_controller_Controller_PageAction [label="{- PageAction| controller : Controller\l|+ actionPerformed(ActionEvent): void \l PageAction(Controller)}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="14250,4656.2", rects="14133,4675.2,14368,4698.2 14133,4652.2,14368,4675.2 14133,4614.2,14368,4652.2", width="3.2639", height="1.1806"];
				freemind_controller_Controller_ColorTracker [label="{- ColorTracker| chooser : JColorChooser\l color : Color\l|+ ColorTracker(JColorChooser) \l+ getColor(): Color \l+ actionPerformed\
(ActionEvent): void}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="14248,5007.2", rects="14133,5041.2,14364,5064.2 14133,5003.2,14364,5041.2 14133,4950.2,14364,5003.2", width="3.2083", height="1.5972"];
				freemind_controller_Controller_BackgroundSwatch [label="{- BackgroundSwatch|- BackgroundSwatch() \l getColor(): Color}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="14014,5173.2", rects="13941,5180.7,14088,5203.7 13941,5142.7,14088,5180.7", width="2.0417", height="0.86111"];
			}
			subgraph cluster_freemind_controller_MenuBar {
				graph [label="+ MenuBar",
					levelType="3_FAMIX.Class",
					bb="10981,3377.4,11667,4026.4"];
				freemind_controller_MenuBar [label="{MenuBar|- formatmenu : JMenu\l+ MINDMAP_MENU : String\l mapsMenuActionListener : ActionListener\l+ MODES_MENU : String\l- MENU_\
MINDMAP_CATEGORY : String\l+ INSERT_MENU : String\l- logger : Logger\l+ HELP_MENU : String\l c : Controller\l+ NAVIGATE_MENU : String\
\l+ POPUP_MENU : String\l- filemenu : JMenu\l+ FILE_MENU : String\l+ FORMAT_MENU : String\l- mapsmenu : JMenu\l mapsPopupMenu\
 : JPopupMenu\l+ EDIT_MENU : String\l- menuHolder : StructuredMenuHolder\l+ MENU_BAR_PREFIX : String\l+ EXTRAS_MENU : String\l+\
 GENERAL_POPUP_PREFIX : String\l+ VIEW_MENU : String\l- editmenu : JMenu\l|- updateModeMenu(): void \l- addAdditionalPopupActions\
(): void \l+ updateMenus(ModeController): void \l- updateViewMenu(): void \l+ processKeyBinding(KeyStroke,KeyEvent,int,boolean\
): boolean \l- addOptionSet(Action,String[],JMenu,String): void \l- copyMenuItems(JMenu,JMenu): void \l getMapsPopupMenu(): JPopupMenu\
 \l- updateMapsMenu(StructuredMenuHolder,String): void \l &lt;Initializer&gt;() \l+ getMenuHolder(): StructuredMenuHolder \
\l- updateEditMenu(): void \l- updateLastOpenedList(): void \l- updateFileMenu(): void \l+ MenuBar(Controller)}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="11182,3690.7", rects="10990,3972.2,11374,3995.2 10990,3619.2,11374,3972.2 10990,3386.2,11374,3619.2", width="5.3333", height="8.4722"];
				freemind_controller_MenuBar_ModesMenuActionListener [label="{- ModesMenuActionListener|+ actionPerformed(ActionEvent): void \l- ModesMenuActionListener()}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="11542,3764.7", rects="11424,3772.2,11659,3795.2 11424,3734.2,11659,3772.2", width="3.2639", height="0.86111"];
				freemind_controller_MenuBar_MapsMenuActionListener [label="{- MapsMenuActionListener|+ actionPerformed(ActionEvent): void \l- MapsMenuActionListener()}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="11542,3648.7", rects="11424,3656.2,11659,3679.2 11424,3618.2,11659,3656.2", width="3.2639", height="0.86111"];
				freemind_controller_MenuBar_LastOpenedActionListener [label="{- LastOpenedActionListener|- mKey : String\l|+ actionPerformed(ActionEvent): void \l+ LastOpenedActionListener(String)}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="11542,3514.7", rects="11424,3533.7,11659,3556.7 11424,3510.7,11659,3533.7 11424,3472.7,11659,3510.7", width="3.2639", height="1.1806"];
			}
			freemind_controller_ZoomListener [label="{+ ZoomListener|*+ setZoom(float): void}", levelType="3_FAMIX.Class", hasData=false, hasMethods=true, pos="12368,448.89", rects="12293,448.89,12443,471.89 12293,425.89,12443,448.89", width="2.0833", height="0.65278"];
			freemind_controller_LastStateStorageManagement [label="{+ LastStateStorageManagement|# logger : Logger\l mLastStatesMap : UNKNOWN\l+ LIST_AMOUNT_LIMIT : int\l|+ LastStateStorageManagement\
(String) \l &lt;Initializer&gt;() \l+ getLastFocussedTab(): int \l+ getXml(): String \l- setLastChanged(MindmapLastStateStorage\
): void \l+ getLastOpenList(): List \l getStorage(?) \l+ clearTabIndices(): void \l+ getStorage(String): UNKNOWN \l changeOrAdd\
(?) \l+ setLastFocussedTab(int): void \l+ changeOrAdd(MindmapLastStateStorage): void}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="13922,311.89", rects="13769,420.89,14075,443.89 13769,367.89,14075,420.89 13769,179.89,14075,367.89", width="4.25", height="3.6806"];
			freemind_controller_FreeMindToolBar [label="{+ FreeMindToolBar|- nullInsets : Insets\l|+ FreeMindToolBar(int) \l+ FreeMindToolBar() \l &lt;Initializer&gt;() \l+ FreeMindToolBar\
(String,int) \l+ FreeMindToolBar(String) \l+ add(Action): JButton}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="10831,3203.9", rects="10735,3252.9,10927,3275.9 10735,3229.9,10927,3252.9 10735,3131.9,10927,3229.9", width="2.6667", height="2.0139"];
			freemind_controller_MindMapNodesSelection [label="{+ MindMapNodesSelection|+ htmlFlavor : DataFlavor\l+ rtfFlavor : DataFlavor\l- nodesContent : String\l- htmlContent : String\l-\
 imageContent : String\l+ mindMapNodesFlavor : DataFlavor\l- dropActionContent : String\l- stringContent : String\l- fileList : \
List\l+ copyNodeIdsFlavor : DataFlavor\l+ dropActionFlavor : DataFlavor\l- nodeIdsContent : List\l+ fileListFlavor : DataFlavor\l-\
 rtfContent : String\l| &lt;Initializer&gt;() \l+ isDataFlavorSupported(DataFlavor): boolean \l+ getTransferDataFlavors(): DataFlavor\
 \l+ lostOwnership(Clipboard,Transferable): void \l+ setDropAction(String): void \l+ getTransferData(DataFlavor): Object \
\l+ MindMapNodesSelection(String,String,String,String,String,String,List,List)}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="14402,1504.9", rects="14179,1658.9,14625,1681.9 14179,1440.9,14625,1658.9 14179,1327.9,14625,1440.9", width="6.1944", height="4.9306"];
			freemind_controller_MenuItemSelectedListener [label="{+ MenuItemSelectedListener| isSelected(JMenuItem,Action): boolean}", levelType="3_FAMIX.Class", hasData=false, hasMethods=true, pos="11591,3236.9", rects="11473,3236.9,11709,3259.9 11473,3213.9,11709,3236.9", width="3.2778", height="0.65278"];
			freemind_controller_MenuItemEnabledListener [label="{+ MenuItemEnabledListener| isEnabled(JMenuItem,Action): boolean}", levelType="3_FAMIX.Class", hasData=false, hasMethods=true, pos="11261,3236.9", rects="11145,3236.9,11378,3259.9 11145,3213.9,11378,3236.9", width="3.2361", height="0.65278"];
			freemind_controller_ColorSwatch [label="{ ColorSwatch| color : Color\l| &lt;Initializer&gt;() \l+ ColorSwatch(Color) \l getColor(): Color \l+ paintIcon(Component,Graphics\
,int,int): void \l+ getIconWidth(): int \l+ getIconHeight(): int \l+ ColorSwatch()}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="12023,341.89", rects="11883,398.39,12164,421.39 11883,375.39,12164,398.39 11883,262.39,12164,375.39", width="3.9028", height="2.2222"];
			freemind_controller_MainToolBar [label="{+ MainToolBar| controller : Controller\l- logger : Logger\l|+ setAllActions(boolean): void \l+ MainToolBar(Controller) \l &lt;Initializer\
&gt;() \l+ activate(boolean): void}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="10831,2950.9", rects="10735,2992.4,10927,3015.4 10735,2954.4,10927,2992.4 10735,2886.4,10927,2954.4", width="2.6667", height="1.8056"];
			freemind_controller_LastOpenedList [label="{+ LastOpenedList|- mlastOpenedList : List\l- maxEntries : int\l- mController : Controller\l- mRestorableToMapName : Map\l|+ open\
(String): boolean \l listIterator(): ListIterator \l mapClosed(MapModule): void \l load(String): void \l+ save(): String \l+ LastOpenedList\
(Controller,String) \l+ add(String,String): void \l+ mapOpened(MapModule): void \l &lt;Initializer&gt;()}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="14291,2592.9", rects="14179,2686.9,14403,2709.9 14179,2618.9,14403,2686.9 14179,2475.9,14403,2618.9", width="3.1111", height="3.2639"];
			freemind_controller_NodeDropListener [label="{+ NodeDropListener|- c : Controller\l- mListener : DropTargetListener\l|+ dragOver(DropTargetDragEvent): void \l+ register(DropTargetListener\
): void \l+ dragEnter(DropTargetDragEvent): void \l+ drop(DropTargetDropEvent): void \l+ deregister(): void \l+ dragExit\
(DropTargetEvent): void \l+ NodeDropListener(Controller) \l+ dropActionChanged(DropTargetDragEvent): void}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="14332,1914.9", rects="14179,1986.4,14486,2009.4 14179,1948.4,14486,1986.4 14179,1820.4,14486,1948.4", width="4.2639", height="2.6389"];
			freemind_controller_StructuredMenuItemHolder [label="{+ StructuredMenuItemHolder|- action : Action\l- enabledListener : MenuItemEnabledListener\l- selectionListener : MenuItemSelectedListener\
\l- menuItem : JMenuItem\l|+ getSelectionListener(): MenuItemSelectedListener \l+ getMenuItem(): JMenuItem \l+ getAction\
(): Action \l+ getEnabledListener(): MenuItemEnabledListener \l+ setAction(Action): void \l+ setEnabledListener(MenuItemEnabledListener\
): void \l+ StructuredMenuItemHolder() \l+ setSelectedListener(MenuItemSelectedListener): void \l+ setMenuItem(JMenuItem\
): void}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="11145,378.89", rects="10981,472.89,11309,495.89 10981,404.89,11309,472.89 10981,261.89,11309,404.89", width="4.5556", height="3.2639"];
			freemind_controller_MapMouseWheelListener [label="{+ MapMouseWheelListener|- c : Controller\l- mListener : MouseWheelListener\l|+ mouseWheelMoved(MouseWheelEvent): void \l+ deregister\
(): void \l+ register(MouseWheelListener): void \l+ MapMouseWheelListener(Controller)}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="14324,2868.9", rects="14179,2910.4,14469,2933.4 14179,2872.4,14469,2910.4 14179,2804.4,14469,2872.4", width="4.0278", height="1.8056"];
			freemind_controller_BlindIcon [label="{+ BlindIcon|- length : int\l|+ getIconWidth(): int \l+ paintIcon(Component,Graphics,int,int): void \l+ BlindIcon(int) \l+ getIconHeight\
(): int}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="10875,72.889", rects="10735,106.89,11016,129.89 10735,83.889,11016,106.89 10735,15.889,11016,83.889", width="3.9028", height="1.5972"];
			freemind_controller_NodeKeyListener [label="{+ NodeKeyListener|- mListener : KeyListener\l- c : Controller\l|+ keyReleased(KeyEvent): void \l+ register(KeyListener): void \l+\
 keyPressed(KeyEvent): void \l+ deregister(): void \l+ NodeKeyListener(Controller) \l+ keyTyped(KeyEvent): void}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="14277,2227.9", rects="14179,2284.4,14376,2307.4 14179,2246.4,14376,2284.4 14179,2148.4,14376,2246.4", width="2.7361", height="2.2222"];
			freemind_controller_FreeMindPopupMenu [label="{+ FreeMindPopupMenu|# logger : Logger\l- listeners : HashSet\l| &lt;Initializer&gt;() \l+ addMenuListener(MenuListener): void \l+\
 FreeMindPopupMenu() \l# firePopupMenuCanceled(): void \l# firePopupMenuWillBecomeInvisible(): void \l+ removeMenuListener(MenuListener\
): void \l# firePopupMenuWillBecomeVisible(): void}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="11610,348.89", rects="11473,412.89,11747,435.89 11473,374.89,11747,412.89 11473,261.89,11747,374.89", width="3.8056", height="2.4306"];
			freemind_controller_NodeDragListener [label="{+ NodeDragListener|- c : Controller\l|+ NodeDragListener(Controller) \l+ dragGestureRecognized(DragGestureEvent): void \l+ getCursorByAction\
(int): Cursor}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="11299,65.889", rects="11145,92.389,11454,115.39 11145,69.389,11454,92.389 11145,16.389,11454,69.389", width="4.2917", height="1.3889"];
		}
		subgraph cluster_freemind_modes {
			graph [label=modes,
				levelType="2_FAMIX.Namespace",
				bb="7.2897,1080.1,10060,10948"];
			subgraph cluster_freemind_modes_viewmodes {
				graph [label=viewmodes,
					levelType="3_FAMIX.Namespace",
					bb="6035.4,1087.9,6815.4,1516.9"];
				freemind_modes_viewmodes_ViewControllerAdapter [label="{*+ ViewControllerAdapter|+ toggleChildrenFolded : CommonToggleChildrenFoldedAction\l+ find : FindAction\l+ findNext : FindNextAction\
\l+ toggleFolded : CommonToggleFoldedAction\l|+ plainClick(MouseEvent): void \l+ setFolded(MindMapNode,boolean): void \l+ shutdownController\
(): void \l &lt;Initializer&gt;() \l+ startupController(): void \l# setAllActions(boolean): void \l+ createXMLElement\
(): XMLElement \l+ doubleClick(MouseEvent): void \l+ extendSelection(MouseEvent): boolean \l+ ViewControllerAdapter(Mode)}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="6231.6,1221.2", rects="6043.6,1322.7,6419.6,1345.7 6043.6,1254.7,6419.6,1322.7 6043.6,1096.7,6419.6,1254.7", width="5.2222", height="3.4722"];
				freemind_modes_viewmodes_CommonToggleChildrenFoldedAction [label="{+ CommonToggleChildrenFoldedAction|- logger : Logger\l- modeController : ViewControllerAdapter\l|+ CommonToggleChildrenFoldedAction\
(ViewControllerAdapter) \l+ actionPerformed(ActionEvent): void}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="6613.6,1436.2", rects="6420.1,1462.7,6807.1,1485.7 6420.1,1424.7,6807.1,1462.7 6420.1,1386.7,6807.1,1424.7", width="5.375", height="1.3889"];
			}
			subgraph cluster_freemind_modes_browsemode {
				graph [label=browsemode,
					levelType="3_FAMIX.Namespace",
					bb="6175.4,9067.9,7663.4,10453"];
				subgraph cluster_freemind_modes_browsemode_BrowseController {
					graph [label="+ BrowseController",
						levelType="4_FAMIX.Class",
						bb="6407.6,9395.7,7117.6,9894.7"];
					freemind_modes_browsemode_BrowseController [label="{BrowseController| nodeDown : Action\l- toolbar : JToolBar\l+ followMapLink : FollowMapLink\l followLink : Action\l- popupmenu :\
 JPopupMenu\l- mBrowseHookFactory : HookFactory\l- noteIcon : ImageIcon\l nodeUp : Action\l|+ newNode(Object,MindMap): MindMapNode\
 \l+ plainClick(MouseEvent): void \l+ BrowseController(Mode) \l- setNoteIcon(MindMapNode): void \l+ load(File): ModeController\
 \l+ newModel(ModeController): MapAdapter \l- getGotoLinkNodeAction(MindMapNode): GotoLinkNodeAction \l# restoreMapsLastState(ModeController\
,MapAdapter): void \l+ getPopupMenu(): JPopupMenu \l getToolBar(): BrowseToolBar \l+ startupController(): void \l+ getHookFactory\
(): HookFactory \l+ getModeToolBar(): JToolBar \l+ updateMenus(StructuredMenuHolder): void \l+ doubleClick(): void \
\l+ getPopupForModel(Object): JPopupMenu \l+ newMap(MindMap): void \l+ load(URL): ModeController \l# setAllActions(boolean): void\
 \l+ createXMLElement(): XMLElement}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="6610.7,9634", rects="6415.2,9840.5,6806.2,9863.5 6415.2,9712.5,6806.2,9840.5 6415.2,9404.5,6806.2,9712.5", width="5.4306", height="6.3889"];
					freemind_modes_browsemode_BrowseController_FollowMapLink [label="{+ FollowMapLink|- logger : Logger\l- modeController : ViewControllerAdapter\l|+ isEnabled(JMenuItem,Action): boolean \l+ FollowMapLink\
(ViewControllerAdapter) \l+ actionPerformed(ActionEvent): void \l# getHook(): MapNodePositionHolderBase}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="6979.7,9469", rects="6849.7,9510.5,7109.7,9533.5 6849.7,9472.5,7109.7,9510.5 6849.7,9404.5,7109.7,9472.5", width="3.6111", height="1.8056"];
					freemind_modes_browsemode_BrowseController_FollowLinkAction [label="{- FollowLinkAction| FollowLinkAction() \l+ actionPerformed(ActionEvent): void}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="6964.7,9621", rects="6849.2,9628.5,7080.2,9651.5 6849.2,9590.5,7080.2,9628.5", width="3.2083", height="0.86111"];
				}
				freemind_modes_browsemode_BrowseCloudModel [label="{+ BrowseCloudModel|+ save(): XMLElement \l+ BrowseCloudModel(MindMapNode,FreeMindMain)}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="6344.6,10067", rects="6183.6,10075,6505.6,10098 6183.6,10037,6505.6,10075", width="4.4722", height="0.86111"];
				freemind_modes_browsemode_BrowseToolBar [label="{+ BrowseToolBar|+ BROWSE_URL_STORAGE_KEY : String\l- c : ControllerAdapter\l- urlfield : PersistentEditableComboBox\l| setURLField\
(String): void \l &lt;Initializer&gt;() \l+ BrowseToolBar(ControllerAdapter)}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="7152.6,10357", rects="7015.1,10399,7290.1,10422 7015.1,10346,7290.1,10399 7015.1,10293,7290.1,10346", width="3.8194", height="1.8056"];
				freemind_modes_browsemode_BrowseNodeModel [label="{+ BrowseNodeModel|+ save(): XMLElement \l+ isWriteable(): boolean \l+ BrowseNodeModel(FreeMindMain,MindMap) \l+ BrowseNodeModel\
(Object,FreeMindMain,MindMap)}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="7275.6,9122.2", rects="7111.1,9144.7,7440.1,9167.7 7111.1,9076.7,7440.1,9144.7", width="4.5694", height="1.2778"];
				freemind_modes_browsemode_BrowseArrowLinkModel [label="{+ BrowseArrowLinkModel|+ save(): XMLElement \l+ clone(): Object \l+ changeInclination(MapView,int,int,int,int): void \l+ BrowseArrowLinkModel\
(MindMapNode,MindMapNode,FreeMindMain) \l+ toString(): String}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="7395.6,9577.2", rects="7175.1,9607.2,7616.1,9630.2 7175.1,9524.2,7616.1,9607.2", width="6.125", height="1.4861"];
				freemind_modes_browsemode_BrowseMapModel [label="{+ BrowseMapModel|- url : URL\l- linkRegistry : MindMapLinkRegistry\l|+ getXml(Writer): void \l# setFile(): void \l+ load(URL): \
void \l+ getLinkRegistry(): MindMapLinkRegistry \l+ save(File): boolean \l+ toString(): String \l+ BrowseMapModel(FreeMindMain,ModeController\
) \l+ setURL(URL): void \l+ getFile(): File \l+ BrowseMapModel(BrowseNodeModel,FreeMindMain,ModeController) \l loadTree\
(URL): BrowseNodeModel \l+ isSaved(): boolean \l+ getFilteredXml(Writer): void \l+ getURL(): URL \l+ setLinkInclinationChanged\
(): void}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="6784.6,10087", rects="6567.6,10211,7001.6,10234 6567.6,10173,7001.6,10211 6567.6,9940.2,7001.6,10173", width="6.0278", height="4.0972"];
				freemind_modes_browsemode_BrowsePopupMenu [label="{+ BrowsePopupMenu|- c : BrowseController\l|# add(Action,String): void \l+ popupMenuWillBecomeVisible(PopupMenuEvent): void \l+ \
popupMenuWillBecomeInvisible(PopupMenuEvent): void \l+ popupMenuCanceled(PopupMenuEvent): void \l+ BrowsePopupMenu(BrowseController\
)}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="6489.6,9269.2", rects="6311.6,9310.7,6667.6,9333.7 6311.6,9287.7,6667.6,9310.7 6311.6,9204.7,6667.6,9287.7", width="4.9444", height="1.8056"];
				freemind_modes_browsemode_BrowseMode [label="{+ BrowseMode|+ MODENAME : String\l- c : Controller\l- isRunning : boolean\l- modecontroller : BrowseController\l|+ getController\
(): Controller \l+ BrowseMode() \l+ toString(): String \l+ init(Controller): void \l+ getDefaultModeController(): ModeController\
 \l+ restore(String): void \l &lt;Initializer&gt;() \l+ createModeController(): ModeController \l+ activate(): void}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="6388.6,10281", rects="6247.1,10375,6530.1,10398 6247.1,10307,6530.1,10375 6247.1,10164,6530.1,10307", width="3.9306", height="3.2639"];
				freemind_modes_browsemode_NodeNoteViewer [label="{+ NodeNoteViewer|- noteViewer : JLabel\l- mBrowseController : ControllerAdapter\l- noteIcon : ImageIcon\l- noteScrollPane : JComponent\
\l|+ onSaveNode(MindMapNode): void \l+ onLostFocusNode(NodeView): void \l+ onSelectionChange(NodeView,boolean): void \l+ \
NodeNoteViewer(ControllerAdapter) \l# getNoteViewerComponent(String): JComponent \l# setStateIcon(MindMapNode,boolean): void \l+\
 onFocusNode(NodeView): void \l &lt;Initializer&gt;() \l+ onUpdateNodeHook(MindMapNode): void}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="6909.6,9225.2", rects="6759.6,9319.2,7059.6,9342.2 6759.6,9251.2,7059.6,9319.2 6759.6,9108.2,7059.6,9251.2", width="4.1667", height="3.2639"];
				freemind_modes_browsemode_BrowseReminderHook [label="{+ BrowseReminderHook|# setToolTip(MindMapNode,String,String): void \l# nodeRefresh(MindMapNode): void \l+ BrowseReminderHook()}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="6329.6,9114.2", rects="6183.1,9129.2,6476.1,9152.2 6183.1,9076.2,6476.1,9129.2", width="4.0694", height="1.0694"];
				freemind_modes_browsemode_EncryptedBrowseNode [label="{+ EncryptedBrowseNode|- encryptedIcon : ImageIcon\l- isDecrypted : boolean\l# logger : Logger\l- mModeController : ModeController\
\l- encryptedContent : String\l- decryptedIcon : ImageIcon\l|+ setFolded(boolean): void \l+ EncryptedBrowseNode(Object,FreeMindMain\
,ModeController) \l &lt;Initializer&gt;() \l+ EncryptedBrowseNode(FreeMindMain,ModeController) \l+ updateIcon(): void \l+ setAdditionalInfo\
(String): void}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="7369.6,9346.2", rects="7175.1,9432.7,7564.1,9455.7 7175.1,9334.7,7564.1,9432.7 7175.1,9236.7,7564.1,9334.7", width="5.4028", height="3.0556"];
				freemind_modes_browsemode_BrowseHookFactory [label="{+ BrowseHookFactory|+ getHookMenuPositions(String): List \l+ getPossibleModeControllerHooks(): Vector \l+ createNodeHook(String\
): NodeHook \l+ getRegistrations(): List \l+ createModeControllerHook(String): ModeControllerHook \l+ getInstanciationMethod(String\
): HookInstanciationMethod \l+ getPluginBaseClass(String): Object \l+ getPossibleNodeHooks(): Vector \l+ BrowseHookFactory()}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="7353.6,9767.2", rects="7175.1,9827.2,7532.1,9850.2 7175.1,9684.2,7532.1,9827.2", width="4.9583", height="2.3194"];
				freemind_modes_browsemode_BrowseXMLElement [label="{+ BrowseXMLElement|- mModeController : ModeController\l- ENCRYPTED_BROWSE_NODE : String\l|# createCloudAdapter(NodeAdapter,FreeMindMain\
): CloudAdapter \l# createAnotherElement(): XMLElement \l# createEdgeAdapter(NodeAdapter,FreeMindMain): EdgeAdapter \l# \
createArrowLinkAdapter(NodeAdapter,NodeAdapter,FreeMindMain): ArrowLinkAdapter \l# BrowseXMLElement(ModeController,Vector,HashMap\
) \l# createArrowLinkTarget(NodeAdapter,NodeAdapter,FreeMindMain): ArrowLinkTarget \l# createNodeAdapter(FreeMindMain,String): \
NodeAdapter \l# createEncryptedNode(String): NodeAdapter \l &lt;Initializer&gt;() \l+ BrowseXMLElement(ModeController)}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="7313.6,10050", rects="7047.1,10137,7580.1,10160 7047.1,10099,7580.1,10137 7047.1,9940.7,7580.1,10099", width="7.4028", height="3.0556"];
				freemind_modes_browsemode_BrowseEdgeModel [label="{+ BrowseEdgeModel|+ setStyle(String): void \l+ save(): XMLElement \l+ BrowseEdgeModel(MindMapNode,FreeMindMain) \l+ setColor(Color\
): void}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="7495.6,10274", rects="7335.6,10297,7655.6,10320 7335.6,10229,7655.6,10297", width="4.4444", height="1.2778"];
			}
			subgraph cluster_freemind_modes_common {
				graph [label=common,
					levelType="3_FAMIX.Namespace",
					bb="7574.9,1788.4,10052,4184.4"];
				subgraph cluster_freemind_modes_common_listeners {
					graph [label=listeners,
						levelType="4_FAMIX.Namespace",
						bb="9023.1,2916.2,10025,3595.2"];
					subgraph cluster_freemind_modes_common_listeners_CommonNodeMouseMotionListener {
						graph [label="+ CommonNodeMouseMotionListener",
							levelType="5_FAMIX.Class",
							bb="9030.7,2924,9747.7,3333"];
						freemind_modes_common_listeners_CommonNodeMouseMotionListener [label="{CommonNodeMouseMotionListener|- mMousePressedEvent : MouseEvent\l- timeForDelayedSelection : IntHolder\l- timerForDelayedSelection\
 : Timer\l- c : ModeController\l- controlRegionForDelayedSelection : Rectangle\l- logger : Logger\l- delayedSelectionEnabled \
: BooleanHolder\l|+ updateSelectionMethod(): void \l+ mouseEntered(MouseEvent): void \l+ mouseMoved(MouseEvent): void \l# handlePopupMenu\
(MouseEvent): void \l+ mouseClicked(MouseEvent): void \l+ createTimer(MouseEvent): void \l+ mousePressed(MouseEvent): void\
 \l# getControlRegion(Point2D): Rectangle \l+ mouseDragged(MouseEvent): void \l# stopTimerForDelayedSelection(): void \l+ CommonNodeMouseMotionListener\
(ModeController) \l+ mouseExited(MouseEvent): void \l+ mouseReleased(MouseEvent): void}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="9206.9,3132.3", rects="9038.4,3278.8,9375.4,3301.8 9038.4,3165.8,9375.4,3278.8 9038.4,2962.8,9375.4,3165.8", width="4.6806", height="4.7222"];
						freemind_modes_common_listeners_CommonNodeMouseMotionListener_timeDelayedSelection [label="{# timeDelayedSelection|- c : ModeController\l- e : MouseEvent\l|+ run(): void \l timeDelayedSelection(ModeController,MouseEvent\
)}", levelType="6_FAMIX.Class", hasData=true, hasMethods=true, pos="9583.9,2982.3", rects="9428.4,3008.8,9739.4,3031.8 9428.4,2970.8,9739.4,3008.8 9428.4,2932.8,9739.4,2970.8", width="4.3194", height="1.3889"];
					}
					freemind_modes_common_listeners_CommonMouseMotionManager [label="{+ CommonMouseMotionManager| originY : int\l originX : int\l- mController : ModeController\l|+ mouseDragged(MouseEvent): void \l+\
 CommonMouseMotionManager(ModeController) \l+ mousePressed(MouseEvent): void \l &lt;Initializer&gt;() \l+ mouseReleased(MouseEvent\
): void}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="9466.2,3484.5", rects="9311.2,3541,9621.2,3564 9311.2,3488,9621.2,3541 9311.2,3405,9621.2,3488", width="4.3056", height="2.2222"];
					freemind_modes_common_listeners_MindMapMouseWheelEventHandler [label="{+ MindMapMouseWheelEventHandler|- SCROLL_SKIPS : int\l- ZOOM_MASK : int\l- HORIZONTAL_SCROLL_MASK : int\l- logger : Logger\l|+ \
MindMapMouseWheelEventHandler(ControllerAdapter) \l+ mouseWheelMoved(MouseWheelEvent): void \l &lt;Initializer&gt;()}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="9844.2,3476.5", rects="9671.2,3525.5,10017,3548.5 9671.2,3457.5,10017,3525.5 9671.2,3404.5,10017,3457.5", width="4.8056", height="2.0139"];
				}
				subgraph cluster_freemind_modes_common_plugins {
					graph [label=plugins,
						levelType="4_FAMIX.Namespace",
						bb="7903.1,2036.7,8919.1,3294.7"];
					subgraph cluster_freemind_modes_common_plugins_ReminderHookBase {
						graph [label="*+ ReminderHookBase",
							levelType="5_FAMIX.Class",
							bb="7911.2,2044.5,8521.2,2573.5"];
						freemind_modes_common_plugins_ReminderHookBase [label="{ReminderHookBase|+ REMINDUSERAT : String\l- STATE_TOOLTIP : String\l- CLOCK_VISIBLE : int\l- clockIcon : ImageIcon\l- remindUserAt\
 : long\l- flagIcon : ImageIcon\l- REMOVE_CLOCK : int\l- BLINK_INTERVAL_IN_MILLIES : int\l+ PLUGIN_LABEL : String\l- timer : \
Timer\l- mStateTooltipName : String\l- bellIcon : ImageIcon\l- CLOCK_INVISIBLE : int\l|+ displayState(int,MindMapNode,boolean): \
void \l- getFlagIcon(): ImageIcon \l+ setRemindUserAt(long): void \l+ loadFrom(XMLElement): void \l+ getRemindUserAt(): long \l*\
# nodeRefresh(MindMapNode): void \l+ ReminderHookBase() \l- getBellIcon(): ImageIcon \l*# setToolTip(MindMapNode,String,String):\
 void \l+ shutdownMapHook(): void \l+ save(XMLElement): void \l- scheduleTimer(): void \l &lt;Initializer&gt;() \l+ getRemindUserAtAsSecondsFromNow\
(): int \l- getClockIcon(): ImageIcon \l+ invoke(MindMapNode): void \l+ getStateKey(): String}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="8069.4,2297.8", rects="7919.4,2519.3,8219.4,2542.3 7919.4,2316.3,8219.4,2519.3 7919.4,2053.3,8219.4,2316.3", width="4.1667", height="6.8056"];
						freemind_modes_common_plugins_ReminderHookBase_TimerBlinkTask [label="{+ TimerBlinkTask|- stateAdded : boolean\l|+ TimerBlinkTask(boolean) \l &lt;Initializer&gt;() \l+ actionPerformed(ActionEvent): \
void}", levelType="6_FAMIX.Class", hasData=true, hasMethods=true, pos="8397.4,2168.8", rects="8281.9,2195.3,8512.9,2218.3 8281.9,2172.3,8512.9,2195.3 8281.9,2119.3,8512.9,2172.3", width="3.2083", height="1.3889"];
					}
					freemind_modes_common_plugins_MapNodePositionHolderBase [label="{+ MapNodePositionHolderBase|+ SHORT_MAPNIK : String\l+ NODE_MAP_LOCATION_ICON : String\l+ SHORT_TRANSPORT_MAP : String\l# XML_STORAGE\
_TILE_SOURCE : String\l# mTooltipLocation : String\l# XML_STORAGE_MAP_LAT : String\l+ SHORT_MAP_QUEST_OPEN_MAP : String\l-\
 mValues : HashMap\l# XML_STORAGE_MAP_TOOLTIP_LOCATION : String\l+ TILE_SOURCE_CYCLE_MAP : String\l+ sMapLocationIcon : ImageIcon\
\l# XML_STORAGE_POS_LON : String\l# XML_STORAGE_MAP_LON : String\l# XML_STORAGE_POS_LAT : String\l+ TILE_SOURCE_TRANSPORT_MAP :\
 String\l+ TILE_SOURCE_MAP_QUEST_OPEN_MAP : String\l# NODE_MAP_SHOW_TOOLTIP : String\l+ TILE_SOURCE_MAPNIK : String\l+ NODE_MAP_\
HOOK_NAME : String\l# NODE_MAP_STORE_TOOLTIP : String\l# mTooltipFile : File\l# XML_STORAGE_ZOOM : String\l+ SHORT_CYCLE_MAP : String\
\l|+ getBarePosition(): String \l &lt;Initializer&gt;() \l# isTooltipDesired(): boolean \l+ shutdownMapHook(): void \l# hideTooltip\
(): void \l+ addTooltip(): void \l# setStateIcon(MindMapNode,boolean): void \l+ getMapLocationIcon(): ImageIcon \l+ getBaseHook\
(MindMapNode): MapNodePositionHolderBase \l+ MapNodePositionHolderBase() \l+ getImageHtml(): String \l+ loadFrom(XMLElement\
): void \l+ showTooltip(): void \l+ invoke(MindMapNode): void}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="8723.2,2966", rects="8535.2,3240,8911.2,3263 8535.2,2887,8911.2,3240 8535.2,2669,8911.2,2887", width="5.2222", height="8.2639"];
					freemind_modes_common_plugins_NodeNoteBase [label="{*+ NodeNoteBase|+ NODE_NOTE_ICON : String\l| &lt;Initializer&gt;()}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="8345.2,2704", rects="8246.7,2715.5,8443.7,2738.5 8246.7,2692.5,8443.7,2715.5 8246.7,2669.5,8443.7,2692.5", width="2.7361", height="0.97222"];
				}
				subgraph cluster_freemind_modes_common_dialogs {
					graph [label=dialogs,
						levelType="4_FAMIX.Namespace",
						bb="9022.6,2036.2,10026,2815.2"];
					subgraph cluster_freemind_modes_common_dialogs_IconSelectionPopupDialog {
						graph [label="+ IconSelectionPopupDialog",
							levelType="5_FAMIX.Class",
							bb="9030.7,2044.5,9600.7,2738.5"];
						freemind_modes_common_dialogs_IconSelectionPopupDialog [label="{IconSelectionPopupDialog|- iconLabels : JLabel\l- mModifiers : int\l- lastPosition : Position\l- iconPanel : JPanel\l- descriptionLabel\
 : JLabel\l- xDimension : int\l- selected : Position\l- yDimension : int\l- numOfIcons : int\l- freeMindMain : FreeMindMain\
\l- result : int\l- icons : Vector\l|+ mouseReleased(MouseEvent): void \l- cursorDown(): void \l+ mouseExited(MouseEvent): void\
 \l+ keyReleased(KeyEvent): void \l+ IconSelectionPopupDialog(JFrame,Vector,FreeMindMain) \l- cursorRight(): void \l- cursorUp\
(): void \l- setSelectedPosition(Position): void \l+ keyPressed(KeyEvent): void \l- select(Position): void \l- getSelectedPosition\
(): Position \l- getPositionFromIndex(int): Position \l- addIcon(int): void \l+ getResult(): int \l- getKeyStrokeForEvent(KeyEvent\
): KeyStroke \l+ getModifiers(): int \l- findIndexByKeyEvent(KeyEvent): int \l- canSelect(Position): boolean \l+ mousePressed\
(MouseEvent): void \l+ mouseEntered(MouseEvent): void \l- unhighlight(Position): void \l+ mouseClicked(MouseEvent): void \l- calculateIndex\
(Position): int \l &lt;Initializer&gt;() \l- cursorLeft(): void \l- getPosition(JLabel): Position \l+ keyTyped(KeyEvent\
): void \l- close(): void \l- highlight(Position): void}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="9217.9,2379.8", rects="9038.4,2683.8,9397.4,2706.8 9038.4,2495.8,9397.4,2683.8 9038.4,2052.8,9397.4,2495.8", width="4.9861", height="9.0972"];
						freemind_modes_common_dialogs_IconSelectionPopupDialog_Position [label="{ Position|- y : int\l- x : int\l|+ Position(int,int) \l+ getY(): int \l+ toString(): String \l+ getX(): int}", levelType="6_FAMIX.Class", hasData=true, hasMethods=true, pos="9529.9,2195.8", rects="9467.4,2237.3,9592.4,2260.3 9467.4,2199.3,9592.4,2237.3 9467.4,2131.3,9592.4,2199.3", width="1.7361", height="1.8056"];
					}
					freemind_modes_common_dialogs_EnterPasswordDialog [label="{+ EnterPasswordDialog|- password : StringBuffer\l- jPasswordField : JPasswordField\l- jLabel : JLabel\l- jLabel1 : JLabel\l- enterTwoPasswords\
 : boolean\l- mTranslator : TextTranslator\l- jLabel2 : JLabel\l- jCancelButton : JButton\l- jContentPane : JPanel\
\l+ CANCEL : int\l- result : int\l+ OK : int\l- jPasswordField1 : JPasswordField\l- jOKButton : JButton\l|- getJOKButton(): JButton\
 \l+ EnterPasswordDialog() \l- okPressed(): void \l+ EnterPasswordDialog(JFrame,TextTranslator,boolean) \l- getJPasswordField1\
(): JPasswordField \l- getJContentPane(): JPanel \l- getJCancelButton(): JButton \l- getJPasswordField(): JPasswordField \l- checkEqualAndMinimumSize\
(): boolean \l- close(): void \l- initialize(): void \l &lt;Initializer&gt;() \l- cancelPressed(): void \l+\
 getPassword(): StringBuffer \l+ getResult(): int}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="9848.7,2281.5", rects="9680.2,2495.5,10017,2518.5 9680.2,2277.5,10017,2495.5 9680.2,2044.5,10017,2277.5", width="4.6806", height="6.5972"];
					freemind_modes_common_dialogs_PersistentEditableComboBox [label="{+ PersistentEditableComboBox|- actionListener : ActionListener\l- sendExternalEvents : boolean\l- mModeController : ModeController\
\l- pStorageKey : String\l|+ getText(): String \l+ addActionListener(ActionListener): void \l+ PersistentEditableComboBox(ModeController\
,String) \l- addUrl(String,boolean): boolean \l+ setText(String): void \l &lt;Initializer&gt;()}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="9846.7,2689.5", rects="9680.7,2761,10013,2784 9680.7,2693,10013,2761 9680.7,2595,10013,2693", width="4.6111", height="2.6389"];
				}
				subgraph cluster_freemind_modes_common_actions {
					graph [label=actions,
						levelType="4_FAMIX.Namespace",
						bb="7982.6,3396.7,8877.6,4072.7"];
					subgraph cluster_freemind_modes_common_actions_FindAction {
						graph [label="+ FindAction",
							levelType="5_FAMIX.Class",
							bb="7990.2,3405,8653.2,3889"];
						freemind_modes_common_actions_FindAction [label="{FindAction|- mResult : int\l- mDialog : JDialog\l- findNodesUnfoldedByLastFind : ArrayList\l- findNodeQueue : LinkedList\l- findFromNode\
 : MindMapNode\l- findCaseSensitive : boolean\l- mSearchField : JTextField\l- searchTerm : String\l- mFindInNotesTooBox\
 : JCheckBox\l- subterms : Collection\l- controller : ControllerAdapter\l- mLastSearchString : String\l| displayDialog(): void \l+\
 prepareTextContent(boolean,String): String \l- close(int): void \l+ actionPerformed(ActionEvent): void \l+ find(MindMapNode,Collection\
,boolean): boolean \l- breakSearchTermIntoSubterms(String): Collection \l- find(LinkedList,Collection,boolean): boolean\
 \l+ displayNode(MindMapNode,ArrayList): void \l+ getFindFromText(): String \l+ findNext(): boolean \l+ FindAction(ControllerAdapter\
) \l+ getSubterms(): Collection \l+ getSearchTerm(): String \l- getSearchTermAsEscapedString(String): String \l- centerNode(\
MindMapNode): void}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="8152.4,3635.3", rects="7997.9,3834.3,8306.9,3857.3 7997.9,3646.3,8306.9,3834.3 7997.9,3413.3,8306.9,3646.3", width="4.2917", height="6.1806"];
						freemind_modes_common_actions_FindAction_FindNextAction [label="{+ FindNextAction|- find : FindAction\l- controller : ControllerAdapter\l|+ actionPerformed(ActionEvent): void \l+ FindNextAction\
(ControllerAdapter,FindAction)}", levelType="6_FAMIX.Class", hasData=true, hasMethods=true, pos="8497.4,3495.3", rects="8349.9,3521.8,8644.9,3544.8 8349.9,3483.8,8644.9,3521.8 8349.9,3445.8,8644.9,3483.8", width="4.0972", height="1.3889"];
					}
					freemind_modes_common_actions_NewMapAction [label="{+ NewMapAction|- modeController : ModeController\l|+ actionPerformed(ActionEvent): void \l+ NewMapAction(ModeController)}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="8751.7,3999", rects="8634.2,4018,8869.2,4041 8634.2,3995,8869.2,4018 8634.2,3957,8869.2,3995", width="3.2639", height="1.1806"];
				}
				subgraph cluster_freemind_modes_common_CommonNodeKeyListener {
					graph [label="+ CommonNodeKeyListener",
						levelType="4_FAMIX.Class",
						bb="9422.6,3716.2,10044,4153.2"];
					freemind_modes_common_CommonNodeKeyListener [label="{CommonNodeKeyListener|- right : String\l- c : ModeController\l- down : String\l- keyStrokeRight : KeyStroke\l- up : String\l- keyStrokeLeft\
 : KeyStroke\l- disabledKeyType : boolean\l- editHandler : EditHandler\l- keyStrokeUp : KeyStroke\l- keyTypeAddsNew \
: boolean\l- keyStrokeDown : KeyStroke\l- left : String\l- logger : Logger\l|+ keyTyped(KeyEvent): void \l+ keyPressed(KeyEvent)\
: void \l+ CommonNodeKeyListener(ModeController,EditHandler) \l &lt;Initializer&gt;() \l+ keyReleased(KeyEvent): void}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="9605.7,3879.5", rects="9430.7,4011,9780.7,4034 9430.7,3808,9780.7,4011 9430.7,3725,9780.7,3808", width="4.8611", height="4.3056"];
					freemind_modes_common_CommonNodeKeyListener_EditHandler [label="{+ EditHandler| edit(KeyEvent,boolean,boolean): void}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="9921.7,4098.5", rects="9808.2,4098.5,10035,4121.5 9808.2,4075.5,10035,4098.5", width="3.1528", height="0.65278"];
				}
				freemind_modes_common_CommonToggleFoldedAction [label="{+ CommonToggleFoldedAction|- logger : Logger\l- modeController : ControllerAdapter\l|+ actionPerformed(ActionEvent): void \l+ toggleFolded\
(ListIterator): void \l+ toggleFolded(): void \l+ reset(ListIterator): ListIterator \l+ CommonToggleFoldedAction(ControllerAdapter\
) \l+ getFoldingState(ListIterator): boolean}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="7738.1,3556.7", rects="7582.6,3613.2,7893.6,3636.2 7582.6,3575.2,7893.6,3613.2 7582.6,3477.2,7893.6,3575.2", width="4.3194", height="2.2222"];
				freemind_modes_common_GotoLinkNodeAction [label="{+ GotoLinkNodeAction|- controller : ModeController\l source : MindMapNode\l|+ GotoLinkNodeAction(ModeController,MindMapNode) \l+\
 actionPerformed(ActionEvent): void}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="8554.1,1846.7", rects="8383.1,1873.2,8725.1,1896.2 8383.1,1835.2,8725.1,1873.2 8383.1,1797.2,8725.1,1835.2", width="4.75", height="1.3889"];
			}
			subgraph cluster_freemind_modes_mindmapmode {
				graph [label=mindmapmode,
					levelType="3_FAMIX.Namespace",
					bb="715.43,1788.4,7305.4,8912.4"];
				subgraph cluster_freemind_modes_mindmapmode_attributeactors {
					graph [label=attributeactors,
						levelType="4_FAMIX.Namespace",
						bb="4915.6,2189.7,7297.6,5005.7"];
					subgraph cluster_freemind_modes_mindmapmode_attributeactors_MindMapModeAttributeController {
						graph [label="+ MindMapModeAttributeController",
							levelType="5_FAMIX.Class",
							bb="6540.2,2541,7289.2,3193"];
						freemind_modes_mindmapmode_attributeactors_MindMapModeAttributeController [label="{MindMapModeAttributeController| removeAttributeActor : RemoveAttributeActor\l unregistryAttributeValueActor : UnregistryAttributeValueActor\
\l- controller : MindMapController\l unregistryAttributeActor : UnregistryAttributeActor\l setAttributeNameActor : SetAttributeNameActor\
\l setAttributeColumnWidthActor : SetAttributeColumnWidthActor\l replaceAttributeValueActor : ReplaceAttributeValueActor\
\l setAttributeRestrictedActor : SetAttributeRestrictedActor\l setAttributeVisibleActor : SetAttributeVisibleActor\l\
 setAttributeValueActor : SetAttributeValueActor\l setAttributeFontSizeActor : SetAttributeFontSizeActor\l insertAttributeActor \
: InsertAttributeActor\l registryAttributeActor : RegistryAttributeActor\l registryAttributeValueActor : RegistryAttributeValueActor\
\l|+ performRemoveAttributeValue(String,String): void \l+ performSetRestriction(int,boolean): void \l+ performInsertRow(NodeAttributeTableModel\
,int,String,String): void \l+ performRemoveRow(NodeAttributeTableModel,int): void \l+ performSetFontSize(AttributeRegistry\
,int): void \l+ performSetValueAt(NodeAttributeTableModel,Object,int,int): void \l+ performRegistryAttribute(String\
): void \l+ performRegistrySubtreeAttributes(MindMapNodeModel): void \l- getAttributeRegistry(): AttributeRegistry \l+ performReplaceAttributeValue\
(String,String,String): void \l+ performSetColumnWidth(NodeAttributeTableModel,int,int): void \l+ performRemoveAttribute\
(String): void \l+ performRegistryAttributeValue(String,String): void \l+ MindMapModeAttributeController(MindMapController\
) \l+ performReplaceAtributeName(String,String): void \l+ performSetVisibility(int,boolean): void}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="6779.4,2794.3", rects="6572.4,3015.8,6986.4,3038.8 6572.4,2797.8,6986.4,3015.8 6572.4,2549.8,6986.4,2797.8", width="5.75", height="6.8056"];
						freemind_modes_mindmapmode_attributeactors_MindMapModeAttributeController_AttributeRenamer [label="{- AttributeRenamer|- newName : Object\l- oldName : Object\l|+ AttributeRenamer(Object,Object) \l+ visit(NodeAttributeTableModel\
): void}", levelType="6_FAMIX.Class", hasData=true, hasMethods=true, pos="7147.4,2887.3", rects="7027.9,2913.8,7266.9,2936.8 7027.9,2875.8,7266.9,2913.8 7027.9,2837.8,7266.9,2875.8", width="3.3194", height="1.3889"];
						freemind_modes_mindmapmode_attributeactors_MindMapModeAttributeController_AttributeValueRemover [label="{- AttributeValueRemover|- name : Object\l- value : Object\l|+ AttributeValueRemover(Object,Object) \l+ visit(NodeAttributeTableModel\
): void}", levelType="6_FAMIX.Class", hasData=true, hasMethods=true, pos="7153.4,2743.3", rects="7027.9,2769.8,7278.9,2792.8 7027.9,2731.8,7278.9,2769.8 7027.9,2693.8,7278.9,2731.8", width="3.4861", height="1.3889"];
						freemind_modes_mindmapmode_attributeactors_MindMapModeAttributeController_Iterator [label="{- Iterator|- visitor : Visitor\l| iterate(MindMapNode): void \l Iterator(Visitor)}", levelType="6_FAMIX.Class", hasData=true, hasMethods=true, pos="6637.4,3119.3", rects="6547.9,3138.3,6726.9,3161.3 6547.9,3115.3,6726.9,3138.3 6547.9,3077.3,6726.9,3115.3", width="2.4861", height="1.1806"];
						freemind_modes_mindmapmode_attributeactors_MindMapModeAttributeController_AttributeChanger [label="{- AttributeChanger|- name : Object\l- newValue : Object\l- oldValue : Object\l|+ visit(NodeAttributeTableModel): void \l+ AttributeChanger\
(Object,Object,Object)}", levelType="6_FAMIX.Class", hasData=true, hasMethods=true, pos="7154.4,2606.3", rects="7027.9,2640.3,7280.9,2663.3 7027.9,2587.3,7280.9,2640.3 7027.9,2549.3,7280.9,2587.3", width="3.5139", height="1.5972"];
						freemind_modes_mindmapmode_attributeactors_MindMapModeAttributeController_Visitor [label="{- Visitor| visit(NodeAttributeTableModel): void}", levelType="6_FAMIX.Class", hasData=false, hasMethods=true, pos="6877.4,3100.3", rects="6763.9,3100.3,6990.9,3123.3 6763.9,3077.3,6990.9,3100.3", width="3.1528", height="0.65278"];
						freemind_modes_mindmapmode_attributeactors_MindMapModeAttributeController_AttributeRemover [label="{- AttributeRemover|- name : Object\l|+ AttributeRemover(Object) \l+ visit(NodeAttributeTableModel): void}", levelType="6_FAMIX.Class", hasData=true, hasMethods=true, pos="7147.4,3023.3", rects="7027.9,3042.3,7266.9,3065.3 7027.9,3019.3,7266.9,3042.3 7027.9,2981.3,7266.9,3019.3", width="3.3194", height="1.1806"];
					}
					subgraph cluster_freemind_modes_mindmapmode_attributeactors_ListDialog {
						graph [label="+ ListDialog",
							levelType="5_FAMIX.Class",
							bb="5511.2,4353.5,6282.2,4974.5"];
						freemind_modes_mindmapmode_attributeactors_ListDialog [label="{ListDialog|- dialog : ListDialog\l- data : SortedListModel\l- renameButton : JButton\l- list : JList\l- textField : JTextField\l-\
 addButton : JButton\l- deleteButton : JButton\l|- updateButtons(): void \l- getIndexOf(String): int \l- getCurrentText(): String\
 \l- selectText(): void \l &lt;Initializer&gt;() \l- ListDialog(Frame,Component,String,String,SortedListModel,String) \l+ showDialog\
(Component,Component,String,String,SortedListModel,String): void}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="5778.4,4626.8", rects="5538.9,4728.3,6017.9,4751.3 5538.9,4615.3,6017.9,4728.3 5538.9,4502.3,6017.9,4615.3", width="6.6528", height="3.4722"];
						freemind_modes_mindmapmode_attributeactors_ListDialog_AddAction [label="{- AddAction|+ actionPerformed(ActionEvent): void \l- AddAction()}", levelType="6_FAMIX.Class", hasData=false, hasMethods=true, pos="5796.4,4912.8", rects="5678.9,4920.3,5913.9,4943.3 5678.9,4882.3,5913.9,4920.3", width="3.2639", height="0.86111"];
						freemind_modes_mindmapmode_attributeactors_ListDialog_CloseAction [label="{- CloseAction|- CloseAction() \l+ actionPerformed(ActionEvent): void}", levelType="6_FAMIX.Class", hasData=false, hasMethods=true, pos="5634.4,4432.8", rects="5518.9,4440.3,5749.9,4463.3 5518.9,4402.3,5749.9,4440.3", width="3.2083", height="0.86111"];
						freemind_modes_mindmapmode_attributeactors_ListDialog_DeleteAction [label="{- DeleteAction|+ actionPerformed(ActionEvent): void \l- DeleteAction()}", levelType="6_FAMIX.Class", hasData=false, hasMethods=true, pos="6156.4,4392.8", rects="6038.9,4400.3,6273.9,4423.3 6038.9,4362.3,6273.9,4400.3", width="3.2639", height="0.86111"];
						freemind_modes_mindmapmode_attributeactors_ListDialog_RenameAction [label="{- RenameAction|+ actionPerformed(ActionEvent): void \l- RenameAction()}", levelType="6_FAMIX.Class", hasData=false, hasMethods=true, pos="5896.4,4432.8", rects="5778.9,4440.3,6013.9,4463.3 5778.9,4402.3,6013.9,4440.3", width="3.2639", height="0.86111"];
						freemind_modes_mindmapmode_attributeactors_ListDialog_ListSelectionChangeListener [label="{- ListSelectionChangeListener|+ valueChanged(ListSelectionEvent): void \l- ListSelectionChangeListener()}", levelType="6_FAMIX.Class", hasData=false, hasMethods=true, pos="5786.4,4812.8", rects="5659.4,4820.3,5913.4,4843.3 5659.4,4782.3,5913.4,4820.3", width="3.5278", height="0.86111"];
						freemind_modes_mindmapmode_attributeactors_ListDialog_TextChangeListener [label="{- TextChangeListener|+ insertUpdate(DocumentEvent): void \l- TextChangeListener() \l+ removeUpdate(DocumentEvent): void \l+ changedUpdate\
(DocumentEvent): void \l- update(): void}", levelType="6_FAMIX.Class", hasData=false, hasMethods=true, pos="6063.4,4834.8", rects="5938.9,4864.8,6187.9,4887.8 5938.9,4781.8,6187.9,4864.8", width="3.4583", height="1.4861"];
					}
					subgraph cluster_freemind_modes_mindmapmode_attributeactors_AttributeRegistryTable {
						graph [label=" AttributeRegistryTable",
							levelType="5_FAMIX.Class",
							bb="4923.7,2198,5773.7,2724"];
						freemind_modes_mindmapmode_attributeactors_AttributeRegistryTable [label="{AttributeRegistryTable|- selectAllButtonRenderer : ButtonRenderer\l- checkBoxImage : Icon\l- editButtonRenderer : ButtonRenderer\
\l- editListAction : EditListAction\l- selectAllButtonEditor : ButtonEditor\l| &lt;Initializer&gt;() \l+ setModel(TableModel): \
void \l+ prepareEditor(TableCellEditor,int,int): Component \l+ getCellEditor(int,int): TableCellEditor \l+ AttributeRegistryTable\
(EditListAction) \l+ getCellRenderer(int,int): TableCellRenderer}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="5562.9,2308.3", rects="5406.4,2387.3,5719.4,2410.3 5406.4,2304.3,5719.4,2387.3 5406.4,2206.3,5719.4,2304.3", width="4.3472", height="2.8472"];
						freemind_modes_mindmapmode_attributeactors_AttributeRegistryTable_ButtonEditor [label="{- ButtonEditor|- editButton : JButton\l- value : Object\l|+ getTableCellEditorComponent(JTable,Object,boolean,int,int): Component\
 \l+ ButtonEditor(Icon) \l+ setAction(Action): void \l+ getCellEditorValue(): Object \l+ ButtonEditor(Action)}", levelType="6_FAMIX.Class", hasData=true, hasMethods=true, pos="5153.9,2453.3", rects="4931.4,2502.3,5376.4,2525.3 4931.4,2464.3,5376.4,2502.3 4931.4,2381.3,5376.4,2464.3", width="6.1806", height="2.0139"];
						freemind_modes_mindmapmode_attributeactors_AttributeRegistryTable_ToggleAllAction [label="{- ToggleAllAction|+ actionPerformed(ActionEvent): void \l+ ToggleAllAction()}", levelType="6_FAMIX.Class", hasData=false, hasMethods=true, pos="5098.9,2662.3", rects="4981.4,2669.8,5216.4,2692.8 4981.4,2631.8,5216.4,2669.8", width="3.2639", height="0.86111"];
						freemind_modes_mindmapmode_attributeactors_AttributeRegistryTable_ButtonRenderer [label="{- ButtonRenderer|- renderingEditButton : JButton\l|+ ButtonRenderer(Icon,String) \l+ getTableCellRendererComponent(JTable,Object\
,boolean,boolean,int,int): Component \l+ setEnabled(boolean): void}", levelType="6_FAMIX.Class", hasData=true, hasMethods=true, pos="5510.9,2606.3", rects="5256.4,2632.8,5765.4,2655.8 5256.4,2609.8,5765.4,2632.8 5256.4,2556.8,5765.4,2609.8", width="7.0694", height="1.3889"];
					}
					subgraph cluster_freemind_modes_mindmapmode_attributeactors_ImportAttributesDialog {
						graph [label=" ImportAttributesDialog",
							levelType="5_FAMIX.Class",
							bb="5364.7,2786,6452.7,3526"];
						freemind_modes_mindmapmode_attributeactors_ImportAttributesDialog [label="{ImportAttributesDialog|- currentAttributes : AttributeRegistry\l- parentComponent : Component\l- scrollPane : JScrollPane\l- tree\
 : JTree\l- topNode : DefaultMutableTreeNode\l renderer : MyRenderer\l- treeModel : DefaultTreeModel\l- c : Controller\l|+ show\
(): void \l- createAttributeSubTrees(DefaultMutableTreeNode,AttributeRegistry): void \l- performImport(DefaultMutableTreeNode):\
 void \l &lt;Initializer&gt;() \l+ valueChanged(TreeSelectionEvent): void \l- setSelectionType(TreeNode,int): void \l- createValueSubTrees\
(DefaultMutableTreeNode,AttributeRegistryElement,AttributeRegistry): void \l+ ImportAttributesDialog(Controller,Component\
) \l- createMapSubTrees(DefaultMutableTreeNode): void \l- setParentSelectionType(DefaultMutableTreeNode,int): void}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="5657.9,3073.3", rects="5372.4,3204.8,5943.4,3227.8 5372.4,3076.8,5943.4,3204.8 5372.4,2918.8,5943.4,3076.8", width="7.9306", height="4.3056"];
						freemind_modes_mindmapmode_attributeactors_ImportAttributesDialog_MyRenderer [label="{- MyRenderer| iconNotSelected : Icon\l iconFull : Icon\l iconPartial : Icon\l|+ getTreeCellRendererComponent(JTree,Object,boolean\
,boolean,boolean,int,boolean): Component \l &lt;Initializer&gt;() \l+ MyRenderer()}", levelType="6_FAMIX.Class", hasData=true, hasMethods=true, pos="6156.9,3355.3", rects="5868.9,3396.8,6444.9,3419.8 5868.9,3343.8,6444.9,3396.8 5868.9,3290.8,6444.9,3343.8", width=8, height="1.8056"];
						freemind_modes_mindmapmode_attributeactors_ImportAttributesDialog_TreeNodeInfo [label="{- TreeNodeInfo|- NOT_SELECTED : int\l- selected : int\l- info : String\l- PARTIAL_SELECTED : int\l- FULL_SELECTED : int\l|+ TreeNodeInfo\
(String) \l+ toString(): String \l getSelected(): int \l setSelected(int): void \l &lt;Initializer&gt;() \l getInfo(): \
String}", levelType="6_FAMIX.Class", hasData=true, hasMethods=true, pos="5712.9,3392.3", rects="5620.4,3471.3,5805.4,3494.3 5620.4,3388.3,5805.4,3471.3 5620.4,3290.3,5805.4,3388.3", width="2.5694", height="2.8472"];
						freemind_modes_mindmapmode_attributeactors_ImportAttributesDialog_AttributeTreeNodeInfo [label="{- AttributeTreeNodeInfo|- restricted : boolean\l|+ AttributeTreeNodeInfo(String,boolean) \l isRestricted(): boolean}", levelType="6_FAMIX.Class", hasData=true, hasMethods=true, pos="5776.9,2836.3", rects="5651.4,2855.3,5902.4,2878.3 5651.4,2832.3,5902.4,2855.3 5651.4,2794.3,5902.4,2832.3", width="3.4861", height="1.1806"];
					}
					subgraph cluster_freemind_modes_mindmapmode_attributeactors_AttributeManagerDialog {
						graph [label="+ AttributeManagerDialog",
							levelType="5_FAMIX.Class",
							bb="5511.2,3618.5,6282.2,4287.5"];
						freemind_modes_mindmapmode_attributeactors_AttributeManagerDialog [label="{AttributeManagerDialog|- c : Controller\l- model : AttributeRegistry\l editButtonImage : Icon\l- registry : MapRegistry\l- size\
 : JComboBox\l- fontSizes : String\l- importDialog : ImportAttributesDialog\l- view : JTable\l|+ isMapModuleChangeAllowed(MapModule\
,Mode,MapModule,Mode): boolean \l &lt;Initializer&gt;() \l- applyChanges(): void \l+ beforeMapModuleChange(MapModule,Mode,MapModule\
,Mode): void \l+ numberOfOpenMapInformation(int,int): void \l+ afterMapModuleChange(MapModule,Mode,MapModule,Mode): void \l+\
 afterMapClose(MapModule,Mode): void \l- resetChanges(): void \l+ AttributeManagerDialog(Controller)}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="5755.4,3883.8", rects="5519.4,4007.8,5991.4,4030.8 5519.4,3879.8,5991.4,4007.8 5519.4,3736.8,5991.4,3879.8", width="6.5556", height="4.0972"];
						freemind_modes_mindmapmode_attributeactors_AttributeManagerDialog_ClosingListener [label="{- ClosingListener|- ClosingListener() \l+ windowClosing(WindowEvent): void}", levelType="6_FAMIX.Class", hasData=false, hasMethods=true, pos="5879.4,3657.8", rects="5761.4,3665.3,5997.4,3688.3 5761.4,3627.3,5997.4,3665.3", width="3.2778", height="0.86111"];
						freemind_modes_mindmapmode_attributeactors_AttributeManagerDialog_ImportAction [label="{- ImportAction| ImportAction() \l+ actionPerformed(ActionEvent): void}", levelType="6_FAMIX.Class", hasData=false, hasMethods=true, pos="6140.4,3877.8", rects="6024.9,3885.3,6255.9,3908.3 6024.9,3847.3,6255.9,3885.3", width="3.2083", height="0.86111"];
						freemind_modes_mindmapmode_attributeactors_AttributeManagerDialog_OKAction [label="{- OKAction|+ actionPerformed(ActionEvent): void \l OKAction()}", levelType="6_FAMIX.Class", hasData=false, hasMethods=true, pos="5790.4,4097.8", rects="5672.9,4105.3,5907.9,4128.3 5672.9,4067.3,5907.9,4105.3", width="3.2639", height="0.86111"];
						freemind_modes_mindmapmode_attributeactors_AttributeManagerDialog_EditListAction [label="{ EditListAction|- row : int\l- labelText : String\l- listBoxModel : SortedListModel\l- title : String\l| &lt;Initializer&gt;() \
\l+ actionPerformed(ActionEvent): void \l+ setListBoxModel(String,String,SortedListModel): void \l+ getRow(): int \l+ EditListAction\
() \l+ setRow(int): void}", levelType="6_FAMIX.Class", hasData=true, hasMethods=true, pos="6105.4,4161.8", rects="5936.9,4233.3,6273.9,4256.3 5936.9,4165.3,6273.9,4233.3 5936.9,4067.3,6273.9,4165.3", width="4.6806", height="2.6389"];
						freemind_modes_mindmapmode_attributeactors_AttributeManagerDialog_CancelAction [label="{- CancelAction| CancelAction() \l+ actionPerformed(ActionEvent): void}", levelType="6_FAMIX.Class", hasData=false, hasMethods=true, pos="6140.4,3657.8", rects="6024.9,3665.3,6255.9,3688.3 6024.9,3627.3,6255.9,3665.3", width="3.2083", height="0.86111"];
						freemind_modes_mindmapmode_attributeactors_AttributeManagerDialog_ApplyAction [label="{- ApplyAction| ApplyAction() \l+ actionPerformed(ActionEvent): void}", levelType="6_FAMIX.Class", hasData=false, hasMethods=true, pos="6140.4,3767.8", rects="6024.9,3775.3,6255.9,3798.3 6024.9,3737.3,6255.9,3775.3", width="3.2083", height="0.86111"];
					}
					subgraph cluster_freemind_modes_mindmapmode_attributeactors_AssignAttributeDialog {
						graph [label="+ AssignAttributeDialog",
							levelType="5_FAMIX.Class",
							bb="6344.7,3618.5,7130.7,4423.5"];
						freemind_modes_mindmapmode_attributeactors_AssignAttributeDialog [label="{AssignAttributeDialog|- attributeNames : JComboBox\l- attributeValues : JComboBox\l- replacingAttributeNames : JComboBox\l- visibleBtn\
 : JRadioButton\l- maxButtonDimension : Dimension\l- selectedBtn : JRadioButton\l- skipRootBtn : JCheckBox\l- mapView : MapView\
\l- replacingAttributeValues : JComboBox\l|+ beforeMapModuleChange(MapModule,Mode,MapModule,Mode): void \l &lt;Initializer\
&gt;() \l+ attributesChanged(ChangeEvent): void \l+ AssignAttributeDialog(MapView) \l+ afterMapModuleChange(MapModule,Mode,MapModule\
,Mode): void \l+ numberOfOpenMapInformation(int,int): void \l+ afterMapClose(MapModule,Mode): void \l- attributesChanged(): \
void \l+ isMapModuleChangeAllowed(MapModule,Mode,MapModule,Mode): boolean \l- selectedAttributeChanged(Object,JComboBox): void \l+\
 mapChanged(MapView): void}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="6588.9,3952.8", rects="6352.9,4099.3,6824.9,4122.3 6352.9,3956.3,6824.9,4099.3 6352.9,3783.3,6824.9,3956.3", width="6.5556", height="4.7222"];
						freemind_modes_mindmapmode_attributeactors_AssignAttributeDialog_DeleteAttributeAction [label="{- DeleteAttributeAction|- name : String\l|+ actionPerformed(ActionEvent): void \l- DeleteAttributeAction() \l# performAction(MindMapNode\
): void}", levelType="6_FAMIX.Class", hasData=true, hasMethods=true, pos="6704.9,3676.8", rects="6586.9,3703.3,6822.9,3726.3 6586.9,3680.3,6822.9,3703.3 6586.9,3627.3,6822.9,3680.3", width="3.2778", height="1.3889"];
						freemind_modes_mindmapmode_attributeactors_AssignAttributeDialog_IteratingAction [label="{*- IteratingAction|- performAction(NodeView): void \l# showEmptyStringErrorMessage(): void \l+ actionPerformed(ActionEvent): void\
 \l- iterate(NodeView): void \l*# performAction(MindMapNode): void}", levelType="6_FAMIX.Class", hasData=false, hasMethods=true, pos="6997.9,4043.8", rects="6872.9,4073.8,7122.9,4096.8 6872.9,3990.8,7122.9,4073.8", width="3.4722", height="1.4861"];
						freemind_modes_mindmapmode_attributeactors_AssignAttributeDialog_ClonedComboBoxModel [label="{- ClonedComboBoxModel|- ev : ListDataEvent\l- selectedItem : Object\l- sharedListModel : AbstractListModel\l|- getContentChangedEvent\
(): ListDataEvent \l+ ClonedComboBoxModel(ComboBoxModel) \l+ addListDataListener(ListDataListener): void \l+ removeListDataListener\
(ListDataListener): void \l+ getSelectedItem(): Object \l+ getElementAt(int): Object \l+ getSize(): int \l+ setSelectedItem\
(Object): void \l &lt;Initializer&gt;()}", levelType="6_FAMIX.Class", hasData=true, hasMethods=true, pos="6942.9,4282.8", rects="6794.9,4369.3,7090.9,4392.3 6794.9,4316.3,7090.9,4369.3 6794.9,4173.3,7090.9,4316.3", width="4.1111", height="3.0556"];
						freemind_modes_mindmapmode_attributeactors_AssignAttributeDialog_DeleteValueAction [label="{- DeleteValueAction|- name : String\l- value : String\l|# performAction(MindMapNode): void \l+ actionPerformed(ActionEvent): void\
 \l- DeleteValueAction()}", levelType="6_FAMIX.Class", hasData=true, hasMethods=true, pos="6992.9,3735.8", rects="6872.9,3769.8,7112.9,3792.8 6872.9,3731.8,7112.9,3769.8 6872.9,3678.8,7112.9,3731.8", width="3.3333", height="1.5972"];
						freemind_modes_mindmapmode_attributeactors_AssignAttributeDialog_AddAction [label="{- AddAction|- name : String\l- value : String\l|# performAction(MindMapNode): void \l- AddAction() \l+ actionPerformed(ActionEvent\
): void}", levelType="6_FAMIX.Class", hasData=true, hasMethods=true, pos="6992.9,3891.8", rects="6872.9,3925.8,7112.9,3948.8 6872.9,3887.8,7112.9,3925.8 6872.9,3834.8,7112.9,3887.8", width="3.3333", height="1.5972"];
						freemind_modes_mindmapmode_attributeactors_AssignAttributeDialog_ReplaceValueAction [label="{- ReplaceValueAction|- value : String\l- replacingValue : String\l- replacingName : String\l- name : String\l|+ actionPerformed\
(ActionEvent): void \l# performAction(MindMapNode): void \l- ReplaceValueAction()}", levelType="6_FAMIX.Class", hasData=true, hasMethods=true, pos="6628.9,4244.8", rects="6508.9,4293.8,6748.9,4316.8 6508.9,4225.8,6748.9,4293.8 6508.9,4172.8,6748.9,4225.8", width="3.3333", height="2.0139"];
					}
					freemind_modes_mindmapmode_attributeactors_SetAttributeFontSizeActor [label="{+ SetAttributeFontSizeActor|- act(int): void \l+ createActionPair(int): ActionPair \l+ act(XmlAction): void \l+ SetAttributeFontSizeActor\
(MindMapController) \l+ getDoActionClass(): Class \l+ createAction(int): UNKNOWN}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="6984.7,2308", rects="6834.2,2345.5,7135.2,2368.5 6834.2,2247.5,7135.2,2345.5", width="4.1806", height="1.6944"];
					freemind_modes_mindmapmode_attributeactors_AttributesListener [label="{+ AttributesListener|*+ attributesChanged(ChangeEvent): void}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="6665.7,3495", rects="6540.7,3495,6790.7,3518 6540.7,3472,6790.7,3495", width="3.4722", height="0.65278"];
					freemind_modes_mindmapmode_attributeactors_UnregistryAttributeActor [label="{+ UnregistryAttributeActor|+ UnregistryAttributeActor(MindMapController) \l+ act(XmlAction): void \l+ createAction(String): UNKNOWN\
 \l- createUndoAction(String): UNKNOWN \l createAction(?) \l- act(String): void \l+ createActionPair(String): ActionPair \l+\
 getDoActionClass(): Class}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="5264.7,3842", rects="5119.2,3894.5,5410.2,3917.5 5119.2,3766.5,5410.2,3894.5", width="4.0417", height="2.1111"];
					freemind_modes_mindmapmode_attributeactors_SetAttributeVisibleActor [label="{+ SetAttributeVisibleActor|+ createActionPair(int,boolean): ActionPair \l- act(int,boolean): void \l+ act(XmlAction): void \l+ \
getDoActionClass(): Class \l+ createAction(int,boolean): UNKNOWN \l+ SetAttributeVisibleActor(MindMapController)}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="6046.7,2259", rects="5903.7,2296.5,6189.7,2319.5 5903.7,2198.5,6189.7,2296.5", width="3.9722", height="1.6944"];
					freemind_modes_mindmapmode_attributeactors_RegistryAttributeValueActor [label="{+ RegistryAttributeValueActor|+ act(XmlAction): void \l+ createAction(String,String): UNKNOWN \l+ createActionPair(String,String\
): ActionPair \l- act(String,String): void \l createAction(?,?) \l+ getDoActionClass(): Class \l+ RegistryAttributeValueActor(MindMapController\
)}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="5126.7,3246", rects="4972.7,3291,5280.7,3314 4972.7,3178,5280.7,3291", width="4.2778", height="1.9028"];
					freemind_modes_mindmapmode_attributeactors_ReplaceAttributeValueActor [label="{+ ReplaceAttributeValueActor|+ createAction(String,String,String): UNKNOWN \l+ createActionPair(String,String,String): ActionPair\
 \l+ getDoActionClass(): Class \l+ act(XmlAction): void \l+ ReplaceAttributeValueActor(MindMapController) \l- act(String,String\
,String): void}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="5127.7,3435", rects="4972.7,3472.5,5282.7,3495.5 4972.7,3374.5,5282.7,3472.5", width="4.3056", height="1.6944"];
					freemind_modes_mindmapmode_attributeactors_RemoveAttributeActor [label="{+ RemoveAttributeActor|+ RemoveAttributeActor(MindMapController) \l createAction(?,?) \l+ act(XmlAction): void \l+ createActionPair\
(NodeAttributeTableModel,int): ActionPair \l+ createAction(NodeAttributeTableModel,int): UNKNOWN \l+ getDoActionClass(): Class\
 \l- act(NodeAttributeTableModel,int): void}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="5252.7,4079", rects="5070.7,4124,5434.7,4147 5070.7,4011,5434.7,4124", width="5.0556", height="1.9028"];
					freemind_modes_mindmapmode_attributeactors_SetAttributeNameActor [label="{+ SetAttributeNameActor|+ createActionPair(NodeAttributeTableModel,int,String): ActionPair \l+ act(XmlAction): void \l- act(NodeAttributeTableModel\
,int,String): void \l+ getDoActionClass(): Class \l+ createAction(NodeAttributeTableModel,int,String): UNKNOWN\
 \l+ SetAttributeNameActor(MindMapController)}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="6740.7,3337", rects="6540.2,3374.5,6941.2,3397.5 6540.2,3276.5,6941.2,3374.5", width="5.5694", height="1.6944"];
					freemind_modes_mindmapmode_attributeactors_UnregistryAttributeValueActor [label="{+ UnregistryAttributeValueActor|- act(String,String): void \l+ UnregistryAttributeValueActor(MindMapController) \l+ createAction\
(String,String): UNKNOWN \l+ getDoActionClass(): Class \l+ act(XmlAction): void \l+ createActionPair(String,String): ActionPair\
 \l createAction(?,?)}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="5133.7,3638", rects="4972.2,3683,5295.2,3706 4972.2,3570,5295.2,3683", width="4.4861", height="1.9028"];
					freemind_modes_mindmapmode_attributeactors_InsertAttributeActor [label="{+ InsertAttributeActor|+ InsertAttributeActor(MindMapController) \l+ createActionPair(NodeAttributeTableModel,int,String,String\
): ActionPair \l createAction(?,?,?,?) \l+ createAction(NodeAttributeTableModel,int,String,String): UNKNOWN \l+ getDoActionClass\
(): Class \l+ act(XmlAction): void \l- act(NodeAttributeTableModel,int,String,String): void}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="6121.7,2658", rects="5903.2,2703,6340.2,2726 5903.2,2590,6340.2,2703", width="6.0694", height="1.9028"];
					freemind_modes_mindmapmode_attributeactors_SetAttributeRestrictedActor [label="{+ SetAttributeRestrictedActor|+ SetAttributeRestrictedActor(MindMapController) \l+ getDoActionClass(): Class \l- act(int,boolean\
): void \l+ act(XmlAction): void \l+ createActionPair(int,boolean): ActionPair \l+ createAction(int,boolean): UNKNOWN}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="5126.7,3043", rects="4972.7,3080.5,5280.7,3103.5 4972.7,2982.5,5280.7,3080.5", width="4.2778", height="1.6944"];
					freemind_modes_mindmapmode_attributeactors_SetAttributeColumnWidthActor [label="{+ SetAttributeColumnWidthActor|+ createActionPair(NodeAttributeTableModel,int,int): ActionPair \l+ SetAttributeColumnWidthActor\
(MindMapController) \l+ createAction(NodeAttributeTableModel,int,int): UNKNOWN \l+ act(XmlAction): void \l+ getDoActionClass(): \
Class \l- act(NodeAttributeTableModel,int,int): void}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="6583.7,2406", rects="6393.2,2443.5,6774.2,2466.5 6393.2,2345.5,6774.2,2443.5", width="5.2917", height="1.6944"];
					freemind_modes_mindmapmode_attributeactors_SetAttributeValueActor [label="{+ SetAttributeValueActor|+ act(XmlAction): void \l+ createActionPair(NodeAttributeTableModel,int,String): ActionPair \l- act(NodeAttributeTableModel\
,int,String): void \l+ createAction(NodeAttributeTableModel,int,String): UNKNOWN \l+ SetAttributeValueActor\
(MindMapController) \l+ getDoActionClass(): Class}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="6103.7,2455", rects="5903.2,2492.5,6304.2,2515.5 5903.2,2394.5,6304.2,2492.5", width="5.5694", height="1.6944"];
					freemind_modes_mindmapmode_attributeactors_RegistryAttributeActor [label="{+ RegistryAttributeActor|- act(String): void \l createAction(?) \l+ RegistryAttributeActor(MindMapController) \l+ act(XmlAction\
): void \l+ createActionPair(String): ActionPair \l+ getDoActionClass(): Class \l+ createAction(String): UNKNOWN}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="5161.7,2854", rects="5021.7,2899,5301.7,2922 5021.7,2786,5301.7,2899", width="3.8889", height="1.9028"];
				}
				subgraph cluster_freemind_modes_mindmapmode_hooks {
					graph [label=hooks,
						levelType="4_FAMIX.Namespace",
						bb="1116.1,5988.7,1891.1,6580.7"];
					freemind_modes_mindmapmode_hooks_MindMapHookAdapter [label="{+ MindMapHookAdapter|+ addAccelerator(JMenuItem,String): JMenuItem \l+ getMindMapController(): MindMapController \l+ MindMapHookAdapter\
()}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="1382.2,6511", rects="1235.7,6526,1528.7,6549 1235.7,6473,1528.7,6526", width="4.0694", height="1.0694"];
					freemind_modes_mindmapmode_hooks_MindMapHookFactory [label="{+ MindMapHookFactory|- pluginPrefixRegEx : String\l- allPlugins : Vector\l- pluginInfo : HashMap\l- logger : Logger\l- frame : \
FreeMindMain\l- importWizard : ImportWizard\l# allRegistrations : HashSet\l|+ getPossibleNodeHooks(): Vector \l+ getPluginBaseClass\
(String): Object \l+ createNodeHook(String): NodeHook \l- searchFor(Class,Class): Vector \l+ getRegistrations(): List \l+ getMenuItem\
(String,AbstractAction): JMenuItem \l+ decorateAction(String,AbstractAction): void \l+ getPossibleModeControllerHooks():\
 Vector \l- createJavaHook(String,HookDescriptorPluginAction): MindMapHook \l &lt;Initializer&gt;() \l- decorateHook(String,HookDescriptorPluginAction\
,MindMapHook): void \l- getHookDescriptor(String): HookDescriptorPluginAction \l+ createModeControllerHook\
(String): ModeControllerHook \l+ getInstanciationMethod(String): HookInstanciationMethod \l- getPluginBaseClass(HookDescriptorPluginAction\
): Object \l+ MindMapHookFactory(FreeMindMain) \l+ getHookMenuPositions(String): List \l- actualizePlugins(): void}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="1343.2,6232", rects="1124.2,6416,1562.2,6439 1124.2,6303,1562.2,6416 1124.2,6025,1562.2,6303", width="6.0833", height="5.7639"];
					freemind_modes_mindmapmode_hooks_PermanentMindMapNodeHookAdapter [label="{+ PermanentMindMapNodeHookAdapter|# propagate(MindMapNode): PermanentNodeHook \l+ getMindMapController(): MindMapController \l+\
 PermanentMindMapNodeHookAdapter()}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="1726.2,6511", rects="1571.7,6526,1880.7,6549 1571.7,6473,1880.7,6526", width="4.2917", height="1.0694"];
					freemind_modes_mindmapmode_hooks_MindMapNodeHookAdapter [label="{+ MindMapNodeHookAdapter|+ MindMapNodeHookAdapter() \l+ getMindMapController(): MindMapController}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="1741.2,6028", rects="1599.7,6035.5,1882.7,6058.5 1599.7,5997.5,1882.7,6035.5", width="3.9306", height="0.86111"];
				}
				subgraph cluster_freemind_modes_mindmapmode_dialogs {
					graph [label=dialogs,
						levelType="4_FAMIX.Namespace",
						bb="3081.6,5857.2,4709.6,7370.2"];
					subgraph cluster_freemind_modes_mindmapmode_dialogs_StylePatternFrame {
						graph [label="+ StylePatternFrame",
							levelType="5_FAMIX.Class",
							bb="3089.7,5865.5,4203.7,7339.5"];
						freemind_modes_mindmapmode_dialogs_StylePatternFrame [label="{StylePatternFrame|- CLEAR_ALL_SETTERS : String\l- NODE_FONT_BOLD : String\l- mScriptPattern : ScriptEditorProperty\l- mNodeFontBold\
 : BooleanProperty\l- mPatternList : List\l- mSetEdgeColor : ThreeCheckBoxProperty\l- mTranslator : TextTranslator\l- mName \
: StringProperty\l- EDGE_WIDTHS : String\l- mSetNodeFontItalic : ThreeCheckBoxProperty\l- SET_NODE_FONT_BOLD : String\l- mControls\
 : Vector\l- mNodeBackgroundColor : ColorProperty\l- mEdgeWidth : ComboProperty\l- mSetEdgeWidth : ThreeCheckBoxProperty\l- NODE\
_COLOR : String\l- EDGE_WIDTH : String\l- ICON : String\l- SCRIPT : String\l- SET_NODE_BACKGROUND_COLOR : String\l- mSetNodeBackgroundColor\
 : ThreeCheckBoxProperty\l- mSetNodeColor : ThreeCheckBoxProperty\l- sizes : String\l- mSetChildPattern : ThreeCheckBoxProperty\
\l- SET_NODE_COLOR : String\l- mSetNodeFontSize : ThreeCheckBoxProperty\l- EDGE_STYLE : String\l- SET_EDGE_STYLE : String\
\l- mNodeText : StringProperty\l- mNodeStyle : ComboProperty\l- mSetEdgeStyle : ThreeCheckBoxProperty\l- SET_CHILD_PATTERN \
: String\l- NODE_NAME : String\l- mIconInformationVector : Vector\l- mChildPattern : ComboProperty\l- mNodeFontItalic : BooleanProperty\
\l- mType : StylePatternFrameType\l- SET_EDGE_WIDTH : String\l- SET_NODE_FONT_NAME : String\l- mNodeColor : ColorProperty\
\l- NODE_FONT_SIZE : String\l- CHILD_PATTERN : String\l- EDGE_COLOR : String\l- NODE_FONT_NAME : String\l- SET_NODE_STYLE : String\
\l- NODE_FONT_ITALIC : String\l- mEdgeStyle : ComboProperty\l- mNodeFontSize : ComboProperty\l- NODE_STYLE : String\l- EDGE_STYLES\
 : String\l- SET_ICON : String\l- mMindMapController : MindMapController\l- mSetNodeFontBold : ThreeCheckBoxProperty\l- mClearSetters\
 : ThreeCheckBoxProperty\l- mSetNodeStyle : ThreeCheckBoxProperty\l- mSetIcon : ThreeCheckBoxProperty\l- mEdgeColor : ColorProperty\
\l- SET_SCRIPT : String\l- SET_NODE_FONT_SIZE : String\l- mIcon : IconProperty\l- SET_NODE_TEXT : String\l- mSetNodeText\
 : ThreeCheckBoxProperty\l- mSetScriptPattern : ThreeCheckBoxProperty\l- mNodeFontName : FontProperty\l- SET_EDGE_COLOR : String\
\l- NODE_BACKGROUND_COLOR : String\l- mSetNodeFontName : ThreeCheckBoxProperty\l- mPropertyChangePropagation : HashMap\l- NODE\
_TEXT : String\l- SET_RESOURCE : String\l- SET_NODE_FONT_ITALIC : String\l|+ propertyChange(PropertyChangeEvent): void \l+ init\
(): void \l getResultPattern() \l- getPatternResult(PatternPropertyBase,ThreeCheckBoxProperty,PropertyBean,ValueTransformator):\
 UNKNOWN \l- transformEdgeWidth(String): String \l- setPatternControls(PatternPropertyBase,PropertyBean,PropertyBean,String): void\
 \l+ getText(String): String \l+ addListeners(): void \l- getPatternNames(): Vector \l+ getResultPattern(Pattern): UNKNOWN \l+\
 setPattern(Pattern): void \l+ StylePatternFrame(TextTranslator,MindMapController,StylePatternFrameType) \l getResultPattern(?) \
\l- getEdgeWidthTransformation(): HashMap \l- getControls(): Vector \l- transformStringToWidth(String): String \l+ setPatternList\
(List): void \l setPattern(?) \l- setPatternControls(PatternPropertyBase,PropertyBean,PropertyBean,String,ValueTransformator): \
void \l+ getResultPattern(): UNKNOWN \l- getPatternResult(PatternPropertyBase,ThreeCheckBoxProperty,PropertyBean): UNKNOWN \l &lt\
;Initializer&gt;()}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="3428.9,6590.8", rects="3097.4,7284.8,3760.4,7307.8 3097.4,6211.8,3760.4,7284.8 3097.4,5873.8,3760.4,6211.8", width="9.2083", height="19.931"];
						freemind_modes_mindmapmode_dialogs_StylePatternFrame_EdgeWidthTransformer [label="{- EdgeWidthTransformer|- EdgeWidthTransformer() \l+ transform(String): String}", levelType="6_FAMIX.Class", hasData=false, hasMethods=true, pos="3902.9,6804.8", rects="3817.9,6812.3,3987.9,6835.3 3817.9,6774.3,3987.9,6812.3", width="2.3611", height="0.86111"];
						freemind_modes_mindmapmode_dialogs_StylePatternFrame_StylePatternFrameType [label="{+ StylePatternFrameType|+ WITHOUT_NAME_AND_CHILDS : StylePatternFrameType\l+ WITH_NAME_AND_CHILDS : StylePatternFrameType\l| &lt\
;Initializer&gt;() \l- StylePatternFrameType()}", levelType="6_FAMIX.Class", hasData=true, hasMethods=true, pos="4006.9,6238.8", rects="3817.9,6265.3,4195.9,6288.3 3817.9,6227.3,4195.9,6265.3 3817.9,6189.3,4195.9,6227.3", width="5.25", height="1.3889"];
						freemind_modes_mindmapmode_dialogs_StylePatternFrame_EdgeWidthBackTransformer [label="{- EdgeWidthBackTransformer|- EdgeWidthBackTransformer() \l+ transform(String): String}", levelType="6_FAMIX.Class", hasData=false, hasMethods=true, pos="3916.9,6399.8", rects="3817.4,6407.3,4016.4,6430.3 3817.4,6369.3,4016.4,6407.3", width="2.7639", height="0.86111"];
						freemind_modes_mindmapmode_dialogs_StylePatternFrame_ValueTransformator [label="{- ValueTransformator| transform(String): String}", levelType="6_FAMIX.Class", hasData=false, hasMethods=true, pos="3893.9,6526.8", rects="3817.9,6526.8,3969.9,6549.8 3817.9,6503.8,3969.9,6526.8", width="2.1111", height="0.65278"];
						freemind_modes_mindmapmode_dialogs_StylePatternFrame_IdentityTransformer [label="{- IdentityTransformer|+ transform(String): String \l- IdentityTransformer()}", levelType="6_FAMIX.Class", hasData=false, hasMethods=true, pos="3901.9,6669.8", rects="3817.9,6677.3,3985.9,6700.3 3817.9,6639.3,3985.9,6677.3", width="2.3333", height="0.86111"];
					}
					freemind_modes_mindmapmode_dialogs_IntegerComboProperty [label="{+ IntegerComboProperty|+ setValue(String): void \l+ IntegerComboProperty(String,String,String[],Vector)}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="4538.7,5896.5", rects="4376.2,5904,4701.2,5927 4376.2,5866,4701.2,5904", width="4.5139", height="0.86111"];
				}
				subgraph cluster_freemind_modes_mindmapmode_actions {
					graph [label=actions,
						levelType="4_FAMIX.Namespace",
						bb="1378.1,2451.7,4659.1,5611.7"];
					subgraph cluster_freemind_modes_mindmapmode_actions_xml {
						graph [label=xml,
							levelType="5_FAMIX.Namespace",
							bb="3402.2,3467.5,4420.2,4480.5"];
						subgraph cluster_freemind_modes_mindmapmode_actions_xml_ActionFilter {
							graph [label="+ ActionFilter",
								levelType="6_FAMIX.Class",
								bb="3566.4,4073.8,3864.4,4279.8"];
							freemind_modes_mindmapmode_actions_xml_ActionFilter [label="{ActionFilter|*+ filterAction(ActionPair): ActionPair}", levelType="6_FAMIX.Class", hasData=false, hasMethods=true, pos="3690.5,4165.1", rects="3574.5,4165.1,3806.5,4188.1 3574.5,4142.1,3806.5,4165.1", width="3.2222", height="0.65278"];
							freemind_modes_mindmapmode_actions_xml_ActionFilter_FirstActionFilter [label="{+ FirstActionFilter}", levelType="7_FAMIX.Class", hasData=false, hasMethods=false, pos="3754.5,4100.1", rects="3694.5,4082.1,3814.5,4118.1", width="1.6667", height="0.51389"];
							freemind_modes_mindmapmode_actions_xml_ActionFilter_FinalActionFilter [label="{+ FinalActionFilter}", levelType="7_FAMIX.Class", hasData=false, hasMethods=false, pos="3795.5,4230.1", rects="3734.5,4212.1,3856.5,4248.1", width="1.6944", height="0.51389"];
						}
						freemind_modes_mindmapmode_actions_xml_ActionPair [label="{+ ActionPair| doAction : UNKNOWN\l undoAction : UNKNOWN\l| getDoAction() \l+ setDoAction(XmlAction): void \l ActionPair(?,?) \l+\
 reverse(): ActionPair \l+ setUndoAction(XmlAction): void \l+ getDoAction(): UNKNOWN \l+ ActionPair(XmlAction,XmlAction) \l+ getUndoAction\
(): UNKNOWN \l setDoAction(?) \l getUndoAction()}", levelType="6_FAMIX.Class", hasData=true, hasMethods=true, pos="4225.4,4339.8", rects="4112.4,4426.3,4338.4,4449.3 4112.4,4388.3,4338.4,4426.3 4112.4,4230.3,4338.4,4388.3", width="3.1389", height="3.0556"];
						freemind_modes_mindmapmode_actions_xml_AbstractActorXml [label="{*+ AbstractActorXml|- mindMapModeController : MindMapController\l|# createCompoundAction(): UNKNOWN \l# AbstractActorXml(MindMapController\
) \l# getNodeID(MindMapNode): String \l# getAttributeController(): AttributeController \l# getNode(String): NodeAdapter\
 \l# getAttributeRegistry(): AttributeRegistry}", levelType="6_FAMIX.Class", hasData=true, hasMethods=true, pos="3866.4,3547.8", rects="3721.9,3596.8,4010.9,3619.8 3721.9,3573.8,4010.9,3596.8 3721.9,3475.8,4010.9,3573.8", width="4.0139", height="2.0139"];
						freemind_modes_mindmapmode_actions_xml_UndoActionHandler [label="{+ UndoActionHandler|- controller : MindMapController\l- undo : UndoAction\l- redo : RedoAction\l|+ executeAction(ActionPair): void\
 \l+ startTransaction(String): void \l+ UndoActionHandler(MindMapController,UndoAction,RedoAction) \l+ endTransaction(String)\
: void}", levelType="6_FAMIX.Class", hasData=true, hasMethods=true, pos="4109.4,3911.8", rects="3904.4,3960.8,4314.4,3983.8 3904.4,3907.8,4314.4,3960.8 3904.4,3839.8,4314.4,3907.8", width="5.6944", height="2.0139"];
						freemind_modes_mindmapmode_actions_xml_PrintActionHandler [label="{+ PrintActionHandler|- c : MindMapController\l- logger : Logger\l|+ startTransaction(String): void \l+ executeAction(XmlAction)\
: void \l+ freemind.modes.mindmapmode.actions.xml.PrintActionHandler(MindMapController) \l+ endTransaction(String): void}", levelType="6_FAMIX.Class", hasData=true, hasMethods=true, pos="4158.4,3722.8", rects="3904.4,3764.3,4412.4,3787.3 3904.4,3726.3,4412.4,3764.3 3904.4,3658.3,4412.4,3726.3", width="7.0556", height="1.8056"];
						freemind_modes_mindmapmode_actions_xml_ActionHandler [label="{+ ActionHandler|*+ endTransaction(String): void \l*+ startTransaction(String): void \l executeAction(?) \l executeAction(XmlAction\
): void}", levelType="6_FAMIX.Class", hasData=false, hasMethods=true, pos="3511.4,3573.8", rects="3409.9,3596.3,3612.9,3619.3 3409.9,3528.3,3612.9,3596.3", width="2.8194", height="1.2778"];
						freemind_modes_mindmapmode_actions_xml_ActorXml [label="{+ ActorXml|*+ getDoActionClass(): Class \l+ act(XmlAction): void \l act(?)}", levelType="6_FAMIX.Class", hasData=false, hasMethods=true, pos="4154.4,3539.8", rects="4060.4,3554.8,4248.4,3577.8 4060.4,3501.8,4248.4,3554.8", width="2.6111", height="1.0694"];
						freemind_modes_mindmapmode_actions_xml_AbstractXmlAction [label="{*+ AbstractXmlAction|- actor : ActorXml\l- controller : MindMapController\l|# AbstractXmlAction(String,Icon,MindMapController) \
\l+ addActor(ActorXml): void \l# getShortDescription(): String \l*# xmlActionPerformed(ActionEvent): void \l+ getMindMapController\
(): MindMapController \l+ actionPerformed(ActionEvent): void \l+ getActor(): ActorXml}", levelType="6_FAMIX.Class", hasData=true, hasMethods=true, pos="4067.4,4108.8", rects="3904.4,4172.8,4230.4,4195.8 3904.4,4134.8,4230.4,4172.8 3904.4,4021.8,4230.4,4134.8", width="4.5278", height="2.4306"];
						freemind_modes_mindmapmode_actions_xml_ActionFactory [label="{+ ActionFactory|- controller : Controller\l- undoActionHandler : UndoActionHandler\l- registeredFilters : Vector\l- registeredHandler\
 : Vector\l- logger : Logger\l- registeredActors : HashMap\l|+ getController(): Controller \l+ registerUndoHandler(UndoActionHandler\
): void \l getActor(?) \l+ deregisterHandler(ActionHandler): void \l- executeAction(ActionPair): boolean \l+ registerFilter\
(ActionFilter): void \l &lt;Initializer&gt;() \l+ deregisterFilter(ActionFilter): void \l+ getActor(XmlAction): ActorXml \l-\
 startTransaction(String): void \l+ deregisterActor(Class): void \l- endTransaction(String): void \l+ doTransaction(String,ActionPair\
): boolean \l+ registerActor(ActorXml,Class): void \l+ registerHandler(ActionHandler): void \l+ ActionFactory(Controller)}", levelType="6_FAMIX.Class", hasData=true, hasMethods=true, pos="3716.4,3842.8", rects="3565.9,4004.3,3866.9,4027.3 3565.9,3906.3,3866.9,4004.3 3565.9,3658.3,3866.9,3906.3", width="4.1806", height="5.1389"];
					}
					subgraph cluster_freemind_modes_mindmapmode_actions_MindMapActions {
						graph [label="+ MindMapActions",
							levelType="5_FAMIX.Class",
							bb="2429.7,3395.5,3356.7,4524.5"];
						freemind_modes_mindmapmode_actions_MindMapActions [label="{MindMapActions|+ NEW_SIBLING_BEFORE : int\l+ NEW_CHILD_WITHOUT_FOCUS : int\l+ NEW_CHILD : int\l+ NEW_SIBLING_BEHIND : int\l|+ paste\
(MindMapNode,MindMapNode): void \l+ nodeRefresh(MindMapNode): void \l+ deleteNode(MindMapNode): void \l deRegisterMouseWheelEventHandler\
(MouseWheelEventHandler): void \l invokeHook(ModeControllerHook): void \l+ unMarshall(String): UNKNOWN \l+ setNodeBackgroundColor\
(MindMapNode,Color): void \l+ setNodeStyle(MindMapNode,String): void \l+ removeLastIcon(MindMapNode): int \l+ removeAllIcons\
(MindMapNode): void \l+ setNodeColor(MindMapNode,Color): void \l setFolded(MindMapNode,boolean): void \l+ cut(List): Transferable\
 \l+ setEdgeStyle(MindMapNode,String): void \l+ addIcon(MindMapNode,MindIcon): void \l+ removeHook(MindMapNode,List,String\
): void \l clearNodeContents(MindMapNode): void \l+ nodeChanged(MindMapNode): void \l+ changeArrowsOfArrowLink(MindMapArrowLinkModel\
,boolean,boolean): void \l+ paste(Transferable,MindMapNode): void \l+ marshall(XmlAction): String \l+ setArrowLinkColor(\
MindMapLink,Color): void \l editAttribute(MindMapNode,String,String): int \l addNewNode(MindMapNode,int,boolean): MindMapNode \l+\
 addHook(MindMapNode,List,String,Properties): void \l+ setArrowLinkEndPoints(MindMapArrowLink,Point,Point): void \l+ edit(KeyEvent\
,boolean,boolean): void \l createModeControllerHook(String): void \l+ getRootNode(): MindMapNode \l+ applyPattern(MindMapNode\
,Pattern): void \l+ setNodeText(MindMapNode,String): void \l+ nodeStructureChanged(MindMapNode): void \l+ setLink(MindMapNode,String\
): void \l+ setNoteText(MindMapNode,String): void \l+ blendNodeColor(MindMapNode): void \l+ joinNodes(MindMapNode,List): void\
 \l+ applyPattern(MindMapNode,String): void \l setAttribute(MindMapNode,int,Attribute): void \l invokeHooksRecursively(NodeAdapter\
,MindMap): void \l addAttribute(MindMapNode,Attribute): int \l+ paste(Transferable,MindMapNode,boolean,boolean): boolean \l &\
lt;Initializer&gt;() \l registerMouseWheelEventHandler(MouseWheelEventHandler): void \l+ setEdgeWidth(MindMapNode,int): void \l \
createNodeHook(String,MindMapNode,MindMap): NodeHook \l+ setCloud(MindMapNode,boolean): void \l+ removeReference(MindMapLink): void\
 \l isUndoAction(): boolean \l+ setFontFamily(MindMapNode,String): void \l+ setEdgeColor(MindMapNode,Color): void \l load(String\
,String): boolean \l+ increaseFontSize(MindMapNode,int): void \l toggleFolded(): void \l getActionFactory(): ActionFactory \l\
 removeAttribute(MindMapNode,int): void \l+ cut(): Transferable \l+ setItalic(MindMapNode,boolean): void \l+ addNew(MindMapNode,\
int,KeyEvent): MindMapNode \l+ moveNodePosition(MindMapNode,int,int,int): void \l showThisMap(): void \l+ splitNode(MindMapNode,\
int,String): void \l+ addLink(MindMapNode,MindMapNode): void \l+ setCloudColor(MindMapNode,Color): void \l+ setBold(MindMapNode,\
boolean): void \l+ setFontSize(MindMapNode,String): void \l moveNodes(MindMapNode,List,int): void}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="2675.9,3948.8", rects="2437.4,4470.3,2914.4,4493.3 2437.4,4402.3,2914.4,4470.3 2437.4,3404.3,2914.4,4402.3", width="6.625", height="15.139"];
						freemind_modes_mindmapmode_actions_MindMapActions_MouseWheelEventHandler [label="{+ MouseWheelEventHandler|*+ handleMouseWheelEvent(MouseWheelEvent): boolean}", levelType="6_FAMIX.Class", hasData=false, hasMethods=true, pos="3177.9,3654.8", rects="3007.4,3654.8,3348.4,3677.8 3007.4,3631.8,3348.4,3654.8", width="4.7361", height="0.65278"];
					}
					subgraph cluster_freemind_modes_mindmapmode_actions_NodeBackgroundColorAction {
						graph [label="+ NodeBackgroundColorAction",
							levelType="5_FAMIX.Class",
							bb="2682.2,4584,3412.2,4868"];
						freemind_modes_mindmapmode_actions_NodeBackgroundColorAction [label="{NodeBackgroundColorAction|- controller : MindMapController\l|+ createNodeBackgroundColorFormatAction(MindMapNode,Color): UNKNOWN\
 \l+ act(XmlAction): void \l+ NodeBackgroundColorAction(MindMapController) \l+ actionPerformed(ActionEvent): void \l+ setNodeBackgroundColor\
(MindMapNode,Color): void \l+ getDoActionClass(): Class}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="2932.4,4664.3", rects="2689.9,4713.3,3174.9,4736.3 2689.9,4690.3,3174.9,4713.3 2689.9,4592.3,3174.9,4690.3", width="6.7361", height="2.0139"];
						freemind_modes_mindmapmode_actions_NodeBackgroundColorAction_RemoveNodeBackgroundColorAction [label="{+ RemoveNodeBackgroundColorAction|- controller : MindMapController\l|+ RemoveNodeBackgroundColorAction(MindMapController)}", levelType="6_FAMIX.Class", hasData=true, hasMethods=true, pos="3222.4,4802.3", rects="3040.4,4813.8,3404.4,4836.8 3040.4,4790.8,3404.4,4813.8 3040.4,4767.8,3404.4,4790.8", width="5.0556", height="0.97222"];
					}
					subgraph cluster_freemind_modes_mindmapmode_actions_PasteAction {
						graph [label="+ PasteAction",
							levelType="5_FAMIX.Class",
							bb="3473.7,4548,4586.7,5312"];
						freemind_modes_mindmapmode_actions_PasteAction [label="{PasteAction|- mUndoPasteHandler : UndoPasteHandler\l- HREF_PATTERN : Pattern\l- logger : Logger\l- mMindMapController : MindMapController\
\l nonLinkCharacter : Pattern\l|- insertNodeInto(MindMapNodeModel,MindMapNode,boolean,boolean,boolean): void \l getPasteNodeAction\
(?,?,?) \l &lt;Initializer&gt;() \l- insertNodeInto(MindMapNode,MindMapNode): void \l- getTransferableContent(Transferable\
,UndoPasteNodeAction): UNKNOWN \l+ getPasteNodeAction(Transferable,NodeCoordinate,UndoPasteNodeAction): UNKNOWN \l+ PasteAction\
(MindMapController) \l+ act(XmlAction): void \l+ paste(MindMapNode,MindMapNode): void \l- pasteStringWithoutRedisplay(Transferable\
,MindMapNode,boolean,boolean): MindMapNode \l+ actionPerformed(ActionEvent): void \l- _paste(Transferable,MindMapNode,boolean\
,boolean): void \l+ getDoActionClass(): Class \l# determineAmountOfNewNodes(Transferable): int \l+ pasteXMLWithoutRedisplay(\
String,MindMapNode,boolean,boolean,boolean,HashMap): MindMapNodeModel \l- getFlavorHandlers(): DataFlavorHandler \l- getTransferable\
(TransferableContent): Transferable \l+ paste(Transferable,MindMapNode,boolean,boolean): boolean \l- insertNodeInto(MindMapNodeModel\
,MindMapNode,int): void}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="3807.9,4864.3", rects="3481.4,5040.8,4134.4,5063.8 3481.4,4957.8,4134.4,5040.8 3481.4,4664.8,4134.4,4957.8", width="9.0694", height="5.5556"];
						freemind_modes_mindmapmode_actions_PasteAction_DataFlavorHandler [label="{- DataFlavorHandler| getDataFlavor(): DataFlavor \l paste(Object,MindMapNode,boolean,boolean,Transferable): void}", levelType="6_FAMIX.Class", hasData=false, hasMethods=true, pos="4376.9,4965.3", rects="4183.9,4972.8,4569.9,4995.8 4183.9,4934.8,4569.9,4972.8", width="5.3611", height="0.86111"];
						freemind_modes_mindmapmode_actions_PasteAction_MindMapNodesFlavorHandler [label="{- MindMapNodesFlavorHandler|+ paste(Object,MindMapNode,boolean,boolean,Transferable): void \l+ getDataFlavor(): DataFlavor \l- \
MindMapNodesFlavorHandler()}", levelType="6_FAMIX.Class", hasData=false, hasMethods=true, pos="4220.9,5134.3", rects="4021.9,5149.3,4419.9,5172.3 4021.9,5096.3,4419.9,5149.3", width="5.5278", height="1.0694"];
						freemind_modes_mindmapmode_actions_PasteAction_FileListFlavorHandler [label="{- FileListFlavorHandler|+ paste(Object,MindMapNode,boolean,boolean,Transferable): void \l- FileListFlavorHandler() \l+ getDataFlavor\
(): DataFlavor}", levelType="6_FAMIX.Class", hasData=false, hasMethods=true, pos="3788.9,5134.3", rects="3589.9,5149.3,3987.9,5172.3 3589.9,5096.3,3987.9,5149.3", width="5.5278", height="1.0694"];
						freemind_modes_mindmapmode_actions_PasteAction_HtmlFlavorHandler [label="{- HtmlFlavorHandler|+ paste(Object,MindMapNode,boolean,boolean,Transferable): void \l+ getDataFlavor(): DataFlavor}", levelType="6_FAMIX.Class", hasData=false, hasMethods=true, pos="4328.9,5235.3", rects="4129.9,5242.8,4527.9,5265.8 4129.9,5204.8,4527.9,5242.8", width="5.5278", height="0.86111"];
						freemind_modes_mindmapmode_actions_PasteAction_DirectHtmlFlavorHandler [label="{- DirectHtmlFlavorHandler|- DirectHtmlFlavorHandler() \l+ paste(Object,MindMapNode,boolean,boolean,Transferable): void \l+ getDataFlavor\
(): DataFlavor}", levelType="6_FAMIX.Class", hasData=false, hasMethods=true, pos="4004.9,4594.3", rects="3805.9,4609.3,4203.9,4632.3 3805.9,4556.3,4203.9,4609.3", width="5.5278", height="1.0694"];
						freemind_modes_mindmapmode_actions_PasteAction_StringFlavorHandler [label="{- StringFlavorHandler|- StringFlavorHandler() \l+ getDataFlavor(): DataFlavor \l+ paste(Object,MindMapNode,boolean,boolean,Transferable\
): void}", levelType="6_FAMIX.Class", hasData=false, hasMethods=true, pos="3894.9,5242.3", rects="3697.4,5257.3,4092.4,5280.3 3697.4,5204.3,4092.4,5257.3", width="5.4861", height="1.0694"];
						freemind_modes_mindmapmode_actions_PasteAction_NodeCoordinate [label="{+ NodeCoordinate|+ target : MindMapNode\l+ asSibling : boolean\l+ isLeft : boolean\l|+ getNode(): MindMapNode \l+ NodeCoordinate\
(MindMapNode,boolean,boolean) \l+ NodeCoordinate(MindMapNode,boolean)}", levelType="6_FAMIX.Class", hasData=true, hasMethods=true, pos="4341.9,4837.3", rects="4183.9,4878.8,4499.9,4901.8 4183.9,4825.8,4499.9,4878.8 4183.9,4772.8,4499.9,4825.8", width="4.3889", height="1.8056"];
						freemind_modes_mindmapmode_actions_PasteAction_ImageFlavorHandler [label="{- ImageFlavorHandler|+ getDataFlavor(): DataFlavor \l- ImageFlavorHandler() \l+ paste(Object,MindMapNode,boolean,boolean,Transferable\
): void}", levelType="6_FAMIX.Class", hasData=false, hasMethods=true, pos="4380.9,4702.3", rects="4183.4,4717.3,4578.4,4740.3 4183.4,4664.3,4578.4,4717.3", width="5.4861", height="1.0694"];
					}
					subgraph cluster_freemind_modes_mindmapmode_actions_ApplyPatternAction {
						graph [label="+ ApplyPatternAction",
							levelType="5_FAMIX.Class",
							bb="2070.2,4799.5,2608.2,5120.5"];
						freemind_modes_mindmapmode_actions_ApplyPatternAction [label="{ApplyPatternAction| mpattern : UNKNOWN\l| applyPattern(?,?) \l getPattern() \l+ getPattern(): UNKNOWN \l+ ApplyPatternAction(MindMapController\
,Pattern) \l ApplyPatternAction(?,?) \l+ edgeWidthIntToString(int): String \l+ applyPattern(MindMapNode,Pattern):\
 void \l+ edgeWidthStringToInt(String): int \l+ apply(MindMapMapModel,MindMapNodeModel): void}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="2248.4,4902.8", rects="2077.9,4974.3,2418.9,4997.3 2077.9,4951.3,2418.9,4974.3 2077.9,4808.3,2418.9,4951.3", width="4.7361", height="2.6389"];
						freemind_modes_mindmapmode_actions_ApplyPatternAction_ExternalPatternAction [label="{+ ExternalPatternAction| act(?,?) \l+ act(MindMapNode,Pattern): void}", levelType="6_FAMIX.Class", hasData=false, hasMethods=true, pos="2493.4,5058.8", rects="2386.4,5066.3,2600.4,5089.3 2386.4,5028.3,2600.4,5066.3", width="2.9722", height="0.86111"];
					}
					freemind_modes_mindmapmode_actions_RemoveIconAction [label="{+ RemoveIconAction|- iconAction : IconAction\l|+ RemoveIconAction(MindMapController) \l createRemoveIconXmlAction(?,?) \l+ getDescription\
(): String \l+ apply(MindMap,MindMapNode): ActionPair \l+ getKeystrokeResourceName(): String \l+ setIconAction(IconAction\
): void \l+ createRemoveIconXmlAction(MindMapNode,int): UNKNOWN \l+ getKeyStroke(): KeyStroke \l+ getIcon(): ImageIcon \l+ act\
(XmlAction): void \l+ getDoActionClass(): Class \l+ removeLastIcon(MindMapNode): int}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="1904.2,2901", rects="1709.7,2995,2098.7,3018 1709.7,2972,2098.7,2995 1709.7,2784,2098.7,2972", width="5.4028", height="3.2639"];
					freemind_modes_mindmapmode_actions_FontSizeAction [label="{+ FontSizeAction|- actionSize : String\l|+ apply(MindMap,MindMapNode): ActionPair \l+ setFontSize(MindMapNode,String): void \l+\
 actionPerformed(String): void \l+ FontSizeAction(MindMapController) \l+ getDoActionClass(): Class \l- getActionPair(MindMapNode\
,String): ActionPair \l- createFontSizeNodeAction(MindMapNode,String): UNKNOWN \l+ act(XmlAction): void}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="2733.2,5283", rects="2538.2,5347,2928.2,5370 2538.2,5324,2928.2,5347 2538.2,5196,2928.2,5324", width="5.4167", height="2.4306"];
					freemind_modes_mindmapmode_actions_BoldAction [label="{+ BoldAction|+ apply(MindMap,MindMapNode): ActionPair \l+ act(XmlAction): void \l- getActionPair(MindMapNode,boolean): ActionPair\
 \l+ setBold(MindMapNode,boolean): void \l+ getDoActionClass(): Class \l+ BoldAction(MindMapController) \l+ isSelected(JMenuItem\
,Action): boolean \l- toggleBold(MindMapNode,boolean): UNKNOWN}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="4494.2,2608", rects="4337.7,2660.5,4650.7,2683.5 4337.7,2532.5,4650.7,2660.5", width="4.3472", height="2.1111"];
					freemind_modes_mindmapmode_actions_UndoAction [label="{+ UndoAction|- isUndoAction : boolean\l# actionPairList : Vector\l- actionFrameStarted : boolean\l- timeOfLastAdd : long\l- controller\
 : MindMapController\l- TIME_TO_BEGIN_NEW_ACTION : long\l# logger : Logger\l|# undoDoAction(ActionPair): void \l+ UndoAction\
(MindMapController) \l+ setEnabled(boolean): void \l+ print(): void \l+ clear(): void \l# informUndoPartner(ActionPair): void\
 \l# UndoAction(MindMapController,String,Icon,MindMapController) \l# xmlActionPerformed(ActionEvent): void \l+ isUndoAction(): boolean\
 \l- startActionFrame(): void \l+ add(ActionPair): void \l &lt;Initializer&gt;()}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="2162.2,4566", rects="1961.7,4705,2362.7,4728 1961.7,4592,2362.7,4705 1961.7,4404,2362.7,4592", width="5.5694", height="4.5139"];
					freemind_modes_mindmapmode_actions_ChangeArrowsInArrowLinkAction [label="{+ ChangeArrowsInArrowLinkAction|- controller : MindMapController\l hasStartArrow : boolean\l arrowLink : MindMapArrowLinkModel\l\
 hasEndArrow : boolean\l|- createArrowLinkArrowXmlAction(MindMapArrowLinkModel,boolean,boolean): UNKNOWN \l- getLinkRegistry():\
 MindMapLinkRegistry \l+ act(XmlAction): void \l+ ChangeArrowsInArrowLinkAction(MindMapController,String,String,MindMapArrowLinkModel\
,boolean,boolean) \l+ actionPerformed(ActionEvent): void \l- createArrowLinkArrowXmlAction(MindMapArrowLinkModel,String,String\
): UNKNOWN \l+ getDoActionClass(): Class \l- getActionPair(MindMapArrowLinkModel,boolean,boolean): ActionPair \l+ changeArrowsOfArrowLink\
(MindMapArrowLinkModel,boolean,boolean): void}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="3737.2,3297", rects="3401.7,3391,4072.7,3414 3401.7,3323,4072.7,3391 3401.7,3180,4072.7,3323", width="9.3194", height="3.2639"];
					freemind_modes_mindmapmode_actions_EditAction [label="{+ EditAction|- mMindMapController : MindMapController\l- HTML_HEAD : Pattern\l- mCurrentEditDialog : EditNodeBase\l|- setHtmlText\
(NodeView,String): void \l+ getDoActionClass(): Class \l+ actionPerformed(ActionEvent): void \l+ EditAction(MindMapController)\
 \l+ stopEditing(): void \l+ edit(KeyEvent,boolean,boolean): void \l# getMindMapController(): MindMapController \l+ edit(NodeView\
,NodeView,KeyEvent,boolean,boolean,boolean): void \l+ act(XmlAction): void \l+ setNodeText(MindMapNode,String): void \l &lt;Initializer\
&gt;()}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="2170.2,3665", rects="1961.7,3766.5,2378.7,3789.5 1961.7,3713.5,2378.7,3766.5 1961.7,3540.5,2378.7,3713.5", width="5.7917", height="3.4722"];
					freemind_modes_mindmapmode_actions_UndoPasteHandler [label="{+ UndoPasteHandler|- mMindMapController : MindMapController\l# logger : Logger\l|+ act(XmlAction): void \l &lt;Initializer&gt;(\
) \l+ UndoPasteHandler(MindMapController) \l+ getDoActionClass(): Class}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="2708.2,2705", rects="2574.2,2746.5,2842.2,2769.5 2574.2,2708.5,2842.2,2746.5 2574.2,2640.5,2842.2,2708.5", width="3.7222", height="1.8056"];
					freemind_modes_mindmapmode_actions_RevertAction [label="{+ RevertAction|- mindMapController : MindMapController\l| createRevertXmlAction(?,?,?) \l+ actionPerformed(ActionEvent): void \l+\
 createRevertXmlAction(String,String,String): UNKNOWN \l+ getDoActionClass(): Class \l+ act(XmlAction): void \l+ openXmlInsteadOfMap\
(String): void \l+ createRevertXmlAction(MindMap,String,String): UNKNOWN \l+ createRevertXmlAction(File): UNKNOWN \l+ RevertAction\
(MindMapController)}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="1720.2,4679", rects="1530.2,4750.5,1910.2,4773.5 1530.2,4727.5,1910.2,4750.5 1530.2,4584.5,1910.2,4727.5", width="5.2778", height="2.6389"];
					freemind_modes_mindmapmode_actions_AddArrowLinkAction [label="{+ AddArrowLinkAction|- modeController : MindMapController\l- removeAction : RemoveArrowLinkAction\l|- getActionPair(MindMapNode\
,MindMapNode): ActionPair \l+ act(XmlAction): void \l- getLinkRegistry(): MindMapLinkRegistry \l+ setRemoveAction(RemoveArrowLinkAction\
): void \l+ actionPerformed(ActionEvent): void \l+ AddArrowLinkAction(MindMapController) \l+ getDoActionClass(): Class \l+\
 addLink(MindMapNode,MindMapNode): void \l+ createAddArrowLinkXmlAction(MindMapNode,MindMapNode,String): UNKNOWN}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="3656.2,3030", rects="3402.2,3109,3910.2,3132 3402.2,3071,3910.2,3109 3402.2,2928,3910.2,3071", width="7.0556", height="2.8472"];
					freemind_modes_mindmapmode_actions_MindMapControllerHookAction [label="{+ MindMapControllerHookAction| mHookName : String\l mindMapController : MindMapController\l|+ MindMapControllerHookAction(String\
,MindMapController) \l+ getHookName(): String \l+ actionPerformed(ActionEvent): void}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="3082.2,2625", rects="2897.7,2659,3266.7,2682 2897.7,2621,3266.7,2659 2897.7,2568,3266.7,2621", width="5.125", height="1.5972"];
					freemind_modes_mindmapmode_actions_ImportFolderStructureAction [label="{+ ImportFolderStructureAction|- logger : Logger\l- controller : MindMapController\l|- addNode(MindMapNode,String,String): MindMapNode\
 \l+ actionPerformed(ActionEvent): void \l+ ImportFolderStructureAction(MindMapController) \l+ importFolderStructure(File,\
MindMapNode,boolean): void \l- getFrame(): FreeMindMain}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="2679.2,3252", rects="2501.7,3301,2856.7,3324 2501.7,3263,2856.7,3301 2501.7,3180,2856.7,3263", width="4.9306", height="2.0139"];
					freemind_modes_mindmapmode_actions_EdgeColorAction [label="{+ EdgeColorAction|- controller : MindMapController\l|+ getDoActionClass(): Class \l+ EdgeColorAction(MindMapController) \l+ act\
(XmlAction): void \l+ createEdgeColorFormatAction(MindMapNode,Color): UNKNOWN \l+ setEdgeColor(MindMapNode,Color): void \l+ actionPerformed\
(ActionEvent): void}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="1809.2,4908", rects="1602.2,4957,2016.2,4980 1602.2,4934,2016.2,4957 1602.2,4836,2016.2,4934", width="5.75", height="2.0139"];
					freemind_modes_mindmapmode_actions_NodeStyleAction [label="{+ NodeStyleAction|- mStyle : String\l|- createNodeStyleFormatAction(MindMapNode,String): UNKNOWN \l+ isSelected(JMenuItem,Action\
): boolean \l+ apply(MindMap,MindMapNode): ActionPair \l+ act(XmlAction): void \l+ NodeStyleAction(MindMapController,String) \l-\
 getActionPair(MindMapNode,String): ActionPair \l+ setStyle(MindMapNode,String): void \l+ getDoActionClass(): Class}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="4074.2,2763", rects="3869.7,2827,4278.7,2850 3869.7,2804,4278.7,2827 3869.7,2676,4278.7,2804", width="5.6806", height="2.4306"];
					freemind_modes_mindmapmode_actions_AddLocalLinkAction [label="{+ AddLocalLinkAction|- modeController : MindMapController\l|+ AddLocalLinkAction(MindMapController) \l+ actionPerformed(ActionEvent\
): void}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="1521.2,2826", rects="1385.7,2845,1656.7,2868 1385.7,2822,1656.7,2845 1385.7,2784,1656.7,2822", width="3.7639", height="1.1806"];
					freemind_modes_mindmapmode_actions_HookAction [label="{+ HookAction| getHookName(): String}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="2539.2,4607", rects="2466.2,4607,2612.2,4630 2466.2,4584,2612.2,4607", width="2.0278", height="0.65278"];
					freemind_modes_mindmapmode_actions_ModeControllerActionHandler [label="{+ ModeControllerActionHandler|- factory : ActionFactory\l|+ executeAction(XmlAction): void \l+ startTransaction(String): void \l+\
 endTransaction(String): void \l+ ModeControllerActionHandler(ActionFactory)}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="3834.2,2553", rects="3689.7,2587,3978.7,2610 3689.7,2564,3978.7,2587 3689.7,2496,3978.7,2564", width="4.0139", height="1.5972"];
					freemind_modes_mindmapmode_actions_FreemindAction [label="{*+ FreemindAction|- actionIcon : Icon\l- selectedIcon : Icon\l- pMindMapController : MindMapController\l|+ FreemindAction(String\
,Icon,MindMapController) \l+ FreemindAction(String,String,MindMapController) \l+ getMindMapController(): MindMapController \l+ \
addActor(ActorXml): void}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="3776.2,5448", rects="3618.2,5497,3934.2,5520 3618.2,5444,3934.2,5497 3618.2,5376,3934.2,5444", width="4.3889", height="2.0139"];
					freemind_modes_mindmapmode_actions_CompoundActionHandler [label="{+ CompoundActionHandler|- c : MindMapController\l|+ act(XmlAction): void \l+ CompoundActionHandler(MindMapController) \l+ actionPerformed\
(ActionEvent): void \l+ getDoActionClass(): Class}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="3478.2,2553", rects="3329.7,2587,3626.7,2610 3329.7,2564,3626.7,2587 3329.7,2496,3626.7,2564", width="4.125", height="1.5972"];
					freemind_modes_mindmapmode_actions_NewPreviousSiblingAction [label="{+ NewPreviousSiblingAction|- controller : MindMapController\l|+ NewPreviousSiblingAction(MindMapController) \l+ actionPerformed\
(ActionEvent): void}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="4489.2,2790", rects="4338.2,2809,4640.2,2832 4338.2,2786,4640.2,2809 4338.2,2748,4640.2,2786", width="4.1944", height="1.1806"];
					freemind_modes_mindmapmode_actions_NodeColorAction [label="{+ NodeColorAction|- controller : MindMapController\l|+ setNodeColor(MindMapNode,Color): void \l+ createNodeColorFormatAction(MindMapNode\
,Color): UNKNOWN \l+ act(XmlAction): void \l+ getDoActionClass(): Class \l+ actionPerformed(ActionEvent): void \l+ NodeColorAction\
(MindMapController)}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="1810.2,5124", rects="1602.2,5173,2018.2,5196 1602.2,5150,2018.2,5173 1602.2,5052,2018.2,5150", width="5.7778", height="2.0139"];
					freemind_modes_mindmapmode_actions_DeleteChildAction [label="{+ DeleteChildAction|- text : String\l- mMindMapController : MindMapController\l|+ act(XmlAction): void \l- removeHooks(MindMapNode\
): void \l+ deleteNode(MindMapNode): void \l+ deleteWithoutUndo(MindMapNode): void \l+ getDoActionClass(): Class \l getDeleteNodeAction\
(?) \l+ DeleteChildAction(MindMapController) \l+ actionPerformed(ActionEvent): void \l+ getDeleteNodeAction(String): UNKNOWN\
}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="4112.2,5478", rects="3977.7,5557,4246.7,5580 3977.7,5519,4246.7,5557 3977.7,5376,4246.7,5519", width="3.7361", height="2.8472"];
					freemind_modes_mindmapmode_actions_CopyAction [label="{+ CopyAction|- controller : MindMapController\l|+ CopyAction(MindMapController) \l+ actionPerformed(ActionEvent): void}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="4165.2,2574", rects="4049.7,2593,4280.7,2616 4049.7,2570,4280.7,2593 4049.7,2532,4280.7,2570", width="3.2083", height="1.1806"];
					freemind_modes_mindmapmode_actions_CloudColorAction [label="{+ CloudColorAction|- controller : MindMapController\l|+ act(XmlAction): void \l+ isEnabled(JMenuItem,Action): boolean \l+ setCloudColor\
(MindMapNode,Color): void \l+ actionPerformed(ActionEvent): void \l+ createCloudColorXmlAction(MindMapNode,Color): UNKNOWN\
 \l+ getDoActionClass(): Class \l+ CloudColorAction(MindMapController)}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="1731.2,3152", rects="1529.7,3208.5,1932.7,3231.5 1529.7,3185.5,1932.7,3208.5 1529.7,3072.5,1932.7,3185.5", width="5.5972", height="2.2222"];
					freemind_modes_mindmapmode_actions_ImportExplorerFavoritesAction [label="{+ ImportExplorerFavoritesAction|- controller : MindMapController\l|+ importExplorerFavorites(File,MindMapNode,boolean): boolean\
 \l+ actionPerformed(ActionEvent): void \l+ ImportExplorerFavoritesAction(MindMapController) \l- addNode(MindMapNode,String): MindMapNode\
}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="1723.2,2661", rects="1530.2,2695,1916.2,2718 1530.2,2672,1916.2,2695 1530.2,2604,1916.2,2672", width="5.3611", height="1.5972"];
					freemind_modes_mindmapmode_actions_SingleNodeOperation [label="{+ SingleNodeOperation|*+ apply(MindMapMapModel,MindMapNodeModel): void}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="2676.2,3095", rects="2502.2,3095,2850.2,3118 2502.2,3072,2850.2,3095", width="4.8333", height="0.65278"];
					freemind_modes_mindmapmode_actions_NewSiblingAction [label="{+ NewSiblingAction|- controller : MindMapController\l|+ NewSiblingAction(MindMapController) \l+ actionPerformed(ActionEvent): void\
}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="2701.2,2538", rects="2574.2,2557,2828.2,2580 2574.2,2534,2828.2,2557 2574.2,2496,2828.2,2534", width="3.5278", height="1.1806"];
					freemind_modes_mindmapmode_actions_NewChildAction [label="{+ NewChildAction|- logger : Logger\l- c : MindMapController\l|+ addNew(MindMapNode,int,KeyEvent): MindMapNode \l+ getDoActionClass\
(): Class \l &lt;Initializer&gt;() \l+ actionPerformed(ActionEvent): void \l+ addNewNode(MindMapNode,int,boolean): MindMapNode\
 \l+ act(XmlAction): void \l+ NewChildAction(MindMapController) \l+ addNewNode(MindMapNode,int): MindMapNode \l+ getAddNodeAction\
(MindMapNode,int,String,boolean): UNKNOWN}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="3609.2,2778", rects="3402.2,2857,3816.2,2880 3402.2,2819,3816.2,2857 3402.2,2676,3816.2,2819", width="5.75", height="2.8472"];
					freemind_modes_mindmapmode_actions_PasteAsPlainTextAction [label="{+ PasteAsPlainTextAction|- logger : Logger\l- mMindMapController : MindMapController\l|+ actionPerformed(ActionEvent): void \l+\
 PasteAsPlainTextAction(MindMapController)}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="3400.2,5498", rects="3258.2,5524.5,3542.2,5547.5 3258.2,5486.5,3542.2,5524.5 3258.2,5448.5,3542.2,5486.5", width="3.9444", height="1.3889"];
					freemind_modes_mindmapmode_actions_ItalicAction [label="{+ ItalicAction|- modeController : MindMapController\l|- toggleItalic(MindMapNode,boolean): UNKNOWN \l+ setItalic(MindMapNode,boolean\
): void \l+ act(XmlAction): void \l+ ItalicAction(MindMapController) \l+ getDoActionClass(): Class \l+ apply(MindMap,MindMapNode\
): ActionPair \l+ isSelected(JMenuItem,Action): boolean \l- getActionPair(MindMapNode,boolean): ActionPair}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="1721.2,4239", rects="1565.7,4303,1876.7,4326 1565.7,4280,1876.7,4303 1565.7,4152,1876.7,4280", width="4.3194", height="2.4306"];
					freemind_modes_mindmapmode_actions_CopySingleAction [label="{+ CopySingleAction|- controller : MindMapController\l|+ CopySingleAction(MindMapController) \l+ actionPerformed(ActionEvent): void\
}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="2413.2,5490", rects="2285.7,5509,2540.7,5532 2285.7,5486,2540.7,5509 2285.7,5448,2540.7,5486", width="3.5417", height="1.1806"];
					freemind_modes_mindmapmode_actions_FontFamilyAction [label="{+ FontFamilyAction|- actionFont : String\l|- getActionPair(MindMapNode,String): ActionPair \l+ actionPerformed(String): void \l+\
 FontFamilyAction(MindMapController) \l+ act(XmlAction): void \l+ apply(MindMap,MindMapNode): ActionPair \l+ getDoActionClass()\
: Class \l+ setFontFamily(MindMapNode,String): void \l- createFontNodeAction(MindMapNode,String): UNKNOWN}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="1711.2,3735", rects="1529.7,3799,1892.7,3822 1529.7,3776,1892.7,3799 1529.7,3648,1892.7,3776", width="5.0417", height="2.4306"];
					freemind_modes_mindmapmode_actions_ToggleChildrenFoldedAction [label="{+ ToggleChildrenFoldedAction|- modeController : MindMapController\l|+ ToggleChildrenFoldedAction(MindMapController) \l+ actionPerformed\
(ActionEvent): void}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="2228.2,3438", rects="2070.2,3457,2386.2,3480 2070.2,3434,2386.2,3457 2070.2,3396,2386.2,3434", width="4.3889", height="1.1806"];
					freemind_modes_mindmapmode_actions_IconAction [label="{+ IconAction|- modeController : MindMapController\l+ icon : MindIcon\l- removeLastIconAction : RemoveIconAction\l|- getAddIconActionPair\
(MindMapNode,MindIcon,int): ActionPair \l- removeIcon(MindMapNode,MindIcon,boolean): void \l+ getIcon(): ImageIcon \l+ \
getDoActionClass(): Class \l+ addIcon(MindMapNode,MindIcon): void \l+ getKeystrokeResourceName(): String \l+ getDescription(): String\
 \l+ IconAction(MindMapController,MindIcon,RemoveIconAction) \l+ actionPerformed(ActionEvent): void \l+ createAddIconAction\
(MindMapNode,MindIcon,int): UNKNOWN \l- getAddLastIconActionPair(MindMapNode,MindIcon): ActionPair \l- removeIcon(boolean): void\
 \l+ getKeyStroke(): KeyStroke \l- getRemoveIconActionPair(MindMapNode,MindIcon,int): ActionPair \l- addLastIcon(): void \l- removeAllIcons\
(): void \l- getRemoveIconActionPair(MindMapNode,MindIcon,boolean): ActionPair \l+ getMindIcon(): MindIcon \l- toggleIcon\
(): void \l createAddIconAction(?,?,?) \l- toggleIcon(MindMapNode,MindIcon): void \l+ act(XmlAction): void \l- getToggleIconActionPair\
(MindMapNode,MindIcon): ActionPair}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="3191.2,5159", rects="2969.7,5350.5,3412.7,5373.5 2969.7,5297.5,3412.7,5350.5 2969.7,4944.5,3412.7,5297.5", width="6.1528", height="5.9722"];
					freemind_modes_mindmapmode_actions_UsePlainTextAction [label="{+ UsePlainTextAction|+ UsePlainTextAction(MindMapController)}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="1876.2,2519", rects="1746.2,2519,2006.2,2542 1746.2,2496,2006.2,2519", width="3.6111", height="0.65278"];
					freemind_modes_mindmapmode_actions_EdgeStyleAction [label="{+ EdgeStyleAction|- mStyle : String\l|+ apply(MindMap,MindMapNode): ActionPair \l+ setEdgeStyle(MindMapNode,String): void \l- getActionPair\
(MindMapNode,String): ActionPair \l+ act(XmlAction): void \l+ isSelected(JMenuItem,Action): boolean \l+ getDoActionClass\
(): Class \l+ getStyle(MindMapNode): String \l- createNodeStyleFormatAction(MindMapNode,String): UNKNOWN \l+ EdgeStyleAction\
(MindMapController,String)}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="1806.2,5363", rects="1601.7,5434.5,2010.7,5457.5 1601.7,5411.5,2010.7,5434.5 1601.7,5268.5,2010.7,5411.5", width="5.6806", height="2.6389"];
					freemind_modes_mindmapmode_actions_CloudAction [label="{+ CloudAction|+ isSelected(JMenuItem,Action): boolean \l+ act(XmlAction): void \l+ setCloud(MindMapNode,boolean): void \l- getActionPair\
(MindMapNode,boolean): ActionPair \l+ CloudAction(MindMapController) \l+ getDoActionClass(): Class \l- createAddCloudXmlAction\
(MindMapNode,boolean,Color): UNKNOWN \l+ apply(MindMap,MindMapNode): ActionPair}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="4342.2,3256", rects="4122.2,3308.5,4562.2,3331.5 4122.2,3180.5,4562.2,3308.5", width="6.1111", height="2.1111"];
					freemind_modes_mindmapmode_actions_RemoveAllIconsAction [label="{+ RemoveAllIconsAction|- addIconAction : IconAction\l|+ getDoActionClass(): Class \l+ RemoveAllIconsAction(MindMapController,IconAction\
) \l+ getKeyStroke(): KeyStroke \l+ getKeystrokeResourceName(): String \l+ createRemoveAllIconsXmlAction(MindMapNode): UNKNOWN\
 \l+ getIcon(): ImageIcon \l+ act(XmlAction): void \l+ removeAllIcons(MindMapNode): void \l+ apply(MindMap,MindMapNode): ActionPair\
 \l+ getDescription(): String}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="2267.2,5298", rects="2070.2,5377,2464.2,5400 2070.2,5354,2464.2,5377 2070.2,5196,2464.2,5354", width="5.4722", height="2.8472"];
					freemind_modes_mindmapmode_actions_CutAction [label="{+ CutAction|- text : String\l- logger : Logger\l- mMindMapController : MindMapController\l|+ cut(List): Transferable \l+ CutAction\
(MindMapController) \l+ getDoActionClass(): Class \l+ getCutNodeAction(MindMapNode): UNKNOWN \l+ actionPerformed(ActionEvent)\
: void \l+ act(XmlAction): void \l &lt;Initializer&gt;()}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="4457.2,5471", rects="4301.7,5542.5,4612.7,5565.5 4301.7,5489.5,4612.7,5542.5 4301.7,5376.5,4612.7,5489.5", width="4.3194", height="2.6389"];
					freemind_modes_mindmapmode_actions_NodeGeneralAction [label="{+ NodeGeneralAction|# logger : Logger\l- actor : NodeActorXml\l# modeController : MindMapController\l singleNodeOperation : SingleNodeOperation\
\l|+ act(XmlAction): void \l# execute(ActionPair): void \l+ addActor(NodeActorXml): void \l+ xmlActionPerformed(\
ActionEvent): void \l# getNodeFromID(String): NodeAdapter \l+ NodeGeneralAction(MindMapController,String,String,NodeActorXml) \l\
# NodeGeneralAction(MindMapController,String,String) \l# setName(String): void \l# getNodeID(MindMapNode): String \l+ NodeGeneralAction\
(MindMapController,String,String,SingleNodeOperation) \l+ setSingleNodeOperation(SingleNodeOperation): void}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="2228.2,3204", rects="1997.7,3313,2458.7,3336 1997.7,3245,2458.7,3313 1997.7,3072,2458.7,3245", width="6.4028", height="3.6806"];
					freemind_modes_mindmapmode_actions_ExportBranchAction [label="{+ ExportBranchAction|- mMindMapController : MindMapController\l|+ ExportBranchAction(MindMapController) \l+ actionPerformed(ActionEvent\
): void}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="1520.2,2970", rects="1386.2,2989,1654.2,3012 1386.2,2966,1654.2,2989 1386.2,2928,1654.2,2966", width="3.7222", height="1.1806"];
					freemind_modes_mindmapmode_actions_RedoAction [label="{+ RedoAction|- controller : MindMapController\l|# informUndoPartner(ActionPair): void \l+ RedoAction(MindMapController)}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="2801.2,4986", rects="2681.7,5005,2920.7,5028 2681.7,4982,2920.7,5005 2681.7,4944,2920.7,4982", width="3.3194", height="1.1806"];
					freemind_modes_mindmapmode_actions_UseRichFormattingAction [label="{+ UseRichFormattingAction|+ UseRichFormattingAction(MindMapController)}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="1749.2,3563", rects="1601.7,3563,1896.7,3586 1601.7,3540,1896.7,3563", width="4.0972", height="0.65278"];
					freemind_modes_mindmapmode_actions_NodeUpAction [label="{+ NodeUpAction|- logger : Logger\l- modeController : MindMapController\l|+ moveNodeTo(MindMapNode,MindMapNode,int): int \l+ act\
(XmlAction): void \l- createMoveNodesAction(MindMapNode,List,int): UNKNOWN \l+ _moveNodes(MindMapNode,List,int): void \l+ getDoActionClass\
(): Class \l- getSortedSiblings(MindMapNode): Vector \l+ moveNodes(MindMapNode,List,int): void \l+ actionPerformed(ActionEvent\
): void \l+ NodeUpAction(MindMapController)}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="1758.2,3390", rects="1566.2,3469,1950.2,3492 1566.2,3431,1950.2,3469 1566.2,3288,1950.2,3431", width="5.3333", height="2.8472"];
					freemind_modes_mindmapmode_actions_RemoveArrowLinkAction [label="{+ RemoveArrowLinkAction|- mArrowLink : MindMapArrowLinkModel\l- controller : MindMapController\l|- getActionPair(MindMapLink): \
ActionPair \l+ actionPerformed(ActionEvent): void \l+ getDoActionClass(): Class \l createRemoveArrowLinkXmlAction(?) \l+ RemoveArrowLinkAction\
(MindMapController,MindMapArrowLinkModel) \l+ getArrowLink(): MindMapArrowLinkModel \l- getLinkRegistry(): MindMapLinkRegistry\
 \l+ createAddArrowLinkXmlAction(MindMapLink): UNKNOWN \l+ setArrowLink(MindMapArrowLinkModel): void \l+ removeReference\
(MindMapLink): void \l+ createRemoveArrowLinkXmlAction(String): UNKNOWN \l+ act(XmlAction): void}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="2152.2,4205", rects="1926.2,4306.5,2378.2,4329.5 1926.2,4268.5,2378.2,4306.5 1926.2,4080.5,2378.2,4268.5", width="6.2778", height="3.4722"];
					freemind_modes_mindmapmode_actions_EdgeWidthAction [label="{+ EdgeWidthAction|- mWidth : int\l|+ act(XmlAction): void \l+ isSelected(JMenuItem,Action): boolean \l- createEdgeWidthFormatAction\
(MindMapNode,int): UNKNOWN \l+ getDoActionClass(): Class \l+ EdgeWidthAction(MindMapController,int) \l+ setEdgeWidth(MindMapNode\
,int): void \l- getActionPair(MindMapNode,int): ActionPair \l+ getWidth(): int \l+ apply(MindMap,MindMapNode): ActionPair \l-\
 getWidthTitle(MindMapController,int): String \l+ getWidth(MindMapNode): int}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="4175.2,3002", rects="3978.2,3088.5,4372.2,3111.5 3978.2,3065.5,4372.2,3088.5 3978.2,2892.5,4372.2,3065.5", width="5.4722", height="3.0556"];
					freemind_modes_mindmapmode_actions_UnderlinedAction [label="{+ UnderlinedAction|- modeController : MindMapController\l|+ getDoActionClass(): Class \l+ setUnderlined(MindMapNode,boolean): void\
 \l+ isSelected(JMenuItem,Action): boolean \l+ UnderlinedAction(MindMapController) \l- getActionPair(MindMapNode,boolean): ActionPair\
 \l- toggleUnderlined(MindMapNode,boolean): UNKNOWN \l+ act(XmlAction): void \l+ apply(MindMap,MindMapNode): ActionPair}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="1702.2,4455", rects="1529.7,4519,1874.7,4542 1529.7,4496,1874.7,4519 1529.7,4368,1874.7,4496", width="4.7917", height="2.4306"];
					freemind_modes_mindmapmode_actions_SetLinkByTextFieldAction [label="{+ SetLinkByTextFieldAction|- controller : MindMapController\l|+ setLink(MindMapNode,String): void \l- createAddLinkXmlAction(MindMapNode\
,String): UNKNOWN \l+ getDoActionClass(): Class \l+ actionPerformed(ActionEvent): void \l+ act(XmlAction): void \l+ SetLinkByTextFieldAction\
(MindMapController) \l- getActionPair(MindMapNode,String): ActionPair}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="2333.2,2684", rects="2141.7,2740.5,2524.7,2763.5 2141.7,2717.5,2524.7,2740.5 2141.7,2604.5,2524.7,2717.5", width="5.3194", height="2.2222"];
					freemind_modes_mindmapmode_actions_ChangeArrowLinkEndPoints [label="{+ ChangeArrowLinkEndPoints|- controller : MindMapController\l|+ act(XmlAction): void \l+ ChangeArrowLinkEndPoints(MindMapController\
) \l+ actionPerformed(ActionEvent): void \l+ setArrowLinkEndPoints(MindMapArrowLink,Point,Point): void \l- createArrowLinkPointXmlAction\
(MindMapArrowLink,Point,Point): UNKNOWN \l- getLinkRegistry(): MindMapLinkRegistry \l+ getDoActionClass(): Class \l-\
 getActionPair(MindMapArrowLink,Point,Point): ActionPair}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="2131.2,3951", rects="1890.2,4015,2372.2,4038 1890.2,3992,2372.2,4015 1890.2,3864,2372.2,3992", width="6.6944", height="2.4306"];
					freemind_modes_mindmapmode_actions_NodeColorBlendAction [label="{+ NodeColorBlendAction|+ NodeColorBlendAction(MindMapController)}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="1562.2,2519", rects="1421.7,2519,1702.7,2542 1421.7,2496,1702.7,2519", width="3.9028", height="0.65278"];
					freemind_modes_mindmapmode_actions_NodeActorXml [label="{+ NodeActorXml| apply(MindMap,MindMapNode): ActionPair}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="3031.2,2483", rects="2898.2,2483,3164.2,2506 2898.2,2460,3164.2,2483", width="3.6944", height="0.65278"];
					freemind_modes_mindmapmode_actions_SelectAllAction [label="{+ SelectAllAction|+ SelectAllAction(MindMapController)}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="2800.2,5111", rects="2682.2,5111,2918.2,5134 2682.2,5088,2918.2,5111", width="3.2778", height="0.65278"];
					freemind_modes_mindmapmode_actions_MoveNodeAction [label="{+ MoveNodeAction|- modeController : MindMapController\l|+ MoveNodeAction(MindMapController) \l- getActionPair(MindMapNode,int,int\
,int): ActionPair \l+ moveNodeTo(MindMapNode,int,int,int): void \l- moveNode(MindMapNode,int,int,int): UNKNOWN \l+ apply(MindMap\
,MindMapNode): ActionPair \l+ getDoActionClass(): Class \l+ act(XmlAction): void}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="1688.2,4016", rects="1529.7,4072.5,1846.7,4095.5 1529.7,4049.5,1846.7,4072.5 1529.7,3936.5,1846.7,4049.5", width="4.4028", height="2.2222"];
					freemind_modes_mindmapmode_actions_JoinNodesAction [label="{+ JoinNodesAction|- controller : MindMapController\l BODY_END : Pattern\l BODY_START : Pattern\l|- addContent(String,boolean,String\
,boolean): String \l+ joinNodes(MindMapNode,List): void \l+ actionPerformed(ActionEvent): void \l+ JoinNodesAction(MindMapController\
) \l &lt;Initializer&gt;()}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="2764.2,5492", rects="2610.2,5548.5,2918.2,5571.5 2610.2,5495.5,2918.2,5548.5 2610.2,5412.5,2918.2,5495.5", width="4.2778", height="2.2222"];
					freemind_modes_mindmapmode_actions_SelectBranchAction [label="{+ SelectBranchAction|+ actionPerformed(ActionEvent): void \l+ SelectBranchAction(MindMapController)}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="2200.2,2527", rects="2070.2,2534.5,2330.2,2557.5 2070.2,2496.5,2330.2,2534.5", width="3.6111", height="0.86111"];
					freemind_modes_mindmapmode_actions_ToggleFoldedAction [label="{+ ToggleFoldedAction|- logger : Logger\l- modeController : MindMapController\l|+ actionPerformed(ActionEvent): void \l+ toggleFolded\
(): void \l- createSingleFoldAction(boolean,MindMapNode,boolean): UNKNOWN \l+ toggleFolded(ListIterator): void \l+ ToggleFoldedAction\
(MindMapController) \l+ getDoActionClass(): Class \l+ setFolded(MindMapNode,boolean): void \l- createFoldAction(ListIterator\
,boolean,boolean): UNKNOWN \l+ act(XmlAction): void}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="2356.2,2922", rects="2141.7,3001,2570.7,3024 2141.7,2963,2570.7,3001 2141.7,2820,2570.7,2963", width="5.9583", height="2.8472"];
					freemind_modes_mindmapmode_actions_NodeHookAction [label="{+ NodeHookAction|- logger : Logger\l mMindMapController : MindMapController\l _hookName : String\l|+ actionPerformed(ActionEvent\
): void \l- finishInvocation(MindMapNode,List,MindMapNode,Collection): void \l- getHookFactory(): HookFactory \l+ createHookNodeAction\
(MindMapNode,List,String,Properties): UNKNOWN \l- getInstanciationMethod(String): HookInstanciationMethod \l+ removeHook(\
MindMapNode,List,String): void \l+ isEnabled(JMenuItem,Action): boolean \l+ getController(): MindMapController \l+ act(XmlAction\
): void \l+ NodeHookAction(String,MindMapController) \l+ invoke(MindMapNode,List): void \l- invoke(MindMapNode,List,String,XMLElement\
): void \l+ getDoActionClass(): Class \l+ getHookName(): String \l+ addHook(MindMapNode,List,String,Properties): void \l- createHookNodeUndoAction\
(MindMapNode,List,String): UNKNOWN \l+ isSelected(JMenuItem,Action): boolean}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="3128.2,3170", rects="2897.7,3316.5,3358.7,3339.5 2897.7,3263.5,3358.7,3316.5 2897.7,3000.5,3358.7,3263.5", width="6.4028", height="4.7222"];
					freemind_modes_mindmapmode_actions_ColorArrowLinkAction [label="{+ ColorArrowLinkAction|- controller : MindMapController\l arrowLink : MindMapArrowLinkModel\l|- getActionPair(MindMapLink,Color\
): ActionPair \l- getLinkRegistry(): MindMapLinkRegistry \l+ setArrowLinkColor(MindMapLink,Color): void \l+ getDoActionClass(): \
Class \l+ act(XmlAction): void \l+ ColorArrowLinkAction(MindMapController,MindMapArrowLinkModel) \l+ actionPerformed(ActionEvent\
): void \l- createArrowLinkColorXmlAction(MindMapLink,Color): UNKNOWN}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="3117.2,2843", rects="2898.2,2914.5,3336.2,2937.5 2898.2,2876.5,3336.2,2914.5 2898.2,2748.5,3336.2,2876.5", width="6.0833", height="2.6389"];
				}
				subgraph cluster_freemind_modes_mindmapmode_listeners {
					graph [label=listeners,
						levelType="4_FAMIX.Namespace",
						bb="3081.1,1796.2,3794.1,2289.2"];
					freemind_modes_mindmapmode_listeners_MindMapNodeMotionListener [label="{+ MindMapNodeMotionListener|- originalShiftY : int\l- dragStartingPoint : Point\l- originalParentVGap : int\l- logger : Logger\l-\
 originalHGap : int\l- c : MindMapController\l|+ mouseClicked(MouseEvent): void \l setDragStartingPoint(Point,MindMapNode): void\
 \l+ isActive(): boolean \l- getNodeView(MouseEvent): NodeView \l+ mouseExited(MouseEvent): void \l- resetPositions(MindMapNode\
): void \l+ MindMapNodeMotionListener(MindMapController) \l+ mouseDragged(MouseEvent): void \l+ mouseEntered(MouseEvent): void \
\l+ mouseReleased(MouseEvent): void \l getDragStartingPoint(): Point \l &lt;Initializer&gt;() \l- getNodeShiftY(Point,MindMapNode\
,Point): int \l+ mouseMoved(MouseEvent): void \l- getVGap(Point,Point): int \l- stopDrag(): void \l- getHGap(Point,MindMapNode,\
Point): int}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="3250.2,1996.5", rects="3088.7,2165.5,3411.7,2188.5 3088.7,2067.5,3411.7,2165.5 3088.7,1804.5,3411.7,2067.5", width="4.4861", height="5.3472"];
					freemind_modes_mindmapmode_listeners_MindMapNodeDropListener [label="{+ MindMapNodeDropListener|- mMindMapController : MindMapController\l|+ MindMapNodeDropListener(MindMapController) \l+ dragEnter\
(DropTargetDragEvent): void \l+ dragExit(DropTargetEvent): void \l+ drop(DropTargetDropEvent): void \l+ dragOver(DropTargetDragEvent\
): void \l- isDropAcceptable(DropTargetDropEvent): boolean \l+ dragScroll(DropTargetDragEvent): void \l+ dropActionChanged(DropTargetDragEvent\
): void \l- isDragAcceptable(DropTargetDragEvent): boolean}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="3610.2,2163.5", rects="3452.2,2235,3768.2,2258 3452.2,2212,3768.2,2235 3452.2,2069,3768.2,2212", width="4.3889", height="2.6389"];
					freemind_modes_mindmapmode_listeners_MindMapMouseMotionManager [label="{+ MindMapMouseMotionManager| originY : int\l- draggedLinkOldEndPoint : Point\l- mController : MindMapController\l- draggedLinkOldStartPoint\
 : Point\l draggedLink : MindMapArrowLink\l originX : int\l|+ MindMapMouseMotionManager(MindMapController) \l+ mouseDragged\
(MouseEvent): void \l+ mouseReleased(MouseEvent): void \l &lt;Initializer&gt;() \l+ mousePressed(MouseEvent): void}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="3619.2,1906.5", rects="3452.2,1985.5,3786.2,2008.5 3452.2,1887.5,3786.2,1985.5 3452.2,1804.5,3786.2,1887.5", width="4.6389", height="2.8472"];
				}
				subgraph cluster_freemind_modes_mindmapmode_MindMapMapModel {
					graph [label="+ MindMapMapModel",
						levelType="4_FAMIX.Class",
						bb="2033.1,5857.2,2890.1,6690.2"];
					freemind_modes_mindmapmode_MindMapMapModel [label="{MindMapMapModel|+ RESTORE_MODE_MIND_MAP : String\l lockManager : LockManager\l+ FREEMIND_VERSION_UPDATER_XSLT : String\l+ MAP_INITIAL\
_START : String\l- timerForAutomaticSaving : Timer\l+ EXPECTED_START_STRINGS : String\l- linkRegistry : MindMapLinkRegistry\
\l|+ load(URL): void \l+ changeNode(MindMapNode,String): void \l loadTree(ReaderCreator): MindMapNodeModel \l+ getXml(Writer,boolean\
,MindMapNode): void \l+ destroy(): void \l+ getAsPlainText(List): String \l- readFileStart(Reader,int): StringBuffer \l+ MindMapMapModel\
(FreeMindMain,ModeController) \l+ loadTree(ReaderCreator,boolean): MindMapNodeModel \l+ getRestorable(): String \l+\
 getLinkRegistry(): MindMapLinkRegistry \l+ load(File): void \l+ toString(): String \l loadTree(File): MindMapNodeModel \l+ getFilteredXml\
(Writer): void \l+ getXml(Writer,boolean): void \l+ tryToLock(File): String \l+ getXml(Writer): void \l+ getAsRTF(List\
): String \l+ getAsHTML(List): String \l &lt;Initializer&gt;() \l+ saveRTF(List,BufferedWriter): boolean \l- scheduleTimerForAutomaticSaving\
(): void \l+ saveTXT(MindMapNodeModel,File): boolean \l+ save(File): boolean \l- saveInternal(File,boolean): boolean\
 \l+ MindMapMapModel(MindMapNodeModel,FreeMindMain,ModeController)}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="2268.2,6224.5", rects="2041.2,6476,2495.2,6499 2041.2,6363,2495.2,6476 2041.2,5950,2495.2,6363", width="6.3056", height="7.6389"];
					freemind_modes_mindmapmode_MindMapMapModel_DummyLockManager [label="{- DummyLockManager|+ run(): void \l- DummyLockManager() \l+ popLockingUserOfOldLock(): String \l+ releaseLock(): void \l+ tryToLock\
(File): String \l+ releaseTimer(): void}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="2385.2,6598.5", rects="2264.7,6636,2505.7,6659 2264.7,6538,2505.7,6636", width="3.3472", height="1.6944"];
					freemind_modes_mindmapmode_MindMapMapModel_LockManager [label="{- LockManager| lockedSemaphoreFile : File\l lockUpdatePeriod : long\l lockingUserOfOldLock : String\l lockTimer : Timer\l lockSafetyPeriod\
 : long\l|+ popLockingUserOfOldLock(): String \l- getSemaphoreFile(File): File \l- LockManager() \l &lt;Initializer&gt\
;() \l+ tryToLock(File): String \l- writeSemaphoreFile(File): void \l+ run(): void \l+ releaseLock(): void \l+ releaseTimer(): \
void}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="2665.2,6074.5", rects="2544.7,6176,2785.7,6199 2544.7,6093,2785.7,6176 2544.7,5950,2785.7,6093", width="3.3472", height="3.4722"];
					freemind_modes_mindmapmode_MindMapMapModel_StringReaderCreator [label="{+ StringReaderCreator|- mString : String\l|+ toString(): String \l+ MindMapMapModel.StringReaderCreator(String) \l+ createReader\
(): Reader}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="2699.2,6503.5", rects="2544.7,6530,2853.7,6553 2544.7,6507,2853.7,6530 2544.7,6454,2853.7,6507", width="4.2917", height="1.3889"];
					freemind_modes_mindmapmode_MindMapMapModel_DoAutomaticSave [label="{- DoAutomaticSave|- tempFileStack : Vector\l- numberOfFiles : int\l- pathToStore : File\l- changeState : int\l- filesShouldBeDeletedAfterShutdown\
 : boolean\l- model : MindMapMapModel\l|+ run(): void \l DoAutomaticSave(MindMapMapModel,int,boolean,File)}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="2713.2,6337.5", rects="2544.7,6394,2881.7,6417 2544.7,6296,2881.7,6394 2544.7,6258,2881.7,6296", width="4.6806", height="2.2222"];
					freemind_modes_mindmapmode_MindMapMapModel_FileReaderCreator [label="{- FileReaderCreator|- mFile : File\l|+ createReader(): Reader \l+ toString(): String \l+ FileReaderCreator(File)}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="2149.2,6587.5", rects="2068.7,6614,2229.7,6637 2068.7,6591,2229.7,6614 2068.7,6538,2229.7,6591", width="2.2361", height="1.3889"];
					freemind_modes_mindmapmode_MindMapMapModel_ReaderCreator [label="{+ ReaderCreator| createReader(): Reader}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="2337.2,5888.5", rects="2264.7,5888.5,2409.7,5911.5 2264.7,5865.5,2409.7,5888.5", width="2.0139", height="0.65278"];
				}
				subgraph cluster_freemind_modes_mindmapmode_MindMapToolBar {
					graph [label="+ MindMapToolBar",
						levelType="4_FAMIX.Class",
						bb="3998.6,1796.2,4536.6,2265.2"];
					freemind_modes_mindmapmode_MindMapToolBar [label="{MindMapToolBar|- c : MindMapController\l- fontFamily_IgnoreChangeEvent : boolean\l- fontSize_IgnoreChangeEvent : boolean\l- iconToolBarScrollPane\
 : JAutoScrollBarPane\l# logger : Logger\l- userDefinedZoom : String\l- iconToolBar : JToolBar\l- fontsListener\
 : ItemListener\l- sizes : String\l- zoom : JComboBox\l- size : JComboBox\l- fonts : JComboBox\l- sizeListener : ItemListener\l\
|+ update(StructuredMenuHolder): void \l+ selectFontName(String): void \l getLeftToolBar(): Component \l+ startup(): void \l+ setZoom\
(float): void \l &lt;Initializer&gt;() \l+ selectFontSize(String): void \l+ shutdown(): void \l- getItemForZoom(float): String\
 \l- setZoomByItem(Object): void \l# getController(): Controller \l+ MindMapToolBar(MindMapController) \l setAllActions(boolean\
): void}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="4145.7,2019.5", rects="4006.7,2211,4284.7,2234 4006.7,2008,4284.7,2211 4006.7,1805,4284.7,2008", width="3.8611", height="5.9722"];
					freemind_modes_mindmapmode_MindMapToolBar_FreeMindComboBox [label="{- FreeMindComboBox|+ getMaximumSize(): Dimension \l- FreeMindComboBox(Vector) \l+ FreeMindComboBox(String[])}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="4426.7,1900.5", rects="4325.2,1915.5,4528.2,1938.5 4325.2,1862.5,4528.2,1915.5", width="2.8194", height="1.0694"];
				}
				subgraph cluster_freemind_modes_mindmapmode_MindMapController {
					graph [label="+ MindMapController",
						levelType="4_FAMIX.Class",
						bb="4915.1,5202.2,6246.1,8881.2"];
					freemind_modes_mindmapmode_MindMapController [label="{MindMapController|+ propertyAction : Action\l+ removeNodeBackgroundColor : RemoveNodeBackgroundColorAction\l+ cloudColor : CloudColorAction\
\l+ find : FindAction\l+ open : Action\l+ followLink : Action\l- logger : Logger\l+ nodeHookAction : NodeHookAction\l+\
 copySingle : Action\l+ iconActions : Vector\l+ importLinkedBranch : Action\l+ exportBranch : Action\l- mRegisteredMouseWheelEventHandler\
 : HashSet\l+ undo : UndoAction\l+ edgeColor : EdgeColorAction\l+ changeArrowsInArrowLinkAction : ChangeArrowsInArrowLinkAction\
\l- compound : CompoundActionHandler\l+ paste : PasteAction\l+ toggleChildrenFolded : ToggleChildrenFoldedAction\l+ importBranch\
 : Action\l+ nodeUp : NodeUpAction\l+ newChild : NewChildAction\l+ italic : ItalicAction\l+ bold : BoldAction\l+ bubble\
 : NodeStyleAction\l- hookActions : Vector\l+ selectBranchAction : SelectBranchAction\l- RESOURCE_UNFOLD_ON_PASTE : String\l+ nodeDown\
 : NodeDownAction\l+ EdgeStyle_bezier : EdgeStyleAction\l+ importLinkedBranchWithoutRoot : Action\l+ EdgeWidth_2 : EdgeWidthAction\
\l+ selectAllAction : SelectAllAction\l mMenuStructure : UNKNOWN\l+ cloud : CloudAction\l+ moveNodeAction : MoveNodeAction\
\l+ nodeColor : NodeColorAction\l+ EdgeStyle_sharp_bezier : EdgeStyleAction\l+ importFolderStructure : ImportFolderStructureAction\
\l+ exportToHTML : Action\l+ EdgeWidth_WIDTH_THIN : EdgeWidthAction\l+ gotoLinkNodeAction : GotoLinkNodeAction\l- ACCESSORIES\
_PLUGINS_NODE_NOTE : String\l+ removeArrowLinkAction : RemoveArrowLinkAction\l+ setImageByFileChooser : Action\l+ EdgeStyle_sharp\
_linear : EdgeStyleAction\l+ importExplorerFavorites : ImportExplorerFavoritesAction\l+ exportBranchToHTML : Action\l+ changeArrowLinkEndPoints\
 : ChangeArrowLinkEndPoints\l- mPlugins : HashSet\l+ openLinkDirectory : Action\l- popupmenu : MindMapPopupMenu\
\l+ colorArrowLinkAction : ColorArrowLinkAction\l+ revertAction : RevertAction\l+ nodeColorBlend : NodeColorBlendAction\l+ removeAllIconsAction\
 : RemoveAllIconsAction\l+ fontSize : FontSizeAction\l- attributeController : MindMapModeAttributeController\l+ \
deleteChild : DeleteChildAction\l+ setLinkByFileChooser : Action\l+ joinNodes : JoinNodesAction\l+ nodeBackgroundColor : NodeBackgroundColorAction\
\l+ editAttributes : Action\l+ setLinkByTextField : SetLinkByTextFieldAction\l+ addLocalLinkAction : AddLocalLinkAction\
\l+ EdgeStyle_linear : EdgeStyleAction\l+ redo : RedoAction\l- clipboard : Clipboard\l- mGetEventIfChangedAfterThisTimeInMillies\
 : long\l+ usePlainText : UsePlainTextAction\l+ EdgeWidth_1 : EdgeWidthAction\l+ decreaseNodeFont : Action\l+ saveAs : \
Action\l+ edgeWidths : EdgeWidthAction\l+ toggleFolded : ToggleFoldedAction\l+ increaseNodeFont : Action\l+ fontFamily : FontFamilyAction\
\l- mRegistrations : List\l+ edgeStyles : EdgeStyleAction\l- mPatternsList : List\l- nodeHookFactory : HookFactory\l+ copy\
 : CopyAction\l+ assignAttributes : Action\l- toolbar : MindMapToolBar\l# assignAttributeDialog : AssignAttributeDialog\l+ EdgeWidth\
_8 : EdgeWidthAction\l+ EdgeWidth_4 : EdgeWidthAction\l+ addArrowLinkAction : AddArrowLinkAction\l+ save : Action\l+ removeLastIconAction\
 : RemoveIconAction\l+ underlined : UnderlinedAction\l filefilter : FileFilter\l+ newMap : Action\l+ newPreviousSibling\
 : Action\l- myNewNodeCreator : NewNodeCreator\l- addAsChildMode : boolean\l+ newSibling : Action\l+ patterns : ApplyPatternAction\
\l+ unknownIconAction : IconAction\l+ findNext : FindNextAction\l+ EdgeWidth_WIDTH_PARENT : EdgeWidthAction\l+ pasteAsPlainText\
 : PasteAsPlainTextAction\l- selection : Clipboard\l+ showAttributeManagerAction : Action\l+ cut : CutAction\l+ fork : NodeStyleAction\
\l- actionFactory : ActionFactory\l+ useRichFormatting : UseRichFormattingAction\l+ edit : EditAction\l+ editLong \
: Action\l|+ deregisterPlugin(MindMapControllerPlugin): void \l+ createPatternSubMenu(StructuredMenuHolder,String): void \l+ updateMenus\
(StructuredMenuHolder): void \l+ paste(MindMapNode,MindMapNode): void \l# getClipboard(): void \l+ doTransaction(String,\
ActionPair): boolean \l+ setNewNodeCreator(NewNodeCreator): void \l+ moveNodePosition(MindMapNode,int,int,int): void \l+ getModeToolBar\
(): JToolBar \l+ createNodeHook(String,MindMapNode,MindMap): NodeHook \l+ getPatternReader(): Reader \l+ removeHook(MindMapNode\
,List,String): void \l+ addNewNode(MindMapNode,int,boolean): MindMapNode \l- createIconActions(): void \l+ storeDialogPositions\
(JDialog,WindowConfigurationStorage,String): void \l getToolBar(): MindMapToolBar \l+ setEdgeColor(MindMapNode,Color): void\
 \l+ removeLastIcon(MindMapNode): int \l+ setNoteText(MindMapNode,String): void \l+ addNew(MindMapNode,int,KeyEvent): MindMapNode\
 \l+ getActionFactory(): ActionFactory \l+ addHook(MindMapNode,List,String,Properties): void \l- createPatterns(List): void \l+\
 setEdgeWidth(MindMapNode,int): void \l+ setClipboardContents(Transferable): void \l# setImageByFileChooser(): void \l+ setCloud\
(MindMapNode,boolean): void \l+ applyPattern(MindMapNode,String): void \l- loadPatternActions(): void \l+ newModel(ModeController\
): MapAdapter \l decorateDialog(?,?) \l+ getMindMapMapModel(): MindMapMapModel \l- createStandardActions(): void \l+ increaseFontSize\
(MindMapNode,int): void \l+ setNodeText(MindMapNode,String): void \l+ shutdownController(): void \l+ startupController(): \
void \l+ removeAttribute(MindMapNode,int): void \l+ decorateDialog(JDialog,String): UNKNOWN \l+ setFontFamily(MindMapNode,String\
): void \l+ edit(KeyEvent,boolean,boolean): void \l &lt;Initializer&gt;() \l+ createXMLElement(): XMLElement \l+ repaintMap(): void\
 \l+ getFileFilter(): FileFilter \l+ createEditNoteToNodeAction(MindMapNode,String): UNKNOWN \l+ setNodeBackgroundColor(MindMapNode\
,Color): void \l+ obtainFocusForSelected(): void \l unMarshall(?) \l+ setLink(MindMapNode,String): void \l+ plainClick(MouseEvent\
): void \l+ deRegisterMouseWheelEventHandler(MouseWheelEventHandler): void \l+ cut(List): Transferable \l+ joinNodes(MindMapNode\
,List): void \l+ setNodeHookFactory(HookFactory): void \l+ processMenuCategory(StructuredMenuHolder,List,String): void \l+\
 addLink(MindMapNode,MindMapNode): void \l+ cut(): Transferable \l+ nodeStyleChanged(MindMapNode): void \l# createNodeHookActions\
(): void \l+ getPopupForModel(Object): JPopupMenu \l+ getAttributeController(): AttributeController \l# getLinkByFileChooser(FileFilter\
): String \l+ setFontSize(MindMapNode,String): void \l+ moveNodes(MindMapNode,List,int): void \l+ insertNodeInto(MindMapNode\
,MindMapNode,int): void \l+ MindMapController(Mode) \l+ toggleFolded(): void \l+ setNodeStyle(MindMapNode,String): void \l+\
 setFolded(MindMapNode,boolean): void \l+ load(String,String): boolean \l+ loadPatterns(Reader): void \l+ invokeHook(ModeControllerHook\
): void \l+ deleteNode(MindMapNode): void \l+ updateMenusFromXml(InputStream): UNKNOWN \l+ setArrowLinkColor(MindMapLink,\
Color): void \l+ getLeftToolBar(): Component \l+ setBold(MindMapNode,boolean): void \l+ splitNode(MindMapNode,int,String): void \
\l+ getPopupMenu(): JPopupMenu \l+ setItalic(MindMapNode,boolean): void \l+ loadURL(String): void \l+ addAttribute(MindMapNode,Attribute\
): int \l+ marshall(XmlAction): String \l+ registerPlugin(MindMapControllerPlugin): void \l+ copy(MindMapNode,boolean): \
Transferable \l marshall(?) \l- recursiveCallUpdateHooks(MindMapNode,MindMapNode): void \l+ addIcon(MindMapNode,MindIcon): void \
\l- updateToolbar(MindMapNode): void \l+ removeNodeFromParent(MindMapNode): void \l# setAllActions(boolean): void \l+ blendNodeColor\
(MindMapNode): void \l+ setCloudColor(MindMapNode,Color): void \l+ isUndoAction(): boolean \l+ saveHTML(List,Writer): void \l+\
 editAttribute(MindMapNode,String,String): int \l+ getHookFactory(): HookFactory \l+ paste(Transferable,MindMapNode,boolean,boolean\
): boolean \l+ changeArrowsOfArrowLink(MindMapArrowLinkModel,boolean,boolean): void \l+ onFocusNode(NodeView): void \l# init\
(): void \l+ createModeControllerHook(String): void \l# setLinkByFileChooser(): void \l+ extendSelection(MouseEvent): boolean \l+\
 removeReference(MindMapLink): void \l+ newNode(Object,MindMap): MindMapNode \l+ getAttributeTablePopupMenu(): AttributePopupMenu\
 \l+ getPlugins(): Set \l+ addIconsToMenu(StructuredMenuHolder,String): void \l+ clearNodeContents(MindMapNode): void \l+ nodeChanged\
(MindMapNode): void \l+ saveHTML(MindMapNodeModel,File): void \l storeDialogPositions(?,?,?) \l+ setEdgeStyle(MindMapNode\
,String): void \l+ mapSourceChanged(MindMap): boolean \l+ setArrowLinkEndPoints(MindMapArrowLink,Point,Point): void \l- getContent\
(String,int): String \l+ registerMouseWheelEventHandler(MouseWheelEventHandler): void \l+ showThisMap(): void \l+ setNodeColor\
(MindMapNode,Color): void \l+ paste(Transferable,MindMapNode): void \l+ doubleClick(MouseEvent): void \l+ removeAllIcons(MindMapNode\
): void \l+ getClipboardContents(): Transferable \l# updateNode(MindMapNode): void \l+ setAttribute(MindMapNode,int,Attribute\
): void \l+ unMarshall(String): UNKNOWN \l+ getRegisteredMouseWheelEventHandler(): Set \l+ applyPattern(MindMapNode,Pattern): \
void}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="5449.2,7030.5", rects="5210.7,8827,5687.7,8850 5210.7,7169,5687.7,8827 5210.7,5211,5687.7,7169", width="6.625", height="50.556"];
					freemind_modes_mindmapmode_MindMapController_MindMapControllerPlugin [label="{+ MindMapControllerPlugin}", levelType="5_FAMIX.Class", hasData=false, hasMethods=false, pos="5082.2,7064.5", rects="4995.2,7046.5,5169.2,7082.5", width="2.4167", height="0.51389"];
					freemind_modes_mindmapmode_MindMapController_SetLinkByFileChooserAction [label="{# SetLinkByFileChooserAction|+ SetLinkByFileChooserAction() \l+ actionPerformed(ActionEvent): void}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="5038.2,7293.5", rects="4922.7,7301,5153.7,7324 4922.7,7263,5153.7,7301", width="3.2083", height="0.86111"];
					freemind_modes_mindmapmode_MindMapController_DefaultMindMapNodeCreator [label="{+ DefaultMindMapNodeCreator|+ createNode(Object,MindMap): MindMapNode \l+ DefaultMindMapNodeCreator()}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="5897.2,7077.5", rects="5750.7,7085,6043.7,7108 5750.7,7047,6043.7,7085", width="4.0694", height="0.86111"];
					freemind_modes_mindmapmode_MindMapController_AssignAttributesAction [label="{# AssignAttributesAction|+ AssignAttributesAction() \l+ actionPerformed(ActionEvent): void}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="5038.2,7617.5", rects="4922.7,7625,5153.7,7648 4922.7,7587,5153.7,7625", width="3.2083", height="0.86111"];
					freemind_modes_mindmapmode_MindMapController_SetImageByFileChooserAction [label="{# SetImageByFileChooserAction|+ actionPerformed(ActionEvent): void \l+ SetImageByFileChooserAction()}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="5040.2,7401.5", rects="4922.7,7409,5157.7,7432 4922.7,7371,5157.7,7409", width="3.2639", height="0.86111"];
					freemind_modes_mindmapmode_MindMapController_NewNodeCreator [label="{+ NewNodeCreator| createNode(Object,MindMap): MindMapNode}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="5890.2,6673.5", rects="5751.2,6673.5,6029.2,6696.5 5751.2,6650.5,6029.2,6673.5", width="3.8611", height="0.65278"];
					freemind_modes_mindmapmode_MindMapController_ImportLinkedBranchWithoutRootAction [label="{- ImportLinkedBranchWithoutRootAction| ImportLinkedBranchWithoutRootAction() \l+ actionPerformed(ActionEvent): void}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="5879.2,7365.5", rects="5750.7,7373,6007.7,7396 5750.7,7335,6007.7,7373", width="3.5694", height="0.86111"];
					freemind_modes_mindmapmode_MindMapController_ImportBranchAction [label="{- ImportBranchAction|+ actionPerformed(ActionEvent): void \l ImportBranchAction()}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="5040.2,7509.5", rects="4922.7,7517,5157.7,7540 4922.7,7479,5157.7,7517", width="3.2639", height="0.86111"];
					freemind_modes_mindmapmode_MindMapController_ImportLinkedBranchAction [label="{- ImportLinkedBranchAction|+ actionPerformed(ActionEvent): void \l ImportLinkedBranchAction()}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="5868.2,6573.5", rects="5750.7,6581,5985.7,6604 5750.7,6543,5985.7,6581", width="3.2639", height="0.86111"];
					freemind_modes_mindmapmode_MindMapController_OpenLinkDirectoryAction [label="{# OpenLinkDirectoryAction|+ OpenLinkDirectoryAction() \l+ actionPerformed(ActionEvent): void}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="6082.2,7581.5", rects="5966.7,7589,6197.7,7612 5966.7,7551,6197.7,7589", width="3.2083", height="0.86111"];
					freemind_modes_mindmapmode_MindMapController_FollowLinkAction [label="{# FollowLinkAction|+ actionPerformed(ActionEvent): void \l+ FollowLinkAction()}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="6120.2,7185.5", rects="6002.7,7193,6237.7,7216 6002.7,7155,6237.7,7193", width="3.2639", height="0.86111"];
					freemind_modes_mindmapmode_MindMapController_MapSourceChangeDialog [label="{- MapSourceChangeDialog|- mReturnValue : boolean\l|- MapSourceChangeDialog() \l+ run(): void \l+ getReturnValue(): boolean \l &\
lt;Initializer&gt;()}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="5841.2,7211.5", rects="5750.7,7245.5,5931.7,7268.5 5750.7,7222.5,5931.7,7245.5 5750.7,7154.5,5931.7,7222.5", width="2.5139", height="1.5972"];
					freemind_modes_mindmapmode_MindMapController_ExportToHTMLAction [label="{# ExportToHTMLAction| c : MindMapController\l|+ ExportToHTMLAction(MindMapController) \l+ actionPerformed(ActionEvent): void}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="5893.2,6944.5", rects="5751.2,6963.5,6035.2,6986.5 5751.2,6940.5,6035.2,6963.5 5751.2,6902.5,6035.2,6940.5", width="3.9444", height="1.1806"];
					freemind_modes_mindmapmode_MindMapController_MindMapFilter [label="{- MindMapFilter|+ accept(File): boolean \l- MindMapFilter() \l+ getDescription(): String}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="5074.2,6940.5", rects="4995.2,6955.5,5153.2,6978.5 4995.2,6902.5,5153.2,6955.5", width="2.1944", height="1.0694"];
					freemind_modes_mindmapmode_MindMapController_ExportBranchToHTMLAction [label="{# ExportBranchToHTMLAction| c : MindMapController\l|+ ExportBranchToHTMLAction(MindMapController) \l+ actionPerformed(ActionEvent\
): void}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="5912.2,6800.5", rects="5750.7,6819.5,6073.7,6842.5 5750.7,6796.5,6073.7,6819.5 5750.7,6758.5,6073.7,6796.5", width="4.4861", height="1.1806"];
					freemind_modes_mindmapmode_MindMapController_LinkActionBase [label="{*# LinkActionBase|+ isEnabled(JMenuItem,Action): boolean \l+ LinkActionBase(String)}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="5983.2,7473.5", rects="5858.7,7481,6107.7,7504 5858.7,7443,6107.7,7481", width="3.4583", height="0.86111"];
					freemind_modes_mindmapmode_MindMapController_EditLongAction [label="{# EditLongAction|+ actionPerformed(ActionEvent): void \l+ EditLongAction()}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="5040.2,7185.5", rects="4922.7,7193,5157.7,7216 4922.7,7155,5157.7,7193", width="3.2639", height="0.86111"];
				}
				freemind_modes_mindmapmode_MindMapArrowLinkModel [label="{+ MindMapArrowLinkModel|+ changeInclination(MapView,int,int,int,int): void \l+ toString(): String \l- changeInclination(int,int\
,NodeView,Point): void \l+ MindMapArrowLinkModel(MindMapNode,MindMapNode,FreeMindMain) \l+ clone(): Object}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="2652.6,2242.7", rects="2426.1,2272.7,2879.1,2295.7 2426.1,2189.7,2879.1,2272.7", width="6.2917", height="1.4861"];
				freemind_modes_mindmapmode_MindMapNodeModel [label="{+ MindMapNodeModel|+ MindMapNodeModel(Object,FreeMindMain,MindMap) \l- saveRFT_escapeUnicodeAndSpecialCharacters(String): String\
 \l+ saveRTF(Writer,int,HashMap): void \l+ getPlainTextContent(): String \l+ collectColors(HashSet): void \l- saveChildrenText(\
Writer,int): void \l+ isWriteable(): boolean \l+ MindMapNodeModel(FreeMindMain,MindMap) \l- saveChildrenRTF(Writer,int,HashMap):\
 void \l+ saveTXT(Writer,int): void}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="5498.6,1887.7", rects="5308.6,1955.2,5688.6,1978.2 5308.6,1797.2,5688.6,1955.2", width="5.2778", height="2.5278"];
				freemind_modes_mindmapmode_MindMapHTMLWriter [label="{ MindMapHTMLWriter|- el : String\l- exportIcons : boolean\l- fileout : Writer\l- basedOnHeadings : boolean\l- writeFoldingCode \
: boolean\l|- writeJavaScript(): void \l- saveHTML(MindMapNodeModel,String,int,boolean,boolean,int): int \l- fontStyle(MindMapNodeModel\
): String \l &lt;Initializer&gt;() \l- convertSpecialChar(char): String \l- saveHTML_escapeUnicodeAndSpecialCharacters(String\
): String \l hasHtml(MindMapNodeModel): boolean \l- getProperty(String): String \l- writeBodyWithFolding(MindMapNodeModel): \
void \l- writeModelContent(MindMapNodeModel): void \l- isHeading(MindMapNodeModel,int): boolean \l saveHTML(MindMapNodeModel): void\
 \l- writeFoldingButtons(String): void \l MindMapHTMLWriter(Writer) \l- writeStyle(): void \l- writeIcons(MindMapNodeModel): \
void \l saveHTML(List): void}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="1190.6,2112.7", rects="985.58,2274.2,1395.6,2297.2 985.58,2191.2,1395.6,2274.2 985.58,1928.2,1395.6,2191.2", width="5.6944", height="5.1389"];
				freemind_modes_mindmapmode_MindMapCloudModel [label="{+ MindMapCloudModel|+ MindMapCloudModel(MindMapNode,FreeMindMain)}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="2593.6,1950.7", rects="2426.6,1950.7,2760.6,1973.7 2426.6,1927.7,2760.6,1950.7", width="4.6389", height="0.65278"];
				freemind_modes_mindmapmode_MindMapPopupMenu [label="{+ MindMapPopupMenu|- c : MindMapController\l- logger : Logger\l- MINDMAPMODE_POPUP : String\l|+ update(StructuredMenuHolder): void\
 \l &lt;Initializer&gt;() \l+ MindMapPopupMenu(MindMapController)}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="4920.6,1861.7", rects="4784.6,1903.2,5056.6,1926.2 4784.6,1850.2,5056.6,1903.2 4784.6,1797.2,5056.6,1850.2", width="3.7778", height="1.8056"];
				freemind_modes_mindmapmode_MindMapEdgeModel [label="{+ MindMapEdgeModel|+ MindMapEdgeModel(MindMapNode,FreeMindMain)}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="1018.6,5356.7", rects="854.58,5356.7,1182.6,5379.7 854.58,5333.7,1182.6,5356.7", width="4.5556", height="0.65278"];
				freemind_modes_mindmapmode_MindMapMode [label="{+ MindMapMode|- MODENAME : String\l- modecontroller : MindMapController\l- logger : Logger\l- c : Controller\l- isRunning : boolean\
\l|+ MindMapMode() \l+ createModeController(): ModeController \l &lt;Initializer&gt;() \l+ init(Controller): void \l+ activate\
(): void \l+ restore(String): void \l+ toString(): String \l+ getController(): Controller \l+ getDefaultModeController(): ModeController\
}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="993.58,5720.7", rects="854.08,5822.2,1133.1,5845.2 854.08,5739.2,1133.1,5822.2 854.08,5596.2,1133.1,5739.2", width="3.875", height="3.4722"];
				freemind_modes_mindmapmode_JAutoScrollBarPane [label="{+ JAutoScrollBarPane|+ getPreferredSize(): Dimension \l+ JAutoScrollBarPane(Component) \l+ doLayout(): void}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="1095.6,5109.7", rects="985.58,5124.7,1205.6,5147.7 985.58,5071.7,1205.6,5124.7", width="3.0556", height="1.0694"];
				freemind_modes_mindmapmode_MindMapXMLElement [label="{+ MindMapXMLElement|- logger : Logger\l|# createCloudAdapter(NodeAdapter,FreeMindMain): CloudAdapter \l+ MindMapXMLElement(ModeController\
) \l# createNodeAdapter(FreeMindMain,String): NodeAdapter \l# createArrowLinkTarget(NodeAdapter,NodeAdapter,FreeMindMain\
): ArrowLinkTarget \l# createEdgeAdapter(NodeAdapter,FreeMindMain): EdgeAdapter \l- init(): void \l# createArrowLinkAdapter(NodeAdapter\
,NodeAdapter,FreeMindMain): ArrowLinkAdapter \l# MindMapXMLElement(ModeController,Vector,HashMap) \l# createAnotherElement\
(): XMLElement \l# createEncryptedNode(String): NodeAdapter}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="1906.6,2160.7", rects="1640.1,2239.7,2173.1,2262.7 1640.1,2216.7,2173.1,2239.7 1640.1,2058.7,2173.1,2216.7", width="7.4028", height="2.8472"];
				freemind_modes_mindmapmode_EncryptedMindMapNode [label="{+ EncryptedMindMapNode|- decryptedIcon : ImageIcon\l- encryptedContent : String\l- encryptedIcon : ImageIcon\l- isShuttingDown \
: boolean\l- password : StringBuffer\l- isStoringEncryptedContent : boolean\l- isDecrypted : boolean\l- isAccessible : boolean\l\
|+ setFolded(boolean): void \l- equals(StringBuffer,StringBuffer): boolean \l+ save(Writer,MindMapLinkRegistry,boolean,boolean):\
 XMLElement \l- generateEncryptedContent(MindMapLinkRegistry): void \l- paste(MindMapNodeModel): void \l+ getAdditionalInfo(): String\
 \l+ encrypt(): void \l+ childrenUnfolded(): ListIterator \l+ updateIcon(): void \l+ isFolded(): boolean \l+ setPassword(StringBuffer\
): void \l+ setAdditionalInfo(String): void \l+ setStoringEncryptedContent(boolean): void \l+ hasChildren(): boolean \l+\
 EncryptedMindMapNode(Object,FreeMindMain,MindMap) \l+ isWriteable(): boolean \l+ setShuttingDown(boolean): void \l- getMindMapMapModel\
(): MindMapMapModel \l+ isAccessible(): boolean \l- encryptXml(StringBuffer): String \l- setAccessible(boolean): void \l+\
 insert(MutableTreeNode,int): void \l+ isStoringEncryptedContent(): boolean \l- getNodeFromXml(String): MindMapNodeModel \l+ getChildCount\
(): int \l+ checkPassword(StringBuffer): boolean \l+ setMap(MindMap): void \l+ decrypt(StringBuffer): boolean \l &lt\
;Initializer&gt;() \l+ childrenFolded(): ListIterator \l- decryptXml(String,StringBuffer): String}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="927.58,4335.7", rects="723.58,4624.7,1131.6,4647.7 723.58,4496.7,1131.6,4624.7 723.58,4023.7,1131.6,4496.7", width="5.6667", height="8.6806"];
			}
			subgraph cluster_freemind_modes_attributes {
				graph [label=attributes,
					levelType="3_FAMIX.Namespace",
					bb="7575.4,7387.9,9149.4,8910.9"];
				subgraph cluster_freemind_modes_attributes_AttributeRegistryElement {
					graph [label="+ AttributeRegistryElement",
						levelType="4_FAMIX.Class",
						bb="8567.6,8379.7,9141.6,8818.7"];
					freemind_modes_attributes_AttributeRegistryElement [label="{AttributeRegistryElement|- registry : AttributeRegistry\l- values : RegisteredAttributeValues\l- isRestricted : boolean\l- key \
: String\l- visibilityModel : Boolean\l- isVisible : boolean\l- restrictionModel : Boolean\l|+ getValues(): SortedComboBoxModel \
\l+ replaceValue(String,String): void \l+ addValue(String): void \l+ save(): XMLElement \l setVisibilityModel(Boolean): void \l+\
 setRestriction(boolean): void \l+ removeAllValues(): void \l getVisibilityModel(): Boolean \l+ isRestricted(): boolean \l+ setVisibility\
(boolean): void \l+ getKey(): Comparable \l+ removeValue(String): void \l+ setKey(String): void \l getRestriction(): Boolean\
 \l+ AttributeRegistryElement(AttributeRegistry,String) \l setRestrictionModel(Boolean): void \l+ isVisible(): boolean}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="8731.7,8588", rects="8575.2,8764.5,8888.2,8787.5 8575.2,8651.5,8888.2,8764.5 8575.2,8388.5,8888.2,8651.5", width="4.3472", height="5.5556"];
					freemind_modes_attributes_AttributeRegistryElement_RegisteredAttributeValues [label="{- RegisteredAttributeValues|+ _replace(Object,Object): void \l+ replace(Object,Object): void \l+ add(Object): void \l+ getRegistry\
(): AttributeRegistry \l- RegisteredAttributeValues() \l+ _add(Object): void \l+ _remove(Object): void \l+ remove(Object): void\
 \l+ getKey(): String}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="9030.7,8471", rects="8927.7,8531,9133.7,8554 8927.7,8388,9133.7,8531", width="2.8611", height="2.3194"];
				}
				freemind_modes_attributes_AttributeRegistry [label="{+ AttributeRegistry|- isRestricted : boolean\l- attributeViewType : String\l# visibleElementsNumber : int\l- restrictionModel :\
 Boolean\l- TABLE_FONT_SIZE : int\l- CAPACITY_INCREMENT : int\l# isAttributeLayoutChanged : boolean\l- changeEvent : ChangeEvent\
\l- myComboBoxColumnModel : AttributeRegistryComboBoxColumnModel\l- attributesEvent : ChangeEvent\l- fontSize : int\l- listenerList\
 : EventListenerList\l+ GLOBAL : int\l# registry : MapRegistry\l# elements : SortedMapVector\l- myTableModel : AttributeRegistryTableModel\
\l|+ registry(Attribute): void \l+ addAttributesListener(AttributesListener): void \l+ indexOf(String): int \l+ fireStateChanged\
(): void \l+ getAttributeViewType(): String \l+ incrementVisibleElementsNumber(): void \l+ AttributeRegistry() \l+ \
removeChangeListener(ChangeListener): void \l+ removeAttributesListener(AttributesListener): void \l+ setFontSize(int): void \l+\
 setRestrictionModel(int,Boolean): void \l+ resetChanges(): void \l+ fireAttributeLayoutChanged(): void \l+ getComboBoxModel(): \
ComboBoxModel \l removeAtribute(Object): void \l+ save(Writer): void \l+ size(): int \l+ containsElement(String): boolean \l+ exist\
(String,Object): boolean \l+ setAttributeViewType(String): void \l+ setRestricted(boolean): void \l+ getTableModel(): AttributeRegistryTableModel\
 \l getRestriction(int): Boolean \l+ setRestricted(String,boolean): void \l+ getElements(): SortedMapVector \
\l+ addChangeListener(ChangeListener): void \l# fireAttributesChanged(): void \l+ AttributeRegistry(MapRegistry) \l- getCombinedModel\
(): AttributeRegistryComboBoxColumnModel \l+ setAttributeLayoutChanged(): void \l+ unregistry(String): void \l+ applyChanges\
(): void \l+ setVisibilityModel(int,Boolean): void \l+ registry(String): void \l+ isRestricted(): boolean \l+ getListBoxModel()\
: SortedListModel \l- setRestricted(int,boolean): void \l+ getVisibleElementsNumber(): int \l+ getAttributeController(): AttributeController\
 \l+ getFontSize(): int \l+ isRestricted(String): boolean \l+ decrementVisibleElementsNumber(): void \l+ getKey(int)\
: Comparable \l+ getElement(int): AttributeRegistryElement \l &lt;Initializer&gt;() \l+ getElement(Comparable): AttributeRegistryElement\
 \l+ getValues(int): SortedListModel \l+ getDefaultComboBoxModel(Comparable): ComboBoxModel}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="8213.6,8019.2", rects="7993.6,8495.7,8433.6,8518.7 7993.6,8247.7,8433.6,8495.7 7993.6,7519.7,8433.6,8247.7", width="6.1111", height="13.889"];
				freemind_modes_attributes_AttributeRegistryTableModel [label="{+ AttributeRegistryTableModel|- allAttributes : String\l- editorColumnName : String\l- attributeColumnName : String\l- attributeRegistry\
 : AttributeRegistry\l- visibilityColumnName : String\l- restrictionColumnName : String\l|+ fireTableCellUpdated(int,int\
): void \l+ setValueAt(Object,int,int): void \l+ fireTableRowsInserted(int,int): void \l &lt;Initializer&gt;() \l+ fireTableRowsDeleted\
(): void \l+ isCellEditable(int,int): boolean \l+ fireTableRowsUpdated(int,int): void \l+ getValueAt(int,int): Object \l+\
 getColumnClass(int): Class \l+ getColumnName(int): String \l+ fireTableRowsDeleted(int,int): void \l+ getColumnCount(): int \l+\
 getRowCount(): int \l+ fireRestrictionsUpdated(int): void \l AttributeRegistryTableModel(AttributeRegistry) \l+ fireVisibilityUpdated\
(int): void}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="7769.6,8196.2", rects="7624.1,8357.7,7915.1,8380.7 7624.1,8259.7,7915.1,8357.7 7624.1,8011.7,7915.1,8259.7", width="4.0417", height="5.1389"];
				freemind_modes_attributes_NodeAttributeTableModel [label="{+ NodeAttributeTableModel|- STATE_ICON : String\l- node : MindMapNode\l- noteIcon : ImageIcon\l- SHOW_ATTRIBUTE_ICON : boolean\l-\
 attributes : Vector\l- CAPACITY_INCREMENT : int\l- layout : AttributeTableLayoutModel\l|+ setName(int,Object): void \l+ getAttribute\
(int): Attribute \l+ getLayout(): AttributeTableLayoutModel \l+ setColumnWidth(int,int): void \l+ getRowCount(): int \l+ \
setValueAt(Object,int,int): void \l+ isCellEditable(int,int): boolean \l+ enableStateIcon(): void \l+ NodeAttributeTableModel(MindMapNode\
) \l+ getAttributes(): Vector \l+ addRowNoUndo(Attribute): void \l- initializeNodeAttributeLayoutXMLElement(XMLElement)\
: XMLElement \l &lt;Initializer&gt;() \l+ getColumnName(int): String \l+ removeRow(int): Object \l+ save(XMLElement): void \l+ NodeAttributeTableModel\
(MindMapNode,int) \l+ getColumnWidth(int): int \l+ disableStateIcon(): void \l+ getColumnClass(int): Class\
 \l+ getAttributeController(): AttributeController \l- saveAttribute(XMLElement,int): void \l+ getValueAt(int,int): Object \l+ setValue\
(int,Object): void \l- saveLayout(XMLElement): void \l+ insertRow(int,String,String): void \l+ getColumnCount(): int \l+ \
getNode(): MindMapNode \l+ getName(int): Object \l- allocateAttributes(int): void \l+ getValue(int): Object}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="8699.6,8029.2", rects="8485.1,8310.7,8914.1,8333.7 8485.1,8197.7,8914.1,8310.7 8485.1,7724.7,8914.1,8197.7", width="5.9583", height="8.4722"];
				freemind_modes_attributes_AttributeRegistryComboBoxColumnModel [label="{ AttributeRegistryComboBoxColumnModel|- selectedItem : Object\l- model : AttributeRegistry\l|+ AttributeRegistryComboBoxColumnModel\
(AttributeRegistry) \l+ remove(Object): void \l+ replace(Object,Object): void \l+ getElementAt(int): Object \l+ clear(): void\
 \l+ getSelectedItem(): Object \l+ contains(Object): boolean \l+ getSize(): int \l+ getIndexOf(Object): int \l+ tableChanged(TableModelEvent\
): void \l+ setSelectedItem(Object): void \l+ add(Object): void}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="7813.6,8710.2", rects="7624.6,8811.7,8002.6,8834.7 7624.6,8773.7,8002.6,8811.7 7624.6,8585.7,8002.6,8773.7", width="5.25", height="3.4722"];
				freemind_modes_attributes_AttributeTableLayoutModel [label="{+ AttributeTableLayoutModel|- width : int\l+ DEFAULT_COLUMN_WIDTH : int\l+ HIDE_ALL : String\l changeEvent : ChangeEvent\l- listenerList\
 : EventListenerList\l+ SHOW_ALL : String\l+ SHOW_SELECTED : String\l layoutChangeEvent : ColumnWidthChangeEvent\l| &lt\
;Initializer&gt;() \l# fireColumnWidthChanged(int): void \l+ AttributeTableLayoutModel() \l+ removeColumnWidthChangeListener(ColumnWidthChangeListener\
): void \l- setListenerList(EventListenerList): void \l+ getColumnWidth(int): int \l+ addColumnWidthChangeListener\
(ColumnWidthChangeListener): void \l+ setColumnWidth(int,int): void \l- getListenerList(): EventListenerList}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="8297.6,8732.2", rects="8075.6,8856.2,8519.6,8879.2 8075.6,8728.2,8519.6,8856.2 8075.6,8585.2,8519.6,8728.2", width="6.1667", height="4.0972"];
				freemind_modes_attributes_Attribute [label="{+ Attribute|- name : String\l- value : String\l|+ Attribute(String,String) \l+ Attribute(Attribute) \l+ Attribute(String) \l+ toString\
(): String \l+ setValue(String): void \l+ getName(): String \l+ getValue(): String \l+ setName(String): void}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="7827.6,7696.2", rects="7747.6,7767.7,7907.6,7790.7 7747.6,7729.7,7907.6,7767.7 7747.6,7601.7,7907.6,7729.7", width="2.2222", height="2.6389"];
				freemind_modes_attributes_ColumnWidthChangeEvent [label="{+ ColumnWidthChangeEvent|- col : int\l|+ ColumnWidthChangeEvent(Object,int) \l+ getColumnNumber(): int}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="7789.6,7889.2", rects="7665.6,7908.2,7913.6,7931.2 7665.6,7885.2,7913.6,7908.2 7665.6,7847.2,7913.6,7885.2", width="3.4444", height="1.1806"];
				freemind_modes_attributes_ColumnWidthChangeListener [label="{+ ColumnWidthChangeListener|*+ columnWidthChanged(ColumnWidthChangeEvent): void}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="7759.6,8485.2", rects="7583.1,8485.2,7936.1,8508.2 7583.1,8462.2,7936.1,8485.2", width="4.9028", height="0.65278"];
				freemind_modes_attributes_AttributeController [label="{+ AttributeController| performReplaceAtributeName(String,String): void \l performReplaceAttributeValue(String,String,String): void\
 \l performRemoveAttributeValue(String,String): void \l performSetValueAt(NodeAttributeTableModel,Object,int,int): void \l performSetFontSize\
(AttributeRegistry,int): void \l performInsertRow(NodeAttributeTableModel,int,String,String): void \l performRemoveAttribute\
(String): void \l performSetVisibility(int,boolean): void \l performSetColumnWidth(NodeAttributeTableModel,int,int):\
 void \l performRegistryAttribute(String): void \l performRegistryAttributeValue(String,String): void \l performRemoveRow(NodeAttributeTableModel\
,int): void \l performSetRestriction(int,boolean): void \l performRegistrySubtreeAttributes(MindMapNodeModel): \
void}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="8688.6,7517.2", rects="8485.6,7614.7,8891.6,7637.7 8485.6,7396.7,8891.6,7614.7", width="5.6389", height="3.3611"];
				freemind_modes_attributes_AttributeTableModel [label="{+ AttributeTableModel|*+ getValueAt(int,int): Object \l fireTableDataChanged(): void \l setColumnWidth(int,int): void \l getColumnWidth\
(int): int \l setValueAt(Object,int,int): void \l*+ getRowCount(): int \l getNode(): MindMapNode}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="7681.6,7464.2", rects="7583.1,7509.2,7780.1,7532.2 7583.1,7396.2,7780.1,7509.2", width="2.7361", height="1.9028"];
			}
			subgraph cluster_freemind_modes_schememode {
				graph [label=schememode,
					levelType="3_FAMIX.Namespace",
					bb="2394.9,9068.4,3291.9,9932.4"];
				subgraph cluster_freemind_modes_schememode_SchemeController {
					graph [label="+ SchemeController",
						levelType="4_FAMIX.Class",
						bb="2403.1,9188.7,2953.1,9588.7"];
					freemind_modes_schememode_SchemeController [label="{SchemeController| newMap : Action\l saveAs : Action\l evaluate : Action\l- popupmenu : JPopupMenu\l save : Action\l open : Action\
\l|+ getPopupMenu(): JPopupMenu \l+ newNode(Object,MindMap): MindMapNode \l &lt;Initializer&gt;() \l+ saveAs(): boolean \l+ SchemeController\
(Mode) \l+ getHookFactory(): HookFactory \l+ newModel(ModeController): MapAdapter \l+ updateMenus(StructuredMenuHolder\
): void}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="2552.2,9322", rects="2410.7,9423.5,2693.7,9446.5 2410.7,9325.5,2693.7,9423.5 2410.7,9197.5,2693.7,9325.5", width="3.9306", height="3.4722"];
					freemind_modes_schememode_SchemeController_EvaluateAction [label="{- EvaluateAction|+ actionPerformed(ActionEvent): void \l EvaluateAction()}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="2827.2,9527", rects="2709.7,9534.5,2944.7,9557.5 2709.7,9496.5,2944.7,9534.5", width="3.2639", height="0.86111"];
				}
				freemind_modes_schememode_SchemeMapModel [label="{+ SchemeMapModel|+ getFilteredXml(Writer): void \l+ load(URL): void \l+ getCode(): String \l+ SchemeMapModel(FreeMindMain,ModeController\
) \l+ toString(): String \l+ getXml(Writer): void \l+ loadMathStyle(Reader): void \l+ save(File): boolean}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="2732.1,9712.7", rects="2571.1,9765.2,2893.1,9788.2 2571.1,9637.2,2893.1,9765.2", width="4.4722", height="2.1111"];
				freemind_modes_schememode_SchemeEdgeModel [label="{+ SchemeEdgeModel|+ SchemeEdgeModel(MindMapNode,FreeMindMain)}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="2561.1,9127.7", rects="2402.6,9127.7,2719.6,9150.7 2402.6,9104.7,2719.6,9127.7", width="4.4028", height="0.65278"];
				freemind_modes_schememode_SchemePopupMenu [label="{+ SchemePopupMenu|- c : SchemeController\l|+ SchemePopupMenu(SchemeController)}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="3116.1,9251.7", rects="2990.6,9263.2,3241.6,9286.2 2990.6,9240.2,3241.6,9263.2 2990.6,9217.2,3241.6,9240.2", width="3.4861", height="0.97222"];
				freemind_modes_schememode_SchemeNodeModel [label="{+ SchemeNodeModel|+ isWriteable(): boolean \l+ getCodeMathStyle(): String \l+ toString(): String \l+ SchemeNodeModel(FreeMindMain\
,MindMap) \l+ getCodeClassicStyle(): String}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="3137.1,9129.7", rects="2990.6,9159.7,3283.6,9182.7 2990.6,9076.7,3283.6,9159.7", width="4.0694", height="1.4861"];
				freemind_modes_schememode_SchemeToolBar [label="{+ SchemeToolBar|- c : SchemeController\l|+ SchemeToolBar(SchemeController)}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="3105.1,9363.7", rects="2990.6,9375.2,3219.6,9398.2 2990.6,9352.2,3219.6,9375.2 2990.6,9329.2,3219.6,9352.2", width="3.1806", height="0.97222"];
				freemind_modes_schememode_SchemeMode [label="{+ SchemeMode|- toolbar : JToolBar\l- c : Controller\l- isRunning : boolean\l- MODENAME : String\l- modecontroller : SchemeController\
\l|+ getDefaultModeController(): ModeController \l+ activate(): void \l+ SchemeMode() \l+ init(Controller): void \l+ restore\
(String): void \l &lt;Initializer&gt;() \l+ createModeController(): ModeController \l+ getFrame(): FreeMindMain \l+ getController\
(): Controller \l+ toString(): String}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="3076.1,9768.7", rects="2934.6,9877.7,3217.6,9900.7 2934.6,9794.7,3217.6,9877.7 2934.6,9636.7,3217.6,9794.7", width="3.9306", height="3.6806"];
			}
			subgraph cluster_freemind_modes_filemode {
				graph [label=filemode,
					levelType="3_FAMIX.Namespace",
					bb="1274.9,9067.9,2213.9,9888.9"];
				subgraph cluster_freemind_modes_filemode_FileController {
					graph [label="+ FileController",
						levelType="4_FAMIX.Class",
						bb="1311.1,9243.7,1873.1,9574.7"];
					freemind_modes_filemode_FileController [label="{FileController| newMap : Action\l openPath : Action\l center : Action\l- popupmenu : JPopupMenu\l|+ getHookFactory(): HookFactory\
 \l &lt;Initializer&gt;() \l+ plainClick(MouseEvent): void \l+ getModeToolBar(): JToolBar \l+ newNode(Object,MindMap): MindMapNode\
 \l- toggleFolded(MindMapNode): void \l+ newModel(ModeController): MapAdapter \l+ updateMenus(StructuredMenuHolder): void \l+\
 FileController(Mode) \l+ getPopupMenu(): JPopupMenu}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="1460.2,9419", rects="1318.7,9520.5,1601.7,9543.5 1318.7,9452.5,1601.7,9520.5 1318.7,9294.5,1601.7,9452.5", width="3.9306", height="3.4722"];
					freemind_modes_filemode_FileController_CenterAction [label="{- CenterAction| CenterAction() \l+ actionPerformed(ActionEvent): void}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="1749.2,9388", rects="1633.7,9395.5,1864.7,9418.5 1633.7,9357.5,1864.7,9395.5", width="3.2083", height="0.86111"];
					freemind_modes_filemode_FileController_OpenPathAction [label="{- OpenPathAction| OpenPathAction() \l+ actionPerformed(ActionEvent): void}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="1749.2,9283", rects="1633.7,9290.5,1864.7,9313.5 1633.7,9252.5,1864.7,9290.5", width="3.2083", height="0.86111"];
				}
				freemind_modes_filemode_FileMode [label="{+ FileMode|- modecontroller : FileController\l- MODENAME : String\l- isRunning : boolean\l- c : Controller\l- toolbar : JToolBar\
\l|+ getToolbar(): JToolBar \l+ toString(): String \l+ getController(): Controller \l+ activate(): void \l &lt;Initializer&gt;(\
) \l+ init(Controller): void \l+ restore(String): void \l+ createModeController(): ModeController \l+ FileMode() \l+ getDefaultModeController\
(): ModeController}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="2066.1,9208.2", rects="1926.6,9317.2,2205.6,9340.2 1926.6,9234.2,2205.6,9317.2 1926.6,9076.2,2205.6,9234.2", width="3.875", height="3.6806"];
				freemind_modes_filemode_FileMapModel [label="{+ FileMapModel|- linkRegistry : MindMapLinkRegistry\l|+ FileMapModel(FreeMindMain,ModeController) \l+ setLinkInclinationChanged\
(): void \l+ save(File): boolean \l+ getXml(Writer): void \l+ getLinkRegistry(): MindMapLinkRegistry \l+ getFilteredXml(Writer):\
 void \l+ load(URL): void \l+ isSaved(): boolean \l+ FileMapModel(File,FreeMindMain,ModeController) \l+ changeNode(MindMapNode,String\
): void \l+ destroy(): void \l+ toString(): String}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="1948.1,9725.2", rects="1787.1,9819.2,2109.1,9842.2 1787.1,9796.2,2109.1,9819.2 1787.1,9608.2,2109.1,9796.2", width="4.4722", height="3.2639"];
				freemind_modes_filemode_FilePopupMenu [label="{+ FilePopupMenu|- c : FileController\l|+ FilePopupMenu(FileController) \l# add(Action,String): void}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="1386.1,9146.2", rects="1282.6,9165.2,1489.6,9188.2 1282.6,9142.2,1489.6,9165.2 1282.6,9104.2,1489.6,9142.2", width="2.875", height="1.1806"];
				freemind_modes_filemode_FileEdgeModel [label="{+ FileEdgeModel|+ FileEdgeModel(MindMapNode,FreeMindMain)}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="1737.1,9183.2", rects="1590.6,9183.2,1883.6,9206.2 1590.6,9160.2,1883.6,9183.2", width="4.0694", height="0.65278"];
				freemind_modes_filemode_FileNodeModel [label="{+ FileNodeModel|- file : File\l- color : Color\l|+ isWriteable(): boolean \l+ hasChildren(): boolean \l+ toString(): String \l+\
 childrenFolded(): ListIterator \l+ getLink(): String \l+ isLeaf(): boolean \l getFile(): File \l+ childrenUnfolded(): ListIterator\
 \l+ getColor(): Color \l+ FileNodeModel(File,FreeMindMain,MindMap) \l+ getText(): String \l+ getStyle(): String}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="1597.1,9733.2", rects="1450.6,9834.7,1743.6,9857.7 1450.6,9796.7,1743.6,9834.7 1450.6,9608.7,1743.6,9796.7", width="4.0694", height="3.4722"];
				freemind_modes_filemode_FileToolBar [label="{+ FileToolBar|- c : FileController\l|+ FileToolBar(FileController)}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="2017.1,9419.2", rects="1926.6,9430.7,2107.6,9453.7 1926.6,9407.7,2107.6,9430.7 1926.6,9384.7,2107.6,9407.7", width="2.5139", height="0.97222"];
			}
			subgraph cluster_freemind_modes_FreeMindFileDialog {
				graph [label="+ FreeMindFileDialog",
					levelType="3_FAMIX.Class",
					bb="7854.9,1227.9,8427.9,1588.9"];
				freemind_modes_FreeMindFileDialog [label="{FreeMindFileDialog|*+ showSaveDialog(Component): int \l*+ setSelectedFile(File): void \l*+ registerDirectoryResultListener(DirectoryResultListener\
): void \l*+ setDialogTitle(String): void \l*+ setCurrentDirectory(File): void \l*+ getSelectedFile(): File \l+\
 addChoosableFileFilter(FileFilter): void \l*+ addChoosableFileFilterAsDefault(FileFilter): void \l+ setFileSelectionMode(int)\
: void \l+ setMultiSelectionEnabled(boolean): void \l*+ showOpenDialog(Component): int \l*+ getSelectedFiles(): File \l*+ isMultiSelectionEnabled\
(): boolean}", levelType="3_FAMIX.Class", hasData=false, hasMethods=true, pos="8055.1,1349.2", rects="7863.1,1439.2,8247.1,1462.2 7863.1,1236.2,8247.1,1439.2", width="5.3333", height="3.1528"];
				freemind_modes_FreeMindFileDialog_DirectoryResultListener [label="{+ DirectoryResultListener|*+ setChosenDirectory(File): void}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="8316.1,1534.2", rects="8212.6,1534.2,8419.6,1557.2 8212.6,1511.2,8419.6,1534.2", width="2.875", height="0.65278"];
			}
			subgraph cluster_freemind_modes_LinkAdapter {
				graph [label="*+ LinkAdapter",
					levelType="3_FAMIX.Class",
					bb="5054.9,1087.9,5763.9,1558.9"];
				freemind_modes_LinkAdapter [label="{LinkAdapter| destinationLabel : String\l referenceText : String\l- standardColor : Color\l source : MindMapNode\l- standardStyle\
 : String\l- listener : LinkAdapterListener\l+ RESOURCES_STANDARDLINKSTYLE : String\l- uniqueId : String\l|+ getReferenceText()\
: String \l+ setSource(MindMapNode): void \l+ getSource(): MindMapNode \l+ setUniqueId(String): void \l+ setDestinationLabel(String\
): void \l# getStandardStylePropertyString(): String \l+ LinkAdapter(MindMapNode,MindMapNode,FreeMindMain) \l# setStandardColor\
(Color): void \l# getStandardColorPropertyString(): String \l &lt;Initializer&gt;() \l+ getDestinationLabel(): String \l# getStandardColor\
(): Color \l# getStandardStyle(): String \l+ setReferenceText(String): void \l# setStandardStyle(String): void \l+ getUniqueId\
(): String}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="5248.1,1328.2", rects="5062.6,1504.7,5433.6,1527.7 5062.6,1376.7,5433.6,1504.7 5062.6,1128.7,5433.6,1376.7", width="5.1528", height="5.5556"];
				freemind_modes_LinkAdapter_LinkAdapterListener [label="{# LinkAdapterListener|+ propertyChanged(String,String,String): void \l# LinkAdapterListener()}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="5617.1,1127.2", rects="5478.6,1134.7,5755.6,1157.7 5478.6,1096.7,5755.6,1134.7", width="3.8472", height="0.86111"];
			}
			subgraph cluster_freemind_modes_FreeMindAwtFileDialog {
				graph [label="+ FreeMindAwtFileDialog",
					levelType="3_FAMIX.Class",
					bb="8274.9,4448.4,8923.9,5004.4"];
				freemind_modes_FreeMindAwtFileDialog [label="{FreeMindAwtFileDialog|- mDirectoryResultListener : DirectoryResultListener\l- APPLE_AWT_FILE_DIALOG_FOR_DIRECTORIES : String\l#\
 logger : Logger\l- mFilter : FreeMindFilenameFilter\l|+ isMultiSelectionEnabled(): boolean \l+ registerDirectoryResultListener(\
DirectoryResultListener): void \l+ setDialogTitle(String): void \l+ addChoosableFileFilter(FileFilter): void \l+ FreeMindAwtFileDialog\
() \l+ showOpenDialog(Component): int \l+ addChoosableFileFilterAsDefault(FileFilter): void \l# callDirectoryListener(): void\
 \l# getReturnValue(): int \l+ getSelectedFile(): File \l+ setSelectedFile(File): void \l+ main(String[]): void \l+ getSelectedFiles\
(): File \l+ setCurrentDirectory(File): void \l+ showSaveDialog(Component): int \l+ setFileSelectionMode(int): void \l &lt\
;Initializer&gt;() \l+ setMultiSelectionEnabled(boolean): void}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="8475.1,4663.7", rects="8283.1,4825.2,8667.1,4848.2 8283.1,4757.2,8667.1,4825.2 8283.1,4479.2,8667.1,4757.2", width="5.3333", height="5.1389"];
				freemind_modes_FreeMindAwtFileDialog_NullFilter [label="{- NullFilter|- NullFilter() \l+ getDescription(): String \l+ accept(File): boolean}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="8584.1,4934.7", rects="8503.1,4949.7,8665.1,4972.7 8503.1,4896.7,8665.1,4949.7", width="2.25", height="1.0694"];
				freemind_modes_FreeMindAwtFileDialog_FileAndDirFilter [label="{- FileAndDirFilter|+ accept(File): boolean \l+ getDescription(): String \l- FileAndDirFilter()}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="8782.1,4714.7", rects="8701.1,4729.7,8863.1,4752.7 8701.1,4676.7,8863.1,4729.7", width="2.25", height="1.0694"];
				freemind_modes_FreeMindAwtFileDialog_FreeMindFilenameFilter [label="{- FreeMindFilenameFilter|- mCustomFilter : FileFilter\l- mPrincipalFilter : FileFilter\l|+ getPrincipalFilter(): FileFilter \l+\
 setCustomFilter(FileFilter): void \l- FreeMindFilenameFilter() \l+ accept(File,String): boolean \l+ setPrincipalFilter(FileFilter\
): void \l &lt;Initializer&gt;() \l+ getCustomFilter(): FileFilter}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="8808.1,4543.7", rects="8700.6,4607.7,8915.6,4630.7 8700.6,4569.7,8915.6,4607.7 8700.6,4456.7,8915.6,4569.7", width="2.9861", height="2.4306"];
				freemind_modes_FreeMindAwtFileDialog_DirFilter [label="{- DirFilter|+ getDescription(): String \l+ accept(File): boolean \l- DirFilter()}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="8782.1,4824.7", rects="8701.1,4839.7,8863.1,4862.7 8701.1,4786.7,8863.1,4839.7", width="2.25", height="1.0694"];
				freemind_modes_FreeMindAwtFileDialog_FileOnlyFilter [label="{- FileOnlyFilter|+ getDescription(): String \l+ accept(File): boolean \l- FileOnlyFilter()}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="8782.1,4934.7", rects="8701.1,4949.7,8863.1,4972.7 8701.1,4896.7,8863.1,4949.7", width="2.25", height="1.0694"];
			}
			subgraph cluster_freemind_modes_CloudAdapter {
				graph [label="*+ CloudAdapter",
					levelType="3_FAMIX.Class",
					bb="7015.4,1228.4,7685.4,1636.4"];
				freemind_modes_CloudAdapter [label="{CloudAdapter|- iterativeLevel : int\l+ RESOURCES_STANDARDCLOUDSTYLE : String\l- standardStyle : String\l DEF_STROKE : Stroke\l-\
 listener : CloudAdapterListener\l- standardColor : Color\l| &lt;Initializer&gt;() \l+ setTarget(MindMapNode): void \l# getStandardStylePropertyString\
(): String \l# setStandardColor(Color): void \l+ getExteriorColor(): Color \l- calcIterativeLevel(MindMapNode\
): void \l+ getIterativeLevel(): int \l# getStandardColorPropertyString(): String \l# getStandardColor(): Color \l# getStandardStyle\
(): String \l+ CloudAdapter(MindMapNode,FreeMindMain) \l+ changeIterativeLevel(int): void \l# setStandardStyle(String): void\
 \l+ save(): XMLElement}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="7187.6,1435.7", rects="7023.1,1582.2,7352.1,1605.2 7023.1,1484.2,7352.1,1582.2 7023.1,1266.2,7352.1,1484.2", width="4.5694", height="4.7222"];
				freemind_modes_CloudAdapter_CloudAdapterListener [label="{# CloudAdapterListener|+ propertyChanged(String,String,String): void \l# CloudAdapterListener()}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="7538.6,1267.7", rects="7400.1,1275.2,7677.1,1298.2 7400.1,1237.2,7677.1,1275.2", width="3.8472", height="0.86111"];
			}
			subgraph cluster_freemind_modes_MindMapLinkRegistry {
				graph [label="+ MindMapLinkRegistry",
					levelType="3_FAMIX.Class",
					bb="15.435,8368.4,565.43,8882.4"];
				freemind_modes_MindMapLinkRegistry [label="{MindMapLinkRegistry|# mIdToLink : HashMap\l# mIdToLinks : HashMap\l# logger : Logger\l# mLocallyLinkedIds : HashSet\l# mTargetToId\
 : HashMap\l# mSourceToLinks : HashMap\l# mIdToTarget : HashMap\l|+ generateUniqueLinkId(String): String \l+ deregisterLinkTarget\
(MindMapNode): void \l+ registerLink(MindMapLink): void \l+ registerLinkTarget(MindMapNode): String \l+ MindMapLinkRegistry(\
) \l+ isTargetOfLocalHyperlinks(String): boolean \l+ registerLinkTarget(MindMapNode,String): String \l+ getAllSources(MindMapNode\
): Vector \l+ generateUniqueID(String): String \l+ _registerLinkTarget(MindMapNode,String): String \l+ deregisterLink(MindMapLink\
): void \l- getAssignedLinksVector(String): Vector \l+ getLabel(MindMapNode): String \l &lt;Initializer&gt;() \l+ getLinkForId\
(String): MindMapLink \l+ registerLocalHyperlinkId(String): void \l+ getTargetForId(String): MindMapNode \l+ getAllLinks(MindMapNode\
): Vector \l+ _registerLinkTarget(MindMapNode): String \l+ getAllLinksIntoMe(MindMapNode): Vector \l+ getState(MindMapNode):\
 String \l+ getAllLinksFromMe(MindMapNode): Vector}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="179.58,8613.7", rects="23.579,8827.7,335.58,8850.7 23.579,8714.7,335.58,8827.7 23.579,8376.7,335.58,8714.7", width="4.3333", height="6.5972"];
				freemind_modes_MindMapLinkRegistry_SynchronousVector [label="{- SynchronousVector|- SynchronousVector() \l+ add(Object): boolean \l+ removeElementAt(int): void}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="466.58,8478.7", rects="375.58,8493.7,557.58,8516.7 375.58,8440.7,557.58,8493.7", width="2.5278", height="1.0694"];
			}
			subgraph cluster_freemind_modes_MapAdapter {
				graph [label="*+ MapAdapter",
					levelType="3_FAMIX.Class",
					bb="3514.9,9068.4,4415.9,9972.4"];
				freemind_modes_MapAdapter [label="{MapAdapter|- mTimerForFileChangeObservation : Timer\l- frame : FreeMindMain\l# changesPerformedSinceLastSave : int\l- file : File\
\l- registry : MapRegistry\l- mFileTime : long\l- filter : Filter\l# readOnly : boolean\l- mMapSourceChangedObserverSet : HashSet\
\l# mModeController : ModeController\l- INTERVAL_BETWEEN_FILE_MODIFICATION_TIME_CHECKS : int\l# logger : Logger\l|+ getFilter\
(): Filter \l+ getAsPlainText(List): String \l+ getRootNode(): MindMapNode \l+ getModeController(): ModeController \l &lt;Initializer\
&gt;() \l+ getRegistry(): MapRegistry \l+ getURL(): URL \l+ getFrame(): FreeMindMain \l+ setRoot(MindMapNode): void \l# getText\
(String): String \l+ getAsRTF(List): String \l- fireTreeNodesRemoved(Object,Object[],int[],Object[],Object[],TreeModelEvent)\
: TreeModelEvent \l# setFile(File): void \l+ changeRoot(MindMapNode): void \l+ nodeChanged(TreeNode): void \l# fireTreeNodesInserted\
(Object,Object[],int[],Object[]): void \l+ registerMapSourceChangedObserver(MapSourceChangedObserver,long): void \l- fireTreeNodesInserted\
(Object,Object[],int[],Object[],Object[],TreeModelEvent): TreeModelEvent \l+ setSaved(boolean): void \l- removeNodes\
(MindMapNode): void \l+ getLinkRegistry(): MindMapLinkRegistry \l+ getRestorable(): String \l# getNumberOfChangesSinceLastSave\
(): int \l# fireTreeNodesRemoved(Object,Object[],int[],Object[]): void \l+ destroy(): void \l# cancelFileChangeObservationTimer(\
): void \l- fireTreeNodesChanged(Object,Object[],int[],Object[],Object[],TreeModelEvent): TreeModelEvent \l+ getAsHTML(List): String\
 \l# fireTreeStructureChanged(Object,Object[],int[],Object[]): void \l+ getFile(): File \l+ load(File): void \l+ MapAdapter(\
FreeMindMain,ModeController) \l- getFileTime(): long \l+ nodeRefresh(TreeNode): void \l# setFileTime(): void \l+ isReadOnly(): boolean\
 \l+ tryToLock(File): String \l+ setFilter(Filter): void \l+ isSaved(): boolean \l+ deregisterMapSourceChangedObserver(MapSourceChangedObserver\
): long \l- fireTreeStructureChanged(Object,Object[],int[],Object[],Object[],TreeModelEvent): TreeModelEvent\
 \l# fireTreeNodesChanged(Object,Object[],int[],Object[]): void \l nodeChangedInternal(TreeNode): void}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="3819.1,9508.7", rects="3522.6,9917.7,4115.6,9940.7 3522.6,9729.7,4115.6,9917.7 3522.6,9076.7,4115.6,9729.7", width="8.2361", height="12.014"];
				freemind_modes_MapAdapter_FileChangeInspectorTimerTask [label="{# FileChangeInspectorTimerTask|+ run(): void \l# FileChangeInspectorTimerTask()}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="4301.1,9163.7", rects="4194.6,9171.2,4407.6,9194.2 4194.6,9133.2,4407.6,9171.2", width="2.9583", height="0.86111"];
			}
			subgraph cluster_freemind_modes_MindMap {
				graph [label="+ MindMap",
					levelType="3_FAMIX.Class",
					bb="4074.9,1088.4,4893.9,1636.4"];
				freemind_modes_MindMap [label="{MindMap|*+ getAsRTF(List): String \l*+ save(File): boolean \l*+ getFilter(): Filter \l*+ getPathToRoot(TreeNode): TreeNode \l*+\
 getModeController(): ModeController \l registerMapSourceChangedObserver(MapSourceChangedObserver,long): void \l*+ setSaved(boolean\
): void \l*+ getLinkRegistry(): MindMapLinkRegistry \l deregisterMapSourceChangedObserver(MapSourceChangedObserver): long \l \
nodeChanged(TreeNode): void \l*+ isReadOnly(): boolean \l*+ load(URL): void \l*+ getRegistry(): MapRegistry \l nodeRefresh(TreeNode\
): void \l getXml(Writer): void \l*+ getRootNode(): MindMapNode \l*+ getAsPlainText(List): String \l*+ getAsHTML(List): String\
 \l*+ getURL(): URL \l*+ setFilter(Filter): void \l*+ isSaved(): boolean \l*+ getFile(): File \l*+ getRestorable(): String \l*+\
 changeRoot(MindMapNode): void \l*+ nodeStructureChanged(TreeNode): void \l destroy(): void \l*+ getFilteredXml(Writer): void}", levelType="3_FAMIX.Class", hasData=false, hasMethods=true, pos="4316.1,1386.7", rects="4083.1,1581.7,4549.1,1604.7 4083.1,1168.7,4549.1,1581.7", width="6.4722", height="6.0694"];
				freemind_modes_MindMap_MapSourceChangedObserver [label="{+ MapSourceChangedObserver|*+ mapSourceChanged(MindMap): boolean}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="4754.1,1119.7", rects="4622.6,1119.7,4885.6,1142.7 4622.6,1096.7,4885.6,1119.7", width="3.6528", height="0.65278"];
			}
			subgraph cluster_freemind_modes_ModeController {
				graph [label="+ ModeController",
					levelType="3_FAMIX.Class",
					bb="4634.9,9067.9,5469.9,10257"];
				freemind_modes_ModeController [label="{ModeController|+ NODESEPARATOR : String\l| copySingle(): Transferable \l*+ fireNodePreDeleteEvent(MindMapNode): void \l*+ getNodeView\
(MindMapNode): NodeView \l+ copy(List,boolean): Transferable \l*+ save(): boolean \l firePreSaveEvent(MindMapNode): void \l\
*+ nodeChanged(MindMapNode): void \l*+ copy(): Transferable \l*+ extendSelection(MouseEvent): boolean \l*+ getSelected(): MindMapNode\
 \l*+ setModel(MapAdapter): void \l open(): void \l changeSelection(NodeView,boolean): void \l*+ getFrame(): FreeMindMain \
\l displayNode(MindMapNode): void \l getSelectedsByDepth(): List \l*+ getModeToolBar(): JToolBar \l+ updatePopupMenu(StructuredMenuHolder\
): void \l*+ load(File): ModeController \l*+ select(NodeView): void \l onViewCreatedHook(NodeView): void \l getMapModule\
(): MapModule \l*+ startupController(): void \l*+ getMap(): MindMap \l*+ getResource(String): URL \l*+ showPopupMenu(MouseEvent\
): void \l*+ updateMenus(StructuredMenuHolder): void \l onViewRemovedHook(NodeView): void \l doubleClick(MouseEvent): void \l*+ \
getPopupForModel(Object): JPopupMenu \l*+ getNodeFromID(String): NodeAdapter \l*+ load(URL): ModeController \l*+ newMap(): MindMap\
 \l*+ setVisible(boolean): void \l registerNodeLifetimeListener(NodeLifetimeListener,boolean): void \l*+ getFileChooser(FileFilter\
): FreeMindFileDialog \l saveAs(): boolean \l onLostFocusNode(NodeView): void \l*+ centerNode(MindMapNode): void \l &lt;Initializer\
&gt;() \l deregisterNodeSelectionListener(NodeSelectionListener): void \l*+ setToolTip(MindMapNode,String,String): void \l\
 setView(MapView): void \l onFocusNode(NodeView): void \l getHookFactory(): HookFactory \l*+ nodeRefresh(MindMapNode): void \l \
deregisterNodeLifetimeListener(NodeLifetimeListener): void \l*+ getView(): MapView \l copy(MindMapNode,boolean): Transferable \l+\
 sortNodesByDepth(List): void \l*+ getSelecteds(): List \l getSelectionColor(): Color \l*+ select(MindMapNode,List): void \l*+ \
close(boolean,MapModuleManager): boolean \l*+ plainClick(MouseEvent): void \l*+ shutdownController(): void \l*+ getText(String):\
 String \l registerNodeSelectionListener(NodeSelectionListener,boolean): void \l*+ createNodeTreeFromXml(Reader,HashMap): MindMapNode\
 \l*+ getAttributeController(): AttributeController \l*+ getSelectedView(): NodeView \l*+ getController(): Controller \l*+ \
getLeftToolBar(): Component \l save(File): boolean \l*+ getNodeID(MindMapNode): String \l*+ getLinkShortText(MindMapNode): String\
 \l*+ getMode(): Mode \l+ selectBranch(NodeView,boolean): void \l*+ isBlocked(): boolean \l loadURL(String): void \l*+ getPopupMenu\
(): JPopupMenu \l*+ setFolded(MindMapNode,boolean): void \l*+ refreshMap(): void}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="4845.1,9651.2", rects="4642.6,10203,5047.6,10226 4642.6,10180,5047.6,10203 4642.6,9076.7,5047.6,10180", width="5.625", height="15.972"];
				freemind_modes_ModeController_NodeLifetimeListener [label="{+ NodeLifetimeListener|*+ onPostDeleteNode(MindMapNode,MindMapNode): void \l*+ onPreDeleteNode(MindMapNode): void \l*+ onCreateNodeHook\
(MindMapNode): void}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="5282.1,9620.2", rects="5102.6,9635.2,5461.6,9658.2 5102.6,9582.2,5461.6,9635.2", width="4.9861", height="1.0694"];
				freemind_modes_ModeController_NodeSelectionListener [label="{+ NodeSelectionListener|*+ onSaveNode(MindMapNode): void \l*+ onUpdateNodeHook(MindMapNode): void \l*+ onLostFocusNode(NodeView\
): void \l*+ onFocusNode(NodeView): void \l*+ onSelectionChange(NodeView,boolean): void}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="5248.1,9451.2", rects="5103.1,9481.2,5393.1,9504.2 5103.1,9398.2,5393.1,9481.2", width="4.0278", height="1.4861"];
			}
			subgraph cluster_freemind_modes_ControllerAdapter {
				graph [label="*+ ControllerAdapter",
					levelType="3_FAMIX.Class",
					bb="7855.4,9067.9,9007.4,10917"];
				freemind_modes_ControllerAdapter [label="{ControllerAdapter|- mView : MapView\l- mNodeLifetimeListeners : HashSet\l- mode : Mode\l- mNodeSelectionListeners : HashSet\l# \
popupListenerSingleton : ControllerPopupMenuListener\l- mModel : MapAdapter\l- selectionColor : Color\l- isBlocked : boolean\l- \
lastCurrentDir : File\l- logger : Logger\l|+ invokeHooksRecursively(NodeAdapter,MindMap): void \l+ saveAs(): boolean \l+ getFileChooser\
(FileFilter): FreeMindFileDialog \l+ _setFolded(MindMapNode,boolean): void \l+ selectBranch(NodeView,boolean): void \l+ getNodeView\
(MindMapNode): NodeView \l+ setToolTip(MindMapNode,String,String): void \l+ loadURL(String): void \l+ ControllerAdapter\
(Mode) \l+ handleLoadingException(Exception): void \l+ copy(MindMapNode,boolean): Transferable \l+ getModeToolBar(): JToolBar \l+\
 getSelectedsByDepth(): List \l# getFileFilter(): FileFilter \l+ insertNodeInto(MindMapNode,MindMapNode): void \l+ onFocusNode\
(NodeView): void \l+ loadURL(): void \l# updateNode(MindMapNode): void \l+ firePreSaveEvent(MindMapNode): void \l# add(JMenu,Action\
,String): JMenuItem \l+ getPopupForModel(Object): JPopupMenu \l+ getRootNode(): MindMapNode \l+ getLinkShortText(MindMapNode)\
: String \l+ deregisterNodeSelectionListener(NodeSelectionListener): void \l+ fireNodePreDeleteEvent(MindMapNode): void \l+ setChosenDirectory\
(File): void \l*+ newNode(Object,MindMap): MindMapNode \l+ setModel(MapAdapter): void \l+ getAttributeController()\
: AttributeController \l+ refreshMapFrom(MindMapNode): void \l+ getFrame(): FreeMindMain \l+ getNodeID(MindMapNode): String \l+ \
load(File): ModeController \l+ setVisible(boolean): void \l+ updatePopupMenu(StructuredMenuHolder): void \l+ processUnfinishedLinksInHooks\
(NodeAdapter): void \l+ newMap(): MindMap \l+ nodeChanged(MindMapNode): void \l+ getMap(): MindMap \l- getMapsParentFile\
(): File \l+ getSelected(): MindMapNode \l+ load(URL): ModeController \l- nodeRefresh(MindMapNode,boolean): void \l+ nodeStructureChanged\
(MindMapNode): void \l+ centerNode(MindMapNode): void \l+ copy(): Transferable \l+ getMode(): Mode \l+ close(boolean,\
MapModuleManager): boolean \l+ startupController(): void \l+ select(MindMapNode,List): void \l+ open(): void \l+ save(): boolean\
 \l+ getRegisteredMouseWheelEventHandler(): Set \l+ getFileChooser(): FreeMindFileDialog \l+ newMap(MindMap): void \l# add(JMenu\
,Action): void \l+ createNodeTreeFromXml(Reader,HashMap): MindMapNode \l+ getText(String): String \l+ deregisterNodeLifetimeListener\
(NodeLifetimeListener): void \l# setMode(Mode): void \l+ newModel(ModeController): MapAdapter \l+ setBlocked(boolean): void \
\l+ fireNodePostDeleteEvent(MindMapNode,MindMapNode): void \l+ registerNodeSelectionListener(NodeSelectionListener,boolean): void\
 \l# updateMapModuleName(): void \l+ getResource(String): URL \l+ isBlocked(): boolean \l+ displayNode(MindMapNode): void \l+ onViewRemovedHook\
(NodeView): void \l+ fireRecursiveNodeCreateEvent(MindMapNode): void \l+ setView(MapView): void \l &lt;Initializer\
&gt;() \l+ copySingle(): Transferable \l+ getSelectionColor(): Color \l+ copy(List,boolean): Transferable \l# addCheckBox(StructuredMenuHolder\
,String,Action,String): JMenuItem \l+ displayNode(MindMapNode,ArrayList): void \l+ registerNodeLifetimeListener(\
NodeLifetimeListener,boolean): void \l+ getNodeFromID(String): NodeAdapter \l+ sortNodesByDepth(List): void \l+ insertNodeInto(MindMapNode\
,MindMapNode,int): void \l# add(StructuredMenuHolder,String,Action,String): JMenuItem \l# addRadioItem(StructuredMenuHolder\
,String,Action,String,boolean): JMenuItem \l+ onLostFocusNode(NodeView): void \l+ refreshMap(): void \l+ getModel(): MapAdapter\
 \l+ getView(): MapView \l+ changeSelection(NodeView,boolean): void \l+ createForNodeIdsFlavor(List,boolean): List \l+ getMapModule\
(): MapModule \l+ getModeController(): ControllerAdapter \l+ onViewCreatedHook(NodeView): void \l+ getSelectedView(): NodeView\
 \l+ createForNodesFlavor(List,boolean): String \l+ getController(): Controller \l+ showPopupMenu(MouseEvent): void \l+ shutdownController\
(): void \l*+ createXMLElement(): XMLElement \l# setAllActions(boolean): void \l+ save(File): boolean \l+ getNodeLifetimeListeners\
(): HashSet \l+ nodeRefresh(MindMapNode): void \l+ getSelecteds(): List \l- centerNode(NodeView): void \l- getFileNameProposal\
(): String \l+ getLeftToolBar(): Component \l+ select(NodeView): void \l# restoreMapsLastState(ModeController,MapAdapter\
): void}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="8336.6,9981.2", rects="8097.1,10863,8576.1,10886 8097.1,10705,8576.1,10863 8097.1,9076.7,8576.1,10705", width="6.6528", height="25.139"];
				freemind_modes_ControllerAdapter_SaveAction [label="{+ SaveAction| mc : ControllerAdapter\l|+ actionPerformed(ActionEvent): void \l+ SaveAction(ControllerAdapter)}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="8838.6,10405", rects="8721.1,10424,8956.1,10447 8721.1,10401,8956.1,10424 8721.1,10363,8956.1,10401", width="3.2639", height="1.1806"];
				freemind_modes_ControllerAdapter_OpenAction [label="{+ OpenAction| mc : ControllerAdapter\l|+ actionPerformed(ActionEvent): void \l+ OpenAction(ControllerAdapter)}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="8760.6,10249", rects="8643.1,10268,8878.1,10291 8643.1,10245,8878.1,10268 8643.1,10207,8878.1,10245", width="3.2639", height="1.1806"];
				freemind_modes_ControllerAdapter_SaveAsAction [label="{+ SaveAsAction| mc : ControllerAdapter\l|+ actionPerformed(ActionEvent): void \l+ SaveAsAction(ControllerAdapter)}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="8760.6,10093", rects="8643.1,10112,8878.1,10135 8643.1,10089,8878.1,10112 8643.1,10051,8878.1,10089", width="3.2639", height="1.1806"];
				freemind_modes_ControllerAdapter_FileOpener [label="{# FileOpener|- isDragAcceptable(DropTargetDragEvent): boolean \l+ dropActionChanged(DropTargetDragEvent): void \l+ dragEnter(DropTargetDragEvent\
): void \l+ dragExit(DropTargetEvent): void \l- isDropAcceptable(DropTargetDropEvent): boolean \l+ dragScroll(DropTargetDragEvent\
): void \l# FileOpener() \l+ drop(DropTargetDropEvent): void \l+ dragOver(DropTargetDragEvent): void}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="8801.6,9744.2", rects="8643.6,9804.2,8959.6,9827.2 8643.6,9661.2,8959.6,9804.2", width="4.3889", height="2.3194"];
				freemind_modes_ControllerAdapter_nodesDepthComparator [label="{# nodesDepthComparator|+ nodesDepthComparator() \l+ compare(Object,Object): int}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="7955.6,10472", rects="7863.1,10480,8048.1,10503 7863.1,10442,8048.1,10480", width="2.5694", height="0.86111"];
				freemind_modes_ControllerAdapter_ControllerPopupMenuListener [label="{- ControllerPopupMenuListener|- ControllerPopupMenuListener() \l+ popupMenuWillBecomeInvisible(PopupMenuEvent): void \l+ popupMenuWillBecomeVisible\
(PopupMenuEvent): void \l+ popupMenuCanceled(PopupMenuEvent): void}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="8821.6,9941.2", rects="8643.6,9963.7,8999.6,9986.7 8643.6,9895.7,8999.6,9963.7", width="4.9444", height="1.2778"];
				freemind_modes_ControllerAdapter_EditAttributesAction [label="{# EditAttributesAction|+ actionPerformed(ActionEvent): void \l+ EditAttributesAction()}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="8760.6,9575.2", rects="8643.1,9582.7,8878.1,9605.7 8643.1,9544.7,8878.1,9582.7", width="3.2639", height="0.86111"];
			}
			subgraph cluster_freemind_modes_EdgeAdapter {
				graph [label="*+ EdgeAdapter",
					levelType="3_FAMIX.Class",
					bb="8274.9,5287.9,8915.9,5846.9"];
				freemind_modes_EdgeAdapter [label="{EdgeAdapter|+ EDGESTYLE_SHARP_LINEAR : String\l+ EDGESTYLE_LINEAR : String\l+ INT_EDGESTYLE_BEZIER : int\l+ EDGE_WIDTH_THIN_STRING\
 : String\l+ INT_EDGESTYLE_SHARP_LINEAR : int\l- listener : EdgeAdapterListener\l+ INT_EDGESTYLE_SHARP_BEZIER : int\l+ WIDTH_\
THIN : int\l+ INT_EDGESTYLE_LINEAR : int\l+ EDGESTYLE_BEZIER : String\l+ EDGESTYLE_SHARP_BEZIER : String\l- standardStyle : String\
\l+ WIDTH_PARENT : int\l- standardColor : Color\l|+ save(): XMLElement \l+ getRealWidth(): int \l# setStandardColor(Color): void\
 \l+ getRealColor(): Color \l+ setWidth(int): void \l# setStandardStyle(String): void \l# getStandardColor(): Color \l+ getStyle\
(): String \l+ EdgeAdapter(MindMapNode,FreeMindMain) \l- getSource(): MindMapNode \l+ getWidth(): int \l# getStandardStyle(): \
String \l+ getColor(): Color \l# getStandardStylePropertyString(): String \l+ getStyleAsInt(): int \l &lt;Initializer&gt;() \l+ \
hasStyle(): boolean \l# getStandardColorPropertyString(): String}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="8426.1,5556.2", rects="8283.1,5792.7,8569.1,5815.7 8283.1,5574.7,8569.1,5792.7 8283.1,5296.7,8569.1,5574.7", width="3.9722", height="7.2222"];
				freemind_modes_EdgeAdapter_EdgeAdapterListener [label="{# EdgeAdapterListener|# EdgeAdapterListener() \l+ propertyChanged(String,String,String): void}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="8771.1,5391.2", rects="8634.6,5398.7,8907.6,5421.7 8634.6,5360.7,8907.6,5398.7", width="3.7917", height="0.86111"];
			}
			freemind_modes_MindMapNode [label="{+ MindMapNode|+ STYLE_COMBINED : String\l+ STYLE_BUBBLE : String\l+ NODE_STYLES : String\l+ STYLE_FORK : String\l+ STYLE_AS_PARENT\
 : String\l|*+ getAttributes(): NodeAttributeTableModel \l*+ getListeners(): EventListenerList \l*+ isItalic(): boolean \l*+ \
isLeft(): boolean \l*+ acceptViewVisitor(NodeViewVisitor): void \l*+ isDescendantOfOrEqual(MindMapNode): boolean \l &lt;Initializer\
&gt;() \l*+ removeAllHooks(): void \l*+ getChildren(): List \l hasVisibleChilds(): boolean \l*+ setStateIcon(String,ImageIcon\
): void \l*+ isNewChildLeft(): boolean \l getPath(): TreePath \l getXmlText(): String \l*+ setFont(Font): void \l*+ setBackgroundColor\
(Color): void \l*+ getFontFamilyName(): String \l getAttribute(int): Attribute \l*+ childrenUnfolded(): ListIterator \l calcShiftY\
(): int \l+ addTreeModelListener(TreeModelListener): void \l*+ setFolded(boolean): void \l getAttributePosition(String):\
 int \l*+ getFont(): Font \l setHistoryInformation(HistoryInformation): void \l*+ hasChildren(): boolean \l*+ getStyle(): String\
 \l*+ shallowCopy(): MindMapNode \l*+ addHook(PermanentNodeHook): PermanentNodeHook \l*+ getFontSize(): String \l*+ createAttributeTableModel\
(): void \l sortedChildrenUnfolded(): ListIterator \l*+ getIcons(): List \l*+ getHistoryInformation(): HistoryInformation\
 \l setXmlText(String): void \l*+ removeViewer(NodeView): void \l*+ getViewers(): Collection \l*+ getXmlNoteText(): String\
 \l*+ getNodeLevel(): int \l*+ setFontSize(int): void \l*+ getAttributeKeyList(): List \l+ removeTreeModelListener(TreeModelListener\
): void \l setXmlNoteText(String): void \l*+ getStateIcons(): Map \l*+ isVisible(): boolean \l*+ invokeHook(NodeHook): void \
\l*+ getLink(): String \l*+ toString(): String \l*+ getHGap(): int \l*+ getPlainTextContent(): String \l*+ addIcon(MindIcon,int)\
: void \l getAttributeTableLength(): int \l*+ getColor(): Color \l*+ getParentNode(): MindMapNode \l*+ getEdge(): MindMapEdge \l\
*+ getFilterInfo(): FilterInfo \l*+ removeHook(PermanentNodeHook): void \l*+ isRoot(): boolean \l getToolTip(): SortedMap \l*+ removeIcon\
(int): int \l*+ setLeft(boolean): void \l setAdditionalInfo(String): void \l*+ getActivatedHooks(): Collection \l*+ getCloud\
(): MindMapCloud \l*+ getChildPosition(MindMapNode): int \l hasExactlyOneVisibleChild(): boolean \l+ getAdditionalInfo(): String\
 \l*+ isWriteable(): boolean \l*+ getShiftY(): int \l setAttribute(int,Attribute): void \l*+ isBold(): boolean \l setText(String\
): void \l*+ setShiftY(int): void \l*+ getBackgroundColor(): Color \l*+ setToolTip(String,String): void \l*+ getNoteText():\
 String \l*+ isUnderlined(): boolean \l*+ setLink(String): void \l*+ getText(): String \l*+ getObjectId(ModeController): String \
\l*+ setCloud(MindMapCloud): void \l*+ setStyle(String): void \l*+ isFolded(): boolean \l*+ setColor(Color): void \l*+ getVGap()\
: int \l*+ childrenFolded(): ListIterator \l*+ hasStyle(): boolean \l*+ getShortText(ModeController): String \l*+ getMap(): MindMap\
 \l hasFoldedParents(): boolean \l*+ setNoteText(String): void \l*+ save(Writer,MindMapLinkRegistry,boolean,boolean): XMLElement\
 \l addViewer(NodeView): void \l*+ setVGap(int): void \l getHooks(): List \l*+ setHGap(int): void \l getAttribute(String): String\
 \l*+ isDescendantOf(MindMapNode): boolean}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="5822.4,9860.4", rects="5614.9,10629,6029.9,10652 5614.9,10546,6029.9,10629 5614.9,9068.4,6029.9,10546", width="5.7639", height="22.014"];
			freemind_modes_MindMapLink [label="{+ MindMapLink| getTarget(): MindMapNode \l getReferenceText(): String \l getSource(): MindMapNode \l getDestinationLabel(): String\
 \l getUniqueId(): String}", levelType="3_FAMIX.Class", hasData=false, hasMethods=true, pos="2906.4,1561.4", rects="2815.4,1591.4,2997.4,1614.4 2815.4,1508.4,2997.4,1591.4", width="2.5278", height="1.4861"];
			freemind_modes_ModesCreator [label="{+ ModesCreator|- modesTranslation : Map\l- logger : Logger\l- c : Controller\l- mCreatedModes : Map\l|+ getAllModes(): Set \l+ \
getMode(String): Mode \l+ ModesCreator(Controller)}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="382.43,2700.4", rects="294.93,2749.4,469.93,2772.4 294.93,2681.4,469.93,2749.4 294.93,2628.4,469.93,2681.4", width="2.4306", height="2.0139"];
			freemind_modes_MindMapArrowLink [label="{+ MindMapArrowLink|+ setEndInclination(Point): void \l+ getShowControlPointsFlag(): boolean \l+ setStartInclination(Point): void\
 \l+ getEndInclination(): Point \l+ changeInclination(MapView,int,int,int,int): void \l+ getEndArrow(): String \l+ save(): XMLElement\
 \l+ showControlPoints(boolean): void \l+ getStartInclination(): Point \l+ getStartArrow(): String}", levelType="3_FAMIX.Class", hasData=false, hasMethods=true, pos="301.43,3559.4", rects="154.93,3626.9,447.93,3649.9 154.93,3468.9,447.93,3626.9", width="4.0694", height="2.5278"];
			freemind_modes_LineAdapter [label="{*+ LineAdapter|# NORMAL_WIDTH : int\l# style : String\l# color : Color\l# width : int\l# target : MindMapNode\l# frame : FreeMindMain\
\l+ DEFAULT_WIDTH : int\l|*# setStandardColor(Color): void \l*# getStandardStylePropertyString(): String \l+ getStyle(): String\
 \l+ clone(): Object \l*# setStandardStyle(String): void \l &lt;Initializer&gt;() \l# updateStandards(): void \l+ getRealWidth\
(): int \l+ LineAdapter(MindMapNode,FreeMindMain) \l+ toString(): String \l+ getWidth(): int \l+ setColor(Color): void \l+ setStyle\
(String): void \l+ setTarget(MindMapNode): void \l+ getTarget(): MindMapNode \l+ getFrame(): FreeMindMain \l+ getColor(): \
Color \l*# getStandardColorPropertyString(): String \l+ setWidth(int): void \l*# getStandardStyle(): String \l*# getStandardColor\
(): Color}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="295.43,4118.4", rects="154.93,4324.9,435.93,4347.9 154.93,4211.9,435.93,4324.9 154.93,3888.9,435.93,4211.9", width="3.9028", height="6.3889"];
			freemind_modes_StylePatternFactory [label="{+ StylePatternFactory|+ TRUE_VALUE : String\l- PATTERNS_DUMMY : String\l- PATTERN_DUMMY : String\l+ FALSE_VALUE : String\l|+ getPatternsFromString\
(String): UNKNOWN \l- addSeparatorIfNecessary(String): String \l- addSubPatternToString(TextTranslator,String\
,PatternPropertyBase,String): String \l- processPatternProperties(PatternPropertyBase,PatternPropertyBase,PatternPropertyBase): \
UNKNOWN \l getPatternsFromString(?) \l+ createPatternFromSelected(MindMapNode,List): UNKNOWN \l+ savePatterns(Writer,List): void\
 \l &lt;Initializer&gt;() \l createPatternFromSelected(?,?) \l getPatternFromString(?) \l+ loadPatterns(File): List \l createPatternFromNode\
(?) \l+ toString(Pattern,TextTranslator): String \l+ createPatternFromNode(MindMapNode): UNKNOWN \l+ intersectPattern\
(Pattern,Pattern): UNKNOWN \l+ loadPatterns(Reader): List \l toString(?,?) \l+ getPatternFromString(String): UNKNOWN}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="319.43,1413.4", rects="14.935,1574.9,623.93,1597.9 14.935,1506.9,623.93,1574.9 14.935,1228.9,623.93,1506.9", width="8.4583", height="5.1389"];
			freemind_modes_FreeMindJFileDialog [label="{+ FreeMindJFileDialog|- mDirectoryResultListener : DirectoryResultListener\l|+ addChoosableFileFilterAsDefault(FileFilter): void\
 \l# callDirectoryListener(int): void \l+ registerDirectoryResultListener(DirectoryResultListener): void \l &lt;Initializer&gt;\
() \l+ showOpenDialog(Component): int \l+ showSaveDialog(Component): int \l+ FreeMindJFileDialog()}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="343.43,6628.4", rects="154.93,6684.9,531.93,6707.9 154.93,6661.9,531.93,6684.9 154.93,6548.9,531.93,6661.9", width="5.2361", height="2.2222"];
			freemind_modes_MindIcon [label="{+ MindIcon|- UNKNOWN : int\l- iconNotFound : ImageIcon\l- number : int\l- description : String\l+ PROPERTY_STRING_ICONS_LIST : \
String\l+ LAST : int\l- createdIcons : HashMap\l- associatedIcon : ImageIcon\l nextNumber : int\l- component : JComponent\l- mAllIconNames\
 : Vector\l- name : String\l|+ getIconBaseFileName(): String \l+ getIconsPath(): String \l+ setName(String): void \l getIcon\
() \l+ getKeyStroke(): KeyStroke \l# setIcon(ImageIcon): void \l+ factory(String): MindIcon \l- MindIcon(String) \l- MindIcon\
(String,ImageIcon) \l+ getName(): String \l+ getAllIconNames(): Vector \l+ factory(String,ImageIcon): MindIcon \l+ getIcon():\
 ImageIcon \l+ getKeystrokeResourceName(): String \l+ compareTo(Object): int \l+ toString(): String \l- getNumber(): int \l &lt;\
Initializer&gt;() \l+ getIconFileName(): String \l+ getDescription(): String \l+ getRendererComponent(): JComponent}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="301.43,4855.4", rects="154.93,5099.4,447.93,5122.4 154.93,4911.4,447.93,5099.4 154.93,4588.4,447.93,4911.4", width="4.0694", height="7.4306"];
			freemind_modes_MindMapCloud [label="{+ MindMapCloud|+ changeIterativeLevel(int): void \l+ save(): XMLElement \l+ getExteriorColor(): Color \l*+ getIterativeLevel():\
 int}", levelType="3_FAMIX.Class", hasData=false, hasMethods=true, pos="3335.4,1554.4", rects="3235.4,1576.9,3435.4,1599.9 3235.4,1508.9,3435.4,1576.9", width="2.7778", height="1.2778"];
			freemind_modes_MapRegistry [label="{+ MapRegistry|- modeController : ModeController\l- mapIcons : SortedMapListModel\l- map : MindMap\l- attributes : AttributeRegistry\
\l|+ registryNodeIcons(MindMapNode): void \l+ MapRegistry(MindMap,ModeController) \l+ registrySubtree(MindMapNode,boolean): \
void \l+ save(Writer): void \l+ getIcons(): SortedMapListModel \l- registryAttributes(MindMapNode): void \l+ getModeController()\
: ModeController \l+ getAttributes(): AttributeRegistry \l+ getMap(): MindMap \l+ addIcon(MindIcon): void}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="300.43,7513.4", rects="155.43,7614.9,445.43,7637.9 155.43,7546.9,445.43,7614.9 155.43,7388.9,445.43,7546.9", width="4.0278", height="3.4722"];
			freemind_modes_MindMapLine [label="{+ MindMapLine|+ getRealWidth(): int \l*+ getColor(): Color \l+ setTarget(MindMapNode): void \l+ clone(): Object \l*+ getStyle()\
: String \l+ toString(): String \l*+ getWidth(): int}", levelType="3_FAMIX.Class", hasData=false, hasMethods=true, pos="400.43,2276.4", rects="295.43,2321.4,505.43,2344.4 295.43,2208.4,505.43,2321.4", width="2.9167", height="1.9028"];
			freemind_modes_NodeDownAction [label="{+ NodeDownAction|- modeController : MindMapController\l|+ actionPerformed(ActionEvent): void \l+ NodeDownAction(MindMapController\
)}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="1680.4,1550.4", rects="1554.9,1569.4,1805.9,1592.4 1554.9,1546.4,1805.9,1569.4 1554.9,1508.4,1805.9,1546.4", width="3.4861", height="1.1806"];
			freemind_modes_HistoryInformation [label="{+ HistoryInformation| createdAt : long\l lastModifiedAt : long\l|+ HistoryInformation() \l+ getCreatedAt(): Date \l+ getLastModifiedAt\
(): Date \l+ setLastModifiedAt(Date): void \l+ setCreatedAt(Date): void \l &lt;Initializer&gt;() \l+ HistoryInformation(Date\
,Date)}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="396.43,3135.4", rects="294.93,3199.4,497.93,3222.4 294.93,3161.4,497.93,3199.4 294.93,3048.4,497.93,3161.4", width="2.8194", height="2.4306"];
			freemind_modes_StylePattern [label="{+ StylePattern|- text : String\l- nodeIcon : MindIcon\l- nodeFontFamily : String\l- name : String\l- recursive : boolean\l- mChildrenStylePattern\
 : StylePattern\l- nodeColor : Color\l- nodeFontItalic : Boolean\l- nodeFontSize : Integer\l- nodeFontBold : Boolean\
\l- edgeStyle : String\l- nodeBackgroundColor : Color\l- edgeWidth : Integer\l- nodeStyle : String\l- edgeColor : Color\l|\
+ setEdgeColor(Color): void \l+ setNodeBackgroundColor(Color): void \l+ getName(): String \l+ getChildrenStylePattern(): StylePattern\
 \l+ getNodeFontBold(): Boolean \l+ setChildrenStylePattern(StylePattern): void \l+ getEdgeColor(): Color \l+ getNodeStyle(\
): String \l+ getNodeFontFamily(): String \l+ StylePattern(MindMapNode) \l+ StylePattern(XMLElement,List) \l+ getAppliesToNodeIcon\
(): boolean \l+ getAppliesToNodeFont(): boolean \l+ getAppliesToNode(): boolean \l+ getNodeFontSize(): Integer \l+ getRecursive\
(): boolean \l &lt;Initializer&gt;() \l+ getNodeColor(): Color \l+ getEdgeWidth(): Integer \l+ loadPatterns(Reader): List \l+ getEdgeStyle\
(): String \l+ loadPatterns(File): List \l+ setEdgeStyle(String): void \l+ setNodeFontBold(Boolean): void \l+ StylePattern\
() \l+ setNodeFontItalic(Boolean): void \l+ setNodeFontFamily(String): void \l+ getAppliesToEdge(): boolean \l+ getText(): \
String \l# loadPattern(XMLElement,List): void \l+ setEdgeWidth(Integer): void \l+ getAppliesToChildren(): boolean \l+ setNodeStyle\
(String): void \l+ setText(String): void \l+ setNodeIcon(MindIcon): void \l+ getNodeIcon(): MindIcon \l+ setName(String): void\
 \l+ setRecursive(boolean): void \l+ toString(): String \l+ getNodeFontItalic(): Boolean \l+ getNodeBackgroundColor(): Color \l+\
 setNodeFontSize(Integer): void \l+ setNodeColor(Color): void}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="429.43,5743.4", rects="294.93,6174.9,563.93,6197.9 294.93,5941.9,563.93,6174.9 294.93,5288.9,563.93,5941.9", width="3.7361", height="12.639"];
			freemind_modes_ArrowLinkAdapter [label="{*+ ArrowLinkAdapter|# startArrow : String\l# startInclination : Point\l# endInclination : Point\l# endArrow : String\l# showControlPointsFlag\
 : boolean\l|+ getEndArrow(): String \l+ getStartArrow(): String \l+ clone(): Object \l+ getEndInclination(): Point\
 \l+ showControlPoints(boolean): void \l+ setStartArrow(String): void \l+ setStartInclination(Point): void \l+ getStartInclination\
(): Point \l+ getShowControlPointsFlag(): boolean \l+ setEndInclination(Point): void \l+ setEndArrow(String): void \l+ createArrowLinkTarget\
(MindMapLinkRegistry): ArrowLinkTarget \l# copy(ArrowLinkAdapter): void \l+ ArrowLinkAdapter(MindMapNode,MindMapNode\
,FreeMindMain) \l+ save(): XMLElement}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="358.43,7978.4", rects="154.93,8124.9,561.93,8147.9 154.93,8041.9,561.93,8124.9 154.93,7808.9,561.93,8041.9", width="5.6528", height="4.7222"];
			freemind_modes_IconInformation [label="{+ IconInformation|*+ getIcon(): ImageIcon \l*+ getKeystrokeResourceName(): String \l*+ getDescription(): String \l*+ getKeyStroke\
(): KeyStroke}", levelType="3_FAMIX.Class", hasData=false, hasMethods=true, pos="3778.4,1554.4", rects="3654.9,1576.9,3901.9,1599.9 3654.9,1508.9,3901.9,1576.9", width="3.4306", height="1.2778"];
			freemind_modes_ArrowLinkTarget [label="{+ ArrowLinkTarget|- mSourceLabel : String\l|+ ArrowLinkTarget(MindMapNode,MindMapNode,FreeMindMain) \l+ changeInclination(MapView\
,int,int,int,int): void \l+ save(): XMLElement \l+ getSourceLabel(): String \l+ createArrowLinkAdapter(MindMapLinkRegistry): ArrowLinkAdapter\
 \l+ setSourceLabel(String): void}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="1064.4,1440.4", rects="854.93,1489.4,1273.9,1512.4 854.93,1466.4,1273.9,1489.4 854.93,1368.4,1273.9,1466.4", width="5.8194", height="2.0139"];
			freemind_modes_Mode [label="{*+ Mode|*+ restore(String): void \l*+ getController(): Controller \l*+ toString(): String \l*+ getDefaultModeController(): ModeController\
 \l*+ init(Controller): void \l*+ activate(): void \l*+ createModeController(): ModeController \l+ toLocalizedString()\
: String}", levelType="3_FAMIX.Class", hasData=false, hasMethods=true, pos="300.43,7044.4", rects="155.43,7096.9,445.43,7119.9 155.43,6968.9,445.43,7096.9", width="4.0278", height="2.1111"];
			freemind_modes_XMLElementAdapter [label="{*+ XMLElementAdapter|+ XML_NODE_XHTML_TYPE_NODE : String\l+ XML_NODE_REGISTERED_ATTRIBUTE_VALUE : String\l# logger : Logger\l- \
attributeValueWidth : int\l+ XML_NODE_TEXT : String\l- fontName : String\l- fontStyle : int\l- nodeAttributes : HashMap\l+ XML_NODE\
_CLASS : String\l- fontSize : int\l- attributeName : String\l+ XML_NODE_HISTORY_LAST_MODIFIED_AT : String\l+ XML_NODE_ENCRYPTED\
_CONTENT : String\l# mIdToTarget : HashMap\l+ XML_NODE_REGISTERED_ATTRIBUTE_NAME : String\l+ XML_NODE_XHTML_TYPE_NOTE : String\
\l+ XML_NODE_ATTRIBUTE : String\l+ XML_NODE_ADDITIONAL_INFO : String\l+ XML_NODE_HISTORY_CREATED_AT : String\l+ XML_NODE : String\
\l- mapChild : NodeAdapter\l+ XML_NODE_ATTRIBUTE_REGISTRY : String\l+ XML_NODE_ATTRIBUTE_LAYOUT : String\l- userObject : Object\
\l+ XML_NODE_XHTML_TYPE_TAG : String\l- iconName : String\l- attributeValue : String\l- attributeNameWidth : int\l# mArrowLinkAdapters\
 : Vector\l# frame : FreeMindMain\l# mModeController : ModeController\l| &lt;Initializer&gt;() \l+ setName(String): void \l\
# setUserObject(Object): void \l# copyAttributesToNode(NodeAdapter): void \l+ addChild(XMLElement): void \l+ XMLElementAdapter(\
ModeController) \l- setNodeAttribute(String,String,NodeAdapter): NodeAdapter \l+ getUserObject(): Object \l*# createArrowLinkTarget\
(NodeAdapter,NodeAdapter,FreeMindMain): ArrowLinkTarget \l*# createCloudAdapter(NodeAdapter,FreeMindMain): CloudAdapter \l*# \
createAnotherElement(): XMLElement \l+ processUnfinishedLinks(MindMapLinkRegistry): void \l+ getIDToTarget(): HashMap \l# completeElement\
(): void \l*# createNodeAdapter(FreeMindMain,String): NodeAdapter \l+ setIDToTarget(HashMap): void \l# XMLElementAdapter\
(ModeController,Vector,HashMap) \l*# createArrowLinkAdapter(NodeAdapter,NodeAdapter,FreeMindMain): ArrowLinkAdapter \l*# createEdgeAdapter\
(NodeAdapter,FreeMindMain): EdgeAdapter \l*# createEncryptedNode(String): NodeAdapter \l+ getMapChild(): NodeAdapter \
\l# getMap(): MindMap \l# getFrame(): FreeMindMain \l+ setAttribute(String,Object): void}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="844.43,9500.4", rects="574.93,9909.4,1113.9,9932.4 574.93,9436.4,1113.9,9909.4 574.93,9068.4,1113.9,9436.4", width="7.4861", height="12.014"];
			freemind_modes_NodeViewEvent [label="{+ NodeViewEvent| node : MindMapNode\l|+ NodeViewEvent(MindMapNode)}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="2082.4,1543.4", rects="1975.4,1554.9,2189.4,1577.9 1975.4,1531.9,2189.4,1554.9 1975.4,1508.9,2189.4,1531.9", width="2.9722", height="0.97222"];
			freemind_modes_MindMapEdge [label="{+ MindMapEdge|+ save(): XMLElement \l getStyleAsInt(): int \l hasStyle(): boolean}", levelType="3_FAMIX.Class", hasData=false, hasMethods=true, pos="2468.4,1546.4", rects="2394.9,1561.4,2541.9,1584.4 2394.9,1508.4,2541.9,1561.4", width="2.0417", height="1.0694"];
			freemind_modes_NodeAdapter [label="{*+ NodeAdapter|- ISLEAF : boolean\l- frame : FreeMindMain\l- edge : MindMapEdge\l- hooks : List\l+ LEFT_POSITION : int\l- xmlNoteText\
 : String\l- position : int\l- link : String\l listenerList : EventListenerList\l# logger : Logger\l# cloud : MindMapCloud\
\l+ RIGHT_POSITION : int\l SHIFT : int\l- historyInformation : HistoryInformation\l- noteText : String\l# stateIcons : TreeMap\l\
# icons : Vector\l# style : String\l# font : Font\l# children : List\l- vGap : int\l- parent : MindMapNode\l- EMTPY_ATTRIBUTES :\
 NodeAttributeTableModel\l- preferredChild : MindMapNode\l# folded : boolean\l- activatedHooks : HashSet\l- map : MindMap\l- attributes\
 : NodeAttributeTableModel\l- hGap : int\l- views : Collection\l# backgroundColor : Color\l- filterInfo : FilterInfo\l# color\
 : Color\l- toolTip : TreeMap\l+ HGAP : int\l+ UNKNOWN_POSITION : int\l- sSaveOnlyIntrinsicallyNeededIds : boolean\l# underlined\
 : boolean\l- xmlText : String\l+ VGAP : int\l- shiftY : int\l- ALLOWSCHILDREN : boolean\l# userObject : Object\l- sSaveIdPropertyChangeListener\
 : FreemindPropertyListener\l|+ setUnderlined(boolean): void \l- createHooks(): void \l+ getToolTip(): SortedMap\
 \l+ getAttribute(int): Attribute \l+ setStateIcon(String,ImageIcon): void \l+ setVGap(int): void \l+ getChildPosition(MindMapNode\
): int \l+ getViewers(): Collection \l+ calcShiftY(): int \l+ getFontSize(): String \l+ getParentNode(): MindMapNode \l+ setLeft\
(boolean): void \l+ convertToEncodedContent(String): String \l+ getHistoryInformation(): HistoryInformation \l+ isVisible(\
): boolean \l+ childrenUnfolded(): ListIterator \l+ getAttributeKeyList(): List \l+ isRoot(): boolean \l+ getStyle(): String \l#\
 NodeAdapter(Object,FreeMindMain,MindMap) \l getAttributes() \l+ getAdditionalInfo(): String \l- recursiveCallRemoveChildren(MindMapNode\
,MindMapNode,MindMapNode): void \l+ getXmlNoteText(): String \l &lt;Initializer&gt;() \l+ remove(MutableTreeNode): void \
\l+ hasExactlyOneVisibleChild(): boolean \l+ addTreeModelListener(TreeModelListener): void \l+ setHistoryInformation(HistoryInformation\
): void \l+ toggleItalic(): void \l+ getMap(): MindMap \l+ getPath(): TreePath \l+ getAllowsChildren(): boolean \l+ getListeners\
(): EventListenerList \l+ getAttributeTableLength(): int \l+ getShiftY(): int \l+ getBackgroundColor(): Color \l+ insert(\
MutableTreeNode,int): void \l+ getFont(): Font \l+ getStateIcons(): Map \l+ setAttribute(int,Attribute): void \l+ getParent(): TreeNode\
 \l+ getFilterInfo(): FilterInfo \l+ getChildren(): List \l- saveChildren(Writer,MindMapLinkRegistry,NodeAdapter,boolean)\
: void \l+ removeFromParent(): void \l+ setXmlText(String): void \l+ isLeft(): boolean \l+ toggleBold(): void \l+ addIcon(MindIcon\
,int): void \l+ hasStyle(): boolean \l+ isDescendantOf(MindMapNode): boolean \l+ setUserObject(Object): void \l+ getXmlText():\
 String \l+ getHooks(): List \l+ removeTreeModelListener(TreeModelListener): void \l+ getChildCount(): int \l+ remove(int): void\
 \l+ getPlainTextContent(): String \l+ setStyle(String): void \l+ save(Writer,MindMapLinkRegistry,boolean,boolean): XMLElement \l+\
 isUnderlined(): boolean \l+ isBold(): boolean \l+ toString(): String \l+ getHGap(): int \l+ setColor(Color): void \l+ isFolded\
(): boolean \l+ establishOwnFont(): void \l- addToPathVector(Vector): void \l+ setMap(MindMap): void \l+ setXmlNoteText(String)\
: void \l+ isNewChildLeft(): boolean \l+ shallowCopy(): MindMapNode \l+ setHGap(int): void \l+ setShiftY(int): void \l+ getObjectId\
(ModeController): String \l+ setItalic(boolean): void \l+ setText(String): void \l+ isDescendantOfOrEqual(MindMapNode): boolean\
 \l+ setFont(Font): void \l+ getText(): String \l+ getNodeLevel(): int \l+ setParent(MutableTreeNode): void \l+ hasFoldedParents\
(): boolean \l- createIcons(): void \l+ removeIcon(int): int \l+ invokeHook(NodeHook): void \l+ getFrame(): FreeMindMain \l+ children\
(): Enumeration \l+ hasChildren(): boolean \l+ isItalic(): boolean \l+ setEdge(MindMapEdge): void \l+ getIndex(TreeNode):\
 int \l- recursiveCallAddChildren(MindMapNode,MindMapNode): void \l+ getVGap(): int \l+ getActivatedHooks(): Collection \l+ sortedChildrenUnfolded\
(): ListIterator \l+ setFolded(boolean): void \l+ setFontSize(int): void \l+ setParent(MindMapNode): void \l+ \
getColor(): Color \l+ getCloud(): MindMapCloud \l+ setCloud(MindMapCloud): void \l# NodeAdapter(FreeMindMain,MindMap) \l+ setBackgroundColor\
(Color): void \l+ setBold(boolean): void \l+ childrenFolded(): ListIterator \l+ getEdge(): MindMapEdge \l- createToolTip\
(): void \l+ setLink(String): void \l+ getLink(): String \l+ getAttributes(): NodeAttributeTableModel \l+ setNoteText(String\
): void \l- createActivatedHooks(): void \l+ hasFoldedStrictDescendant(): boolean \l+ acceptViewVisitor(NodeViewVisitor): void \l+\
 getModeController(): ModeController \l+ removeAllHooks(): void \l- createStateIcons(): void \l+ getAttributePosition(String):\
 int \l- changeChildCloudIterativeLevels(int): void \l+ getChildAt(int): TreeNode \l+ addHook(PermanentNodeHook): PermanentNodeHook\
 \l+ getIcons(): List \l+ createAttributeTableModel(): void \l+ setToolTip(String,String): void \l+ addViewer(NodeView): void\
 \l+ removeViewer(NodeView): void \l+ setAdditionalInfo(String): void \l+ getAttribute(String): String \l+ getFontFamilyName(): \
String \l+ removeHook(PermanentNodeHook): void \l+ hasVisibleChilds(): boolean \l+ isLeaf(): boolean \l+ getNoteText(): String \l+\
 getShortText(ModeController): String}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="7824.4,5818.4", rects="7574.9,7164.9,8073.9,7187.9 7574.9,6496.9,8073.9,7164.9 7574.9,4448.9,8073.9,6496.9", width="6.9306", height="38.056"];
			freemind_modes_NodeViewEventListener [label="{+ NodeViewEventListener|+ nodeViewRemoved(NodeViewEvent): void \l+ nodeViewCreated(NodeViewEvent): void}", levelType="3_FAMIX.Class", hasData=false, hasMethods=true, pos="432.43,1959.4", rects="295.43,1966.9,569.43,1989.9 295.43,1928.9,569.43,1966.9", width="3.8056", height="0.86111"];
		}
		subgraph cluster_freemind_main {
			graph [label=main,
				levelType="2_FAMIX.Namespace",
				bb="10728,11800,14280,15300"];
			subgraph cluster_freemind_main_StdFormatter {
				graph [label=" StdFormatter",
					levelType="3_FAMIX.Class",
					bb="12277,11808,12651,12048"];
				freemind_main_StdFormatter [label="{StdFormatter| STDERR : Level\l STDOUT : Level\l- lineSeparator : String\l| &lt;Initializer&gt;() \l StdFormatter() \l+ format(LogRecord\
): String}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="12374,11882", rects="12285,11923,12464,11946 12285,11870,12464,11923 12285,11817,12464,11870", width="2.4861", height="1.8056"];
				freemind_main_StdFormatter_StdOutErrLevel [label="{- StdOutErrLevel|+ StdOutErrLevel(String,int)}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="12555,11994", rects="12467,11994,12643,12017 12467,11971,12643,11994", width="2.4444", height="0.65278"];
			}
			subgraph cluster_freemind_main_XHTMLWriter {
				graph [label="+ XHTMLWriter",
					levelType="3_FAMIX.Class",
					bb="13750,14756,14231,15177"];
				freemind_main_XHTMLWriter [label="{XHTMLWriter|- writeLineSeparatorEnabled : boolean\l|+ XHTMLWriter(Writer,HTMLDocument,int,int) \l# writeOption(Option): void \l\
# writeLineSeparator(): void \l+ XHTMLWriter(Writer,HTMLDocument) \l+ write(): void \l &lt;Initializer&gt;() \l+ main(String[]):\
 void \l+ html2xhtml(Reader,Writer): void}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="13907,14851", rects="13759,14915,14055,14938 13759,14892,14055,14915 13759,14764,14055,14892", width="4.1111", height="2.4306"];
				freemind_main_XHTMLWriter_XHTMLFilterWriter [label="{+ XHTMLFilterWriter|- insideValue : boolean\l- readTag : boolean\l- insideTag : boolean\l- tag : String\l| &lt;Initializer&gt;(\
) \l+ write(char[],int,int): void \l+ write(String,int,int): void \l+ XHTMLFilterWriter(Writer) \l+ write(int): void}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="14129,15058", rects="14034,15122,14223,15145 14034,15054,14223,15122 14034,14971,14223,15054", width="2.625", height="2.4306"];
			}
			subgraph cluster_freemind_main_FreeMindMain {
				graph [label="+ FreeMindMain",
					levelType="3_FAMIX.Class",
					bb="11070,12411,11711,13210"];
				freemind_main_FreeMindMain [label="{FreeMindMain|+ ENABLE_NODE_MOVEMENT : String\l+ VERSION_TYPE_ALPHA : int\l+ VERSION_TYPE_RELEASE : int\l+ VERSION_TYPE_RC : int\
\l+ VERSION_TYPE_BETA : int\l|*+ getFreemindDirectory(): String \l*+ getWinWidth(): int \l+ getResources(): ResourceBundle \l*+ \
getPatternsFile(): File \l*+ out(String): void \l*+ saveProperties(boolean): void \l*+ setProperty(String,String): void \l*+ insertComponentIntoSplitPane\
(JComponent): JSplitPane \l*+ getResource(String): URL \l*+ repaint(): void \l*+ getContentComponent():\
 JComponent \l*+ getController(): Controller \l+ getProperties(): Properties \l*+ getWinState(): int \l*+ getLogger(String): Logger\
 \l*+ getContentPane(): Container \l*+ setDefaultProperty(String,String): void \l+ getLayeredPane(): JLayeredPane \l*+ getAdjustableProperty\
(String): String \l*+ getWinX(): int \l*+ getWinY(): int \l*+ removeSplitPane(): void \l*+ getFreeMindMenuBar(): \
MenuBar \l*+ getIntProperty(String,int): int \l+ getView(): MapView \l*+ setWaitingCursor(boolean): void \l+ err(String): void \l\
*+ setView(MapView): void \l*+ isApplet(): boolean \l &lt;Initializer&gt;() \l*+ getLoggerList(): List \l*+ getProperty(String)\
: String \l*+ getFreeMindClassLoader(): ClassLoader \l*+ getScrollPane(): JScrollPane \l*+ setTitle(String): void \l*+ openDocument\
(URL): void \l*+ getFreemindVersion(): VersionInformation \l*+ registerStartupDoneListener(StartupDoneListener): void \l*+ getJFrame\
(): JFrame \l*+ getFreemindBaseDir(): String \l+ getResourceString(String,String): String \l*+ getResourceString(String):\
 String \l*+ getWinHeight(): int}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="11256,12799", rects="11078,13156,11433,13179 11078,13073,11433,13156 11078,12420,11433,13073", width="4.9306", height="10.556"];
				freemind_main_FreeMindMain_VersionInformation [label="{+ VersionInformation|+ mType : int\l+ mNum : int\l+ mMin : int\l+ mMaj : int\l+ mMid : int\l|+ VersionInformation(String) \l &lt\
;Initializer&gt;() \l+ toString(): String \l+ VersionInformation(int,int,int,int,int)}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="11589,12686", rects="11474,12750,11703,12773 11474,12667,11703,12750 11474,12599,11703,12667", width="3.1806", height="2.4306"];
				freemind_main_FreeMindMain_StartupDoneListener [label="{+ StartupDoneListener|*+ startupDone(): void}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="11547,12838", rects="11475,12838,11619,12861 11475,12815,11619,12838", width=2, height="0.65278"];
			}
			subgraph cluster_freemind_main_LogFileLogHandler {
				graph [label="+ LogFileLogHandler",
					levelType="3_FAMIX.Class",
					bb="12812,14756,13245,15040"];
				freemind_main_LogFileLogHandler [label="{LogFileLogHandler|- mLogReceiver : LogReceiver\l| &lt;Initializer&gt;() \l+ LogFileLogHandler() \l+ close(): void \l+ publish(LogRecord\
): void \l+ LogFileLogHandler(LogReceiver) \l+ getLogReceiver(): LogReceiver \l+ flush(): void \l+ setLogReceiver(LogReceiver\
): void}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="12934,14852", rects="12820,14916,13047,14939 12820,14893,13047,14916 12820,14765,13047,14893", width="3.1528", height="2.4306"];
				freemind_main_LogFileLogHandler_LogReceiver [label="{+ LogReceiver| receiveLog(LogRecord): void}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="13146,14986", rects="13054,14986,13237,15009 13054,14963,13237,14986", width="2.5417", height="0.65278"];
			}
			subgraph cluster_freemind_main_Tools {
				graph [label="+ Tools",
					levelType="3_FAMIX.Class",
					bb="12813,12746,14025,14670"];
				freemind_main_Tools [label="{Tools|+ executableExtensions : Set\l+ FREEMIND_LIB_FREEMIND_JAR : String\l+ JAVA_VERSION : String\l+ CONTENTS_JAVA_FREEMIND_JAR\
 : String\l- sEnvFonts : String\l+ ran : Random\l- availableFontFamilyNames : Set\l- logger : Logger\l+ FREE_MIND_APP_CONTENTS_RESOURCES\
_JAVA : String\l|+ urlStringToUrls(String): Vector \l+ xmlToPoint(String): Point \l+ getUpdateReader(Reader,String,FreeMindMain\
): Reader \l+ getHostName(): String \l+ compareText(String,String): String \l+ firstLetterCapitalized(String): String \l+\
 isHeadless(): boolean \l+ getAvailableFontFamilyNames(): Set \l+ swapVectorPositions(Vector,int,int): void \l+ expandPlaceholders\
(String,String): String \l+ deepCopy(XmlAction): UNKNOWN \l+ setPermissions(String,int): void \l+ getPageFormatAsString(Paper)\
: String \l+ getVectorWithSingleElement(Object): Vector \l+ isPreferenceTrue(String): boolean \l+ isLinux(): boolean \l+ generateID\
(String,HashMap,String): String \l+ printXmlAction(XmlAction): String \l+ compress(String): String \l+ isMacOsX(): boolean \l+\
 urlToFile(URL): File \l+ byteArrayToUTF8String(byte[]): String \l+ updateFontSize(Font,float,int): Font \l+ getFile(Reader): String\
 \l+ isAbsolutePath(String): boolean \l+ getAvailableFontFamilyNamesAsVector(): Vector \l+ convertPointToAncestor(Component\
,Point,Component): Point \l+ listToString(List): String \l+ invokeActionsToKeyboardLayoutDependantCharacters(KeyEvent,Action[],Object\
): void \l+ getKeyStroke(String): KeyStroke \l+ replaceUtf8AndIllegalXmlChars(String): String \l+ unMarshall(String): UNKNOWN\
 \l+ getHostIpAsString(): String \l+ xmlToBoolean(String): boolean \l printXmlAction(?) \l+ safeEquals(Color,Color): boolean \l+\
 waitForEventQueue(): void \l marshall(?) \l+ logTransferable(Transferable): void \l+ isAvailableFontFamily(String): boolean \l+\
 convertPointFromAncestor(Component,Point,Component): void \l+ getExtension(File): String \l+ safeEqualsIgnoreCase(String,String\
): boolean \l+ toBase64(byte[]): String \l- setLabelAndMnemonic(NameMnemonicHolder,String): void \l+ expandPlaceholders(String\
,String,String): String \l+ setPageFormatFromString(Paper,String): void \l+ stringToList(String): List \l+ marshall(XmlAction): \
String \l+ getNodeTextHierarchy(MindMapNode,MindMapController): String \l+ addFocusPrintTimer(): void \l+ removeExtension(String\
): String \l+ addKeyActionToDialog(JDialog,Action,String,String): void \l+ isFile(URL): boolean \l+ getField(Object[],String): Object\
 \l+ xmlToDate(String): Date \l+ decompress(String): String \l+ isBelowJava6(): boolean \l+ expandPlaceholders(String,String\
,String,String): String \l+ correctJSplitPaneKeyMap(): void \l+ safeEquals(Object,Object): boolean \l+ arrayToUrls(String[]): String\
 \l+ restoreAntialiasing(Graphics2D,Object): void \l+ uTF8StringToByteArray(String): byte \l+ getReaderFromFile(File): Reader\
 \l+ setLabelAndMnemonic(AbstractButton,String): void \l+ removeMnemonic(String): String \l+ executableByExtension(String): boolean\
 \l+ getActualReader(Reader): Reader \l+ setDialogLocationRelativeTo(JDialog,Component): void \l+ fileToUrl(File): URL \l+ \
isAboveJava4(): boolean \l+ printStackTrace(): void \l+ removeTranslateComment(String): String \l+ getUserName(): String \l+ dateToString\
(Date): String \l+ getURLWithoutReference(URL): URL \l &lt;Initializer&gt;() \l+ copyChangedProperties(Properties,Properties\
): Properties \l+ PointToXml(Point): String \l+ fileToRelativeUrlString(File,File): String \l+ getStackTrace(): String \l+ \
getFileNameProposal(MindMapNode): String \l deepCopy(?) \l+ copyStream(InputStream,OutputStream,boolean): void \l+ BooleanToXml(\
boolean): String \l+ getFileNameFromRestorable(String): String \l+ getModeFromRestorable(String): String \l+ addEscapeActionToDialog\
(JDialog,Action): void \l unMarshall(?) \l+ getPrefix(String): String \l+ convertPointToAncestor(Component,Point,Class): void\
 \l+ getExtension(String): String \l+ getFile(File): String \l+ getClipboard(): Clipboard \l+ safeEquals(BooleanHolder,BooleanHolder\
): boolean \l+ toBase64(String): String \l+ toRelativeURL(URL,URL): String \l+ isUnix(): boolean \l+ setLabelAndMnemonic(Action\
,String): void \l+ colorToXml(Color): String \l+ fromBase64(String): byte \l+ expandFileName(String): String \l+ setHidden(File\
,boolean,boolean): void \l+ addEscapeActionToDialog(JDialog): void \l+ xmlToColor(String): Color \l+ safeEquals(String,String\
): boolean \l+ urlGetFile(URL): String \l+ getFreeMindBasePath(): String \l+ countOccurrences(String,String): int \l- getAvailableFonts\
(): String \l- nt(StringTokenizer): double \l+ invokeAndWait(Runnable): void \l+ isWindows(): boolean}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="13296,13697", rects="13031,14616,13561,14639 13031,14473,13561,14616 13031,12755,13561,14473", width="7.3611", height="26.181"];
				freemind_main_Tools_BooleanHolder [label="{+ BooleanHolder|- value : boolean\l|+ BooleanHolder() \l+ setValue(boolean): void \l+ getValue(): boolean \l+ BooleanHolder(boolean\
)}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="12904,14247", rects="12821,14281,12987,14304 12821,14258,12987,14281 12821,14190,12987,14258", width="2.3056", height="1.5972"];
				freemind_main_Tools_TripleDesEncrypter [label="{+ TripleDesEncrypter|+ TripleDesEncrypter(StringBuffer)}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="13733,13163", rects="13626,13163,13841,13186 13626,13140,13841,13163", width="2.9861", height="0.65278"];
				freemind_main_Tools_DesEncrypter [label="{+ DesEncrypter| ecipher : Cipher\l dcipher : Cipher\l- SALT_PRESENT_INDICATOR : String\l salt : byte\l- passPhrase : char\l- SALT\
_LENGTH : int\l- mAlgorithm : String\l iterationCount : int\l|+ DesEncrypter(StringBuffer,String) \l+ encrypt(String): String \
\l- init(byte[]): void \l &lt;Initializer&gt;() \l+ decrypt(String): String}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="13754,13502", rects="13626,13596,13883,13619 13626,13468,13883,13596 13626,13385,13883,13468", width="3.5694", height="3.2639"];
				freemind_main_Tools_NameMnemonicHolder [label="{ NameMnemonicHolder| setMnemonic(char): void \l getText(): String \l setText(String): void \l setDisplayedMnemonicIndex(int): void\
}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="13744,13291", rects="13626,13313,13862,13336 13626,13245,13862,13313", width="3.2778", height="1.2778"];
				freemind_main_Tools_ObjectHolder [label="{+ ObjectHolder| object : Object\l|+ setObject(Object): void \l+ ObjectHolder() \l+ getObject(): Object}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="12903,13925", rects="12821,13951,12985,13974 12821,13928,12985,13951 12821,13875,12985,13928", width="2.2778", height="1.3889"];
				freemind_main_Tools_ButtonHolder [label="{- ButtonHolder|- btn : AbstractButton\l|+ setDisplayedMnemonicIndex(int): void \l+ ButtonHolder(AbstractButton) \l+ getText(): \
String \l+ setMnemonic(char): void \l+ setText(String): void}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="13750,13905", rects="13626,13946,13874,13969 13626,13923,13874,13946 13626,13840,13874,13923", width="3.4444", height="1.8056"];
				freemind_main_Tools_SingleDesEncrypter [label="{+ SingleDesEncrypter|+ SingleDesEncrypter(StringBuffer)}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="13909,14213", rects="13801,14213,14017,14236 13801,14190,14017,14213", width=3, height="0.65278"];
				freemind_main_Tools_MindMapNodePair [label="{+ MindMapNodePair| second : MindMapNode\l first : MindMapNode\l|+ getCloneNode(): MindMapNode \l+ Tools.MindMapNodePair(MindMapNode\
,MindMapNode) \l+ getCorresponding(): MindMapNode}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="13806,13722", rects="13626,13756,13986,13779 13626,13718,13986,13756 13626,13665,13986,13718", width=5, height="1.5972"];
				freemind_main_Tools_Pair [label="{+ Pair| second : Object\l first : Object\l|+ getFirst(): Object \l+ getSecond(): Object \l+ Pair(Object,Object)}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="12893,14072", rects="12821,14106,12966,14129 12821,14068,12966,14106 12821,14015,12966,14068", width="2.0139", height="1.5972"];
				freemind_main_Tools_IntHolder [label="{+ IntHolder|- value : int\l|+ Tools.IntHolder() \l+ IntHolder(int) \l+ toString(): String \l+ getValue(): int \l+ setValue(int)\
: void}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="12921,13765", rects="12856,13806,12987,13829 12856,13783,12987,13806 12856,13700,12987,13783", width="1.8194", height="1.8056"];
				freemind_main_Tools_ActionHolder [label="{- ActionHolder|- action : Action\l|+ ActionHolder(Action) \l+ setText(String): void \l+ getText(): String \l+ setDisplayedMnemonicIndex\
(int): void \l+ setMnemonic(char): void}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="13750,14080", rects="13626,14121,13874,14144 13626,14098,13874,14121 13626,14015,13874,14098", width="3.4444", height="1.8056"];
			}
			subgraph cluster_freemind_main_HtmlTools {
				graph [label="+ HtmlTools",
					levelType="3_FAMIX.Class",
					bb="12076,14555,12718,15159"];
				freemind_main_HtmlTools [label="{HtmlTools|- TAGS_PATTERN : Pattern\l- FIND_TAGS_PATTERN : Pattern\l+ SP : String\l- SLASHED_TAGS_PATTERN : Pattern\l- sInstance\
 : HtmlTools\l- HTML_PATTERN : Pattern\l+ NBSP : String\l- logger : Logger\l|+ replaceIllegalXmlCharacters(String): String \l+ extractHtmlBody\
(String): String \l+ htmlToPlain(String,boolean): String \l+ getReplaceResult(Pattern,String,String): String \l+ isWellformedXml\
(String): boolean \l+ toXMLEscapedTextExpandingWhitespace(String): String \l+ isHtmlNode(String): boolean \l- append\
(StringBuffer,String,int,int): void \l+ unescapeHTMLUnicodeEntity(String): String \l+ removeAllTagsFromString(String): String \
\l+ plainToHTML(String): String \l+ toHtml(String): String \l &lt;Initializer&gt;() \l+ makeValidXml(String): String \l+ toXMLEscapedText\
(String): String \l+ removeHtmlTagsFromString(String): String \l+ getMinimalOriginalPosition(int,ArrayList): int \l+ isXMLValidCharacter\
(char): boolean \l- HtmlTools() \l+ unicodeToHTMLUnicodeEntity(String,boolean): String \l+ getInstance(): HtmlTools\
 \l+ replaceSpacesToNonbreakableSpaces(String): String \l+ removeInvalidXmlCharacters(String): String \l+ toXhtml(String): String\
 \l+ getMaximalOriginalPosition(int,ArrayList): int \l+ htmlToPlain(String): String \l+ toXMLUnescapedText(String): String}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="12260,14846", rects="12084,15105,12437,15128 12084,14977,12437,15105 12084,14564,12437,14977", width="4.9028", height="7.8472"];
				freemind_main_HtmlTools_IndexPair [label="{+ IndexPair|+ replacedEnd : int\l+ mIsAlreadyAppended : boolean\l+ originalEnd : int\l+ replacedStart : int\l+ mIsTag : boolean\
\l+ originalStart : int\l| &lt;Initializer&gt;() \l+ IndexPair(int,int,int,int,boolean) \l+ toString(): String}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="12606,14727", rects="12502,14791,12710,14814 12502,14693,12710,14791 12502,14640,12710,14693", width="2.8889", height="2.4306"];
			}
			subgraph cluster_freemind_main_FreeMindSplashModern {
				graph [label="+ FreeMindSplashModern",
					levelType="3_FAMIX.Class",
					bb="13750,11808,14271,12302"];
				freemind_main_FreeMindSplashModern [label="{FreeMindSplashModern|- frame : FreeMindMain\l- SPLASH_FONT_SIZE : int\l- logger : Logger\l- mIcon : ImageIcon\l- feedBack : FeedBackImpl\
\l- mProgressBar : JProgressBar\l|+ getWindowIcon(): ImageIcon \l+ getFeedBack(): FeedBack \l+ close(): void \l &lt;Initializer\
&gt;() \l+ FreeMindSplashModern(FreeMindMain)}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="14136,12169", rects="14008,12248,14263,12271 14008,12150,14263,12248 14008,12067,14263,12150", width="3.5417", height="2.8472"];
				freemind_main_FreeMindSplashModern_FeedBackImpl [label="{- FeedBackImpl|- mImageJLabel : JLabel\l- mTotalTime : long\l- lastTaskId : String\l- mActualValue : int\l- mActualTimeStamp : \
long\l|+ progress(int,String,Object[]): void \l+ increase(String,Object[]): void \l+ setImageJLabel(JLabel): void \l+ setMaximumValue\
(int): void \l &lt;Initializer&gt;() \l- FeedBackImpl() \l+ getActualValue(): int}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="13870,11927", rects="13759,12013,13981,12036 13759,11930,13981,12013 13759,11817,13981,11930", width="3.0833", height="3.0556"];
			}
			subgraph cluster_freemind_main_FreeMindCommon {
				graph [label="+ FreeMindCommon",
					levelType="3_FAMIX.Class",
					bb="12812,12076,13615,12635"];
				freemind_main_FreeMindCommon [label="{FreeMindCommon|+ DEFAULT_LANGUAGE : String\l+ RESOURCE_ANTIALIAS : String\l+ FREEMIND_FILE_EXTENSION : String\l+ ON_START_IF_NOT\
_SPECIFIED : String\l- mFreeMindMain : FreeMindMain\l+ LOAD_LAST_MAP : String\l+ LOAD_NEW_MAP : String\l+ CHECK_SPELLING : String\
\l- resources : FreeMindResourceBundle\l+ RESOURCE_LANGUAGE : String\l+ LOAD_EVENT_DURING_STARTUP : String\l+ POSTFIX_TRANSLATE\
_ME : String\l+ LOAD_LAST_MAPS_AND_LAYOUT : String\l+ FREEMIND_FILE_EXTENSION_WITHOUT_DOT : String\l- logger : Logger\l- baseDir\
 : String\l+ LOCAL_PROPERTIES : String\l+ MINDMAP_LAST_STATE_MAP_STORAGE : String\l+ SAVE_ONLY_INTRISICALLY_NEEDED_IDS : String\
\l|+ loadUIProperties(Properties): void \l- setDefaultProperty(String,String): void \l+ FreeMindCommon(FreeMindMain) \l &lt;Initializer\
&gt;() \l+ getFreemindBaseDir(): String \l+ getResourceString(String): String \l+ getFreemindBaseDirOld(): String \l+ getFreeMindClassLoader\
(): ClassLoader \l+ getProperty(String): String \l+ getResourceString(String,String): String \l+ getAdjustableProperty\
(String): String \l+ getResources(): ResourceBundle \l+ clearLanguageResources(): void}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="13008,12344", rects="12820,12581,13195,12604 12820,12288,13195,12581 12820,12085,13195,12288", width="5.2083", height="7.2222"];
				freemind_main_FreeMindCommon_FreeMindResourceBundle [label="{- FreeMindResourceBundle|- defaultResources : PropertyResourceBundle\l- languageResources : PropertyResourceBundle\l|- getLanguageResources\
(String): PropertyResourceBundle \l+ getKeys(): Enumeration \l FreeMindResourceBundle() \l getResourceString(String)\
: String \l getResourceString(String,String): String \l# handleGetObject(String): Object}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="13434,12204", rects="13260,12261,13607,12284 13260,12223,13607,12261 13260,12125,13607,12223", width="4.8194", height="2.2222"];
			}
			subgraph cluster_freemind_main_FreeMindStarter {
				graph [label="+ FreeMindStarter",
					levelType="3_FAMIX.Class",
					bb="10937,11942,11573,12321"];
				freemind_main_FreeMindStarter [label="{FreeMindStarter| JAVA_VERSION : String\l|+ readDefaultPreferences(): Properties \l- checkJavaVersion(): void \l- getUserPreferencesFile\
(Properties): File \l- readUsersPreferences(Properties): Properties \l- createUserDirectory(Properties): void \l- getFreeMindDirectory\
(Properties): String \l+ FreeMindStarter() \l- setDefaultLocale(Properties): void \l &lt;Initializer&gt;() \l+ main\
(String[]): void}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="11085,12052", rects="10945,12131,11225,12154 10945,12108,11225,12131 10945,11950,11225,12108", width="3.8889", height="2.8472"];
				freemind_main_FreeMindStarter_ProxyAuthenticator [label="{+ ProxyAuthenticator|- password : String\l- user : String\l|+ ProxyAuthenticator(String,String) \l# getPasswordAuthentication()\
: PasswordAuthentication}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="11399,12240", rects="11233,12267,11565,12290 11233,12229,11565,12267 11233,12191,11565,12229", width="4.6111", height="1.3889"];
			}
			subgraph cluster_freemind_main_FreeMind {
				graph [label="+ FreeMind",
					levelType="3_FAMIX.Class",
					bb="11807,12143,12708,14427"];
				freemind_main_FreeMind [label="{FreeMind|+ RESOURCES_EDGE_STYLE : String\l- mStartupDone : boolean\l+ RESOURCE_LOOKANDFEEL : String\l+ RESOURCES_SELECTED_NODE_\
COLOR : String\l+ RESOURCES_SEARCH_FOR_NODE_TEXT_WITHOUT_QUESTION : String\l+ RESOURCES_SCRIPT_USER_KEY_NAME_FOR_SIGNING : String\
\l- mTabbedPane : JTabbedPane\l- menuBar : MenuBar\l+ RESOURCES_EXECUTE_SCRIPTS_WITHOUT_NETWORK_RESTRICTION : String\l+ RESOURCES\
_DON_T_SHOW_CLONE_ICONS : String\l+ KEYSTROKE_MOVE_MAP_RIGHT : String\l+ RESOURCES_DON_T_SHOW_NOTE_ICONS : String\l- mLoggerList\
 : Vector\l# VERSION : VersionInformation\l- defProps : Properties\l- autoPropertiesFile : File\l+ RESOURCES_EDGE_COLOR : String\
\l- SPLIT_PANE_POSITION : String\l+ PROXY_USE_SETTINGS : String\l+ PROXY_HOST : String\l controller : Controller\l+ RESOURCE_PRINT\
_ON_WHITE_BACKGROUND : String\l+ RESOURCES_USE_SPLIT_PANE : String\l- patternsFile : File\l- sLogFileHandler : LogFileLogHandler\
\l+ RESOURCES_USE_MARGIN_TOP_ZERO_FOR_NOTES : String\l- mFreeMindCommon : FreeMindCommon\l- logger : Logger\l+ RESOURCES_CUT\
_NODES_WITHOUT_QUESTION : String\l- SPLIT_PANE_LAST_POSITION : String\l+ RESOURCES_SIGNED_SCRIPT_ARE_TRUSTED : String\l- filetypes\
 : Map\l+ PROXY_USER : String\l+ XML_VERSION : String\l+ RESOURCES_ROOT_NODE_STYLE : String\l+ RESOURCES_RELOAD_FILES_WITHOUT_\
QUESTION : String\l+ TOOLTIP_DISPLAY_TIME : String\l+ RESOURCES_REMOVE_NOTES_WITHOUT_QUESTION : String\l+ RESOURCES_SEARCH_IN_NOTES\
_TOO : String\l+ VERTICAL_SPLIT_BELOW : String\l+ RESOURCE_DRAW_RECTANGLE_FOR_SELECTION : String\l- status : JLabel\l+ HORIZONTAL\
_SPLIT_RIGHT : String\l- mSplitPane : JSplitPane\l+ RESOURCES_EXECUTE_SCRIPTS_WITHOUT_ASKING : String\l+ RESOURCES_DELETE_NODES\
_WITHOUT_QUESTION : String\l+ PROXY_PASSWORD : String\l- mEditServer : EditServer\l+ RESOURCES_WHEEL_VELOCITY : String\l- FREE\
_MIND_PROGRESS_LOAD_MAPS : String\l+ RESOURCES_EXECUTE_SCRIPTS_WITHOUT_FILE_RESTRICTION : String\l+ KEYSTROKE_MOVE_MAP_LEFT : String\
\l+ PROXY_IS_AUTHENTICATED : String\l- FREE_MIND_PROGRESS_LOAD_MAPS_NAME : String\l+ KEYSTROKE_NEXT_MAP : String\l+ RESOURCES\
_SELECTION_METHOD : String\l+ RESOURCES_COMPLETE_CLONING : String\l+ PROXY_PORT : String\l+ J_SPLIT_PANE_SPLIT_TYPE : String\l-\
 mScrollPane : JScrollPane\l+ RESOURCES_CLOUD_COLOR : String\l- mContentComponent : JComponent\l+ RESOURCES_DON_T_SHOW_NOTE_TOOLTIPS\
 : String\l+ RESOURCES_REMIND_USE_RICH_TEXT_IN_NEW_LONG_NODES : String\l+ RESOURCES_USE_DEFAULT_FONT_FOR_NOTES_TOO : String\
\l+ RESOURCES_NODE_STYLE : String\l- mFileHandlerError : boolean\l+ props : Properties\l+ RESOURCES_USE_TABBED_PANE : String\l+ \
RESOURCES_DON_T_OPEN_PORT : String\l+ RESOURCES_NODE_TEXT_COLOR : String\l+ RESOURCES_DISPLAY_FOLDING_BUTTONS : String\l- mWindowIcon\
 : ImageIcon\l+ RESOURCES_CONVERT_TO_CURRENT_VERSION : String\l+ RESOURCES_SELECTED_NODE_RECTANGLE_COLOR : String\l+ RESOURCES\
_EXECUTE_SCRIPTS_WITHOUT_EXEC_RESTRICTION : String\l+ KEYSTROKE_PREVIOUS_MAP : String\l- mFileHandler : FileHandler\l+ RESOURCES\
_SAVE_FOLDING_STATE : String\l- PORT_FILE : String\l+ RESOURCES_LINK_COLOR : String\l+ RESOURCES_CLONE_TYPE_COMPLETE_CLONE : \
String\l- mStartupDoneListeners : List\l+ RESOURCES_BACKGROUND_COLOR : String\l+ LOG_FILE_NAME : String\l|+ getProperties(): Properties\
 \l+ getWinX(): int \l+ getFreeMindClassLoader(): ClassLoader \l+ setDefaultProperty(String,String): void \l+ getFreemindBaseDir\
(): String \l- fireStartupDone(): void \l- loadMaps(String[],ModeController,FeedBack): void \l- setupProxy(): void \l- setContentComponent\
(): void \l+ getDefaultProperty(String): String \l+ getProperty(String): String \l+ getFreemindVersion(): VersionInformation\
 \l- getLastStateStorageManagement(): LastStateStorageManagement \l+ getResourceString(String): String \l+ getContentComponent\
(): JComponent \l+ setProperty(String,String): void \l- execWindows(String): void \l+ getAdjustableProperty(String): \
String \l- processLoadEventFromStartupPhase(): boolean \l+ getFreemindDirectory(): String \l+ saveProperties(boolean): void \l+ \
getController(): Controller \l+ getWinY(): int \l+ getPatternsFile(): File \l+ getWinState(): int \l- transpose(String,char,String\
): String \l- removeContentComponent(): void \l+ getResourceString(String,String): String \l+ getLoggerList(): List \l+ getResources\
(): ResourceBundle \l init(FeedBack): void \l+ isApplet(): boolean \l+ getIntProperty(String,int): int \l+ main(String[],Properties\
,Properties,File): void \l- setupSpellChecking(): void \l+ out(String): void \l- processLoadEventFromStartupPhase(String\
): boolean \l+ getFreeMindMenuBar(): MenuBar \l+ FreeMind(Properties,Properties,File) \l+ getResource(String): URL \l+ getLogger\
(String): Logger \l- getMaximumNumberOfMapsToLoad(String[]): int \l- setScreenBounds(): void \l- checkForAnotherInstance(String\
[]): void \l+ registerStartupDoneListener(StartupDoneListener): void \l- getProgramForFile(String): String \l+ getJFrame(): JFrame\
 \l+ setWaitingCursor(boolean): void \l+ getWinWidth(): int \l+ getScrollPane(): JScrollPane \l- updateLookAndFeel(): void \l+\
 insertComponentIntoSplitPane(JComponent): JSplitPane \l+ getView(): MapView \l+ openDocument(URL): void \l+ removeSplitPane(): \
void \l &lt;Initializer&gt;() \l- getPortFile(): String \l+ err(String): void \l- initServer(): void \l+ setView(MapView): void \
\l- createModeController(String[]): ModeController \l+ getWinHeight(): int}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="12087,13274", rects="11816,14373,12358,14396 11816,13090,12358,14373 11816,12152,12358,13090", width="7.5278", height="31.181"];
				freemind_main_FreeMind_MyEventQueue [label="{- MyEventQueue|+ postEvent(AWTEvent): void}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="12606,12871", rects="12511,12871,12700,12894 12511,12848,12700,12871", width="2.625", height="0.65278"];
			}
			freemind_main_Base64Coding [label="{+ Base64Coding|- logger : Logger\l|+ encode64(byte[]): String \l &lt;Initializer&gt;() \l+ decode64(String): byte}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="11892,14605", rects="11808,14632,11976,14655 11808,14609,11976,14632 11808,14556,11976,14609", width="2.3333", height="1.3889"];
			freemind_main_XMLElement [label="{+ XMLElement|+ XML_NODE_XHTML_CONTENT_END_TAG_REGEXP : String\l+ XML_NODE_XHTML_CONTENT_TAG : String\l serialVersionUID : long\l-\
 contents : String\l+ NANOXML_MINOR_VERSION : int\l- dontEncodeContents : boolean\l- parserLineNr : int\l- children : Vector\l\
# ignoreCase : boolean\l- reader : Reader\l- attributes : TreeMap\l- sContentEndTagPattern : Pattern\l- charReadTooMuch : char\l-\
 lineNr : int\l+ NANOXML_MAJOR_VERSION : int\l- entities : Hashtable\l- name : String\l- ignoreWhitespace : boolean\l|+ getDoubleAttribute\
(String,Hashtable,String,boolean): double \l+ getBooleanAttribute(String,String,String,boolean): boolean \l# checkCDATA\
(StringBuffer): boolean \l+ addProperty(String,int): void \l+ writeClosingTag(Writer): void \l# invalidValue(String,String): XMLParseException\
 \l+ parseCharArray(char[],int,int,int): void \l# scanString(StringBuffer): void \l+ getProperty(String,String):\
 String \l# scanWhitespace(): char \l+ getProperty(String,double): double \l+ getProperty(String,String,String,boolean): boolean\
 \l+ write(Writer,boolean): void \l+ getIntProperty(String,Hashtable,String): int \l+ addChild(XMLElement): void \l+ parseCharArray\
(char[],int,int): void \l+ getIntAttribute(String,Hashtable,String,boolean): int \l# unknownEntity(String): XMLParseException\
 \l# scanWhitespace(StringBuffer): char \l+ countChildren(): int \l+ setName(String): void \l+ XMLElement(Hashtable,boolean) \l+\
 addProperty(String,double): void \l# XMLElement(Hashtable,boolean,boolean,boolean) \l# expectedInput(String): XMLParseException\
 \l+ setEncodedContent(String): void \l+ setTagName(String): void \l+ getContents(): String \l+ setDoubleAttribute(String,double\
): void \l+ getProperty(String,Hashtable,String): Object \l+ setAttribute(String,Object): void \l+ parseFromReader(Reader,int): \
void \l+ enumerateChildren(): Enumeration \l+ getChildren(): Vector \l+ XMLElement() \l+ removeAttribute(String): void \l# scanElement\
(XMLElement): void \l+ writeWithoutClosingTag(Writer): void \l+ parseFromReader(Reader): void \l+ getAttribute(String): Object\
 \l# unexpectedEndOfData(): XMLParseException \l+ write(Writer): void \l# completeElement(): void \l# unreadChar(char): void\
 \l+ XMLElement(Hashtable) \l+ getStringProperty(String,Hashtable,String): String \l+ getLineNr(): int \l+ toString(): String \l+\
 addProperty(String,Object): void \l# scanIdentifier(StringBuffer): void \l+ parseString(String): void \l+ parseString(String,int\
,int,int): void \l# syntaxError(String): XMLParseException \l+ getIntAttribute(String,int): int \l+ removeChild(String): void \
\l+ parseString(String,int): void \l+ getIntAttribute(String): int \l# skipSpecialTag(int): void \l+ getStringAttribute(String):\
 String \l# createAnotherElement(): XMLElement \l+ getTagName(): String \l+ getStringAttribute(String,Hashtable,String,boolean):\
 String \l+ XMLElement(Hashtable,boolean,boolean) \l+ getAttribute(String,Object): Object \l# writeEncoded(Writer,String): void \
\l+ getContent(): String \l# scanPCData(StringBuffer): void \l+ enumerateAttributeNames(): Iterator \l+ removeProperty(String): \
void \l+ removeChild(XMLElement): void \l+ parseString(String,int,int): void \l+ setIntAttribute(String,int): void \l# skipComment\
(): void \l+ getProperty(String): String \l+ getSpecialIntProperty(String,Hashtable,String): int \l# checkLiteral(String): boolean\
 \l+ getName(): String \l+ getProperty(String,int): int \l+ getStringAttribute(String,String): String \l# resolveEntity(StringBuffer\
): void \l# invalidValueSet(String): XMLParseException \l+ getDoubleAttribute(String): double \l+ XMLElement(boolean) \l+\
 getUserObject(): Object \l+ setContent(String): void \l+ getDoubleAttribute(String,double): double \l+ getAttribute(String,Hashtable\
,String,boolean): Object \l+ getSpecialDoubleProperty(String,Hashtable,String): double \l+ enumeratePropertyNames(): Iterator\
 \l# readChar(): char \l &lt;Initializer&gt;()}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="11478,14119", rects="11272,14933,11684,14956 11272,14655,11684,14933 11272,13282,11684,14655", width="5.7222", height="23.264"];
			freemind_main_FixedHTMLWriter [label="{+ FixedHTMLWriter|- convAttr : MutableAttributeSet\l| &lt;Initializer&gt;() \l+ FixedHTMLWriter(Writer,HTMLDocument) \l- convertToHTML\
(AttributeSet,MutableAttributeSet): void \l# writeAttributes(AttributeSet): void \l+ FixedHTMLWriter(Writer,HTMLDocument,\
int,int)}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="11848,11940", rects="11673,11982,12022,12005 11673,11959,12022,11982 11673,11876,12022,11959", width="4.8472", height="1.8056"];
			freemind_main_XMLParseException [label="{+ XMLParseException|+ NO_LINE : int\l- lineNr : int\l|+ XMLParseException(String,String) \l+ XMLParseException(String,int,String\
) \l &lt;Initializer&gt;() \l+ getLineNr(): int}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="12868,11873", rects="12745,11915,12990,11938 12745,11877,12990,11915 12745,11809,12990,11877", width="3.4028", height="1.8056"];
			freemind_main_IFreeMindSplash [label="{+ IFreeMindSplash|*+ close(): void \l*+ setVisible(boolean): void \l*+ getFeedBack(): FeedBack \l*+ getWindowIcon(): ImageIcon}", levelType="3_FAMIX.Class", hasData=false, hasMethods=true, pos="10836,13127", rects="10736,13150,10936,13173 10736,13082,10936,13150", width="2.7778", height="1.2778"];
			freemind_main_ExampleFileFilter [label="{+ ExampleFileFilter|- useExtensionsInDescription : boolean\l- fullDescription : String\l- TYPE_UNKNOWN : String\l- description \
: String\l- filters : Hashtable\l- HIDDEN_FILE : String\l|+ getExtension(File): String \l+ setExtensionListInDescription(boolean\
): void \l &lt;Initializer&gt;() \l+ getDescription(): String \l+ ExampleFileFilter(String[],String) \l+ ExampleFileFilter(String\
,String) \l+ setDescription(String): void \l+ addExtension(String): void \l+ ExampleFileFilter(String[]) \l+ ExampleFileFilter(\
String) \l+ ExampleFileFilter() \l+ isExtensionListInDescription(): boolean \l+ accept(File): boolean}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="11012,14449", rects="10870,14588,11154,14611 10870,14490,11154,14588 10870,14287,11154,14490", width="3.9444", height="4.5139"];
			freemind_main_FreeMindApplet [label="{+ FreeMindApplet| iMaxNodeWidth : int\l- menuBar : MenuBar\l- mComponentInSplitPane : JComponent\l- southPanel : JPanel\l- scrollPane\
 : JScrollPane\l- status : JLabel\l c : Controller\l- mFreeMindCommon : FreeMindCommon\l+ userProps : Properties\l+ defaultProps\
 : Properties\l+ version : VersionInformation\l+ defaultPropsURL : URL\l|+ getWinX(): int \l+ getJFrame(): JFrame \l+ setProperty\
(String,String): void \l+ getResources(): ResourceBundle \l+ openDocument(URL): void \l+ isApplet(): boolean \l+ insertComponentIntoSplitPane\
(JComponent): JSplitPane \l+ getResource(String): URL \l+ setDefaultProperty(String,String): void \l+ init()\
: void \l+ removeSplitPane(): void \l+ getFreemindDirectory(): String \l- updateLookAndFeel(): void \l+ getController(): Controller\
 \l+ getFreemindVersion(): VersionInformation \l+ out(String): void \l+ setWaitingCursor(boolean): void \l+ setView(MapView):\
 void \l+ getWinHeight(): int \l+ getFreemindBaseDir(): String \l+ getFreeMindMenuBar(): MenuBar \l- setPropertyByParameter(String\
): void \l+ FreeMindApplet() \l+ getResourceString(String,String): String \l+ getSouthPanel(): JPanel \l+ getPatternsFile(): File\
 \l+ getMaxNodeWidth(): int \l+ setTitle(String): void \l+ registerStartupDoneListener(StartupDoneListener): void \l+ getResourceString\
(String): String \l+ getView(): MapView \l+ getWinWidth(): int \l+ getIntProperty(String,int): int \l+ saveProperties(\
boolean): void \l+ getWinState(): int \l+ getAdjustableProperty(String): String \l+ getScrollPane(): JScrollPane \l+ getProperties\
(): Properties \l+ start(): void \l+ getLoggerList(): List \l+ getProperty(String): String \l+ err(String): void \l+ getFreeMindClassLoader\
(): ClassLoader \l+ getContentComponent(): JComponent \l+ getWinY(): int \l &lt;Initializer&gt;() \l+ getLogger(String\
): Logger}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="10977,13744", rects="10803,14183,11151,14206 10803,13995,11151,14183 10803,13282,11151,13995", width="4.8333", height="12.847"];
			freemind_main_FreeMindSecurityManager [label="{+ FreeMindSecurityManager|- mFinalSecurityManager : SecurityManager\l|+ checkPropertyAccess(String): void \l+ checkLink(String)\
: void \l+ checkMulticast(InetAddress,byte): void \l+ checkExec(String): void \l+ checkPermission(Permission,Object): void \l+ checkPropertiesAccess\
(): void \l+ getSecurityContext(): Object \l+ checkRead(String): void \l+ checkWrite(String): void \l+ checkMulticast\
(InetAddress): void \l+ checkConnect(String,int,Object): void \l &lt;Initializer&gt;() \l+ checkPermission(Permission):\
 void \l+ checkSecurityAccess(String): void \l+ checkAwtEventQueueAccess(): void \l+ checkMemberAccess(Class,int): void \l+ checkPrintJobAccess\
(): void \l+ checkTopLevelWindow(Object): boolean \l+ checkPackageAccess(String): void \l+ checkAccess(Thread): void\
 \l+ checkDelete(String): void \l+ checkCreateClassLoader(): void \l+ checkSetFactory(): void \l+ checkRead(String,Object): void\
 \l+ checkConnect(String,int): void \l+ checkWrite(FileDescriptor): void \l+ checkExit(int): void \l+ FreeMindSecurityManager\
() \l+ checkSystemClipboardAccess(): void \l+ setFinalSecurityManager(SecurityManager): void \l+ checkAccess(ThreadGroup): void \
\l+ checkListen(int): void \l+ checkRead(FileDescriptor): void \l+ checkAccept(String,int): void \l+ checkPackageDefinition(String\
): void}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="11021,14979", rects="10869,15246,11172,15269 10869,15223,11172,15246 10869,14690,11172,15223", width="4.2083", height="8.0556"];
			freemind_main_LoggingOutputStream [label="{ LoggingOutputStream|- logger : Logger\l- lineSeparator : String\l- level : Level\l|+ LoggingOutputStream(Logger,Level) \l+ flush\
(): void}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="13200,11932", rects="13080,11966,13319,11989 13080,11913,13319,11966 13080,11875,13319,11913", width="3.3194", height="1.5972"];
			freemind_main_Resources [label="{+ Resources|- countryMap : HashMap\l resourcesInstance : Resources\l- logger : Logger\l- main : FreeMindMain\l|+ getCountryMap(\
): HashMap \l+ getInstance(): Resources \l+ getBoolProperty(String): boolean \l+ createInstance(FreeMindMain): void \l+ logException\
(Throwable): void \l+ getResource(String): URL \l+ logException(Throwable,String): void \l+ getFreemindDirectory(): String \l\
 &lt;Initializer&gt;() \l+ getFreemindVersion(): VersionInformation \l- Resources(FreeMindMain) \l+ getResources(): ResourceBundle\
 \l+ getProperties(): Properties \l+ getResourceString(String,String): String \l+ createTranslatedString(String): NamedObject\
 \l+ getText(String): String \l+ getResourceString(String): String \l+ getLongProperty(String,long): long \l+ getProperty(String\
): String \l+ getLogger(String): Logger \l+ format(String,Object[]): String \l+ getIntProperty(String,int): int}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="13490,14971", rects="13348,15163,13631,15186 13348,15095,13631,15163 13348,14757,13631,15095", width="3.9306", height="5.9722"];
			freemind_main_FeedBack [label="{+ FeedBack| progress(int,String,Object[]): void \l getActualValue(): int \l setMaximumValue(int): void \l increase(String,Object\
[]): void}", levelType="3_FAMIX.Class", hasData=false, hasMethods=true, pos="13521,11921", rects="13416,11944,13626,11967 13416,11876,13626,11944", width="2.9167", height="1.2778"];
			freemind_main_EditServer [label="{+ EditServer|- abort : boolean\l- ok : boolean\l- socket : ServerSocket\l- mFrame : FreeMindMain\l- authKey : int\l- portFile :\
 String\l# logger : Logger\l|+ run(): void \l EditServer(String,FreeMindMain) \l &lt;Initializer&gt;() \l stopServer(): void \l+\
 getPort(): int \l isOK(): boolean \l- handleClient(Socket,DataInputStream): boolean}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="13896,12536", rects="13751,12638,14041,12661 13751,12525,14041,12638 13751,12412,14041,12525", width="4.0278", height="3.4722"];
		}
		subgraph cluster_freemind_common {
			graph [label=common,
				levelType="2_FAMIX.Namespace",
				bb="5367.3,11800,7474.3,13811"];
			subgraph cluster_freemind_common_OptionalDontShowMeAgainDialog {
				graph [label="+ OptionalDontShowMeAgainDialog",
					levelType="3_FAMIX.Class",
					bb="5770.9,12456,6805.9,12984"];
				freemind_common_OptionalDontShowMeAgainDialog [label="{OptionalDontShowMeAgainDialog|- mParent : JFrame\l- mMessageId : String\l- mMessageType : int\l- mTitleId : String\l- mDialog :\
 JDialog\l- mDontShowAgainBox : JCheckBox\l- mTextTranslator : TextTranslator\l# logger : Logger\l+ ONLY_OK_SELECTION_IS_STORED \
: int\l- mComponent : Component\l+ BOTH_OK_AND_CANCEL_OPTIONS_ARE_STORED : int\l- mDontShowPropertyHandler : DontShowPropertyHandler\
\l- mResult : int\l| &lt;Initializer&gt;() \l+ OptionalDontShowMeAgainDialog(JFrame,Component,String,String,TextTranslator,DontShowPropertyHandler\
,int) \l- close(int): void \l+ show(): OptionalDontShowMeAgainDialog \l+ getResult(): int}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="6118.1,12619", rects="5778.6,12751,6457.6,12774 5778.6,12548,6457.6,12751 5778.6,12465,6457.6,12548", width="9.4306", height="4.3056"];
				freemind_common_OptionalDontShowMeAgainDialog_StandardPropertyHandler [label="{+ StandardPropertyHandler|- mController : Controller\l- mPropertyName : String\l|+ OptionalDontShowMeAgainDialog.StandardPropertyHandler\
(Controller,String) \l+ getProperty(): String \l+ setProperty(String): void}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="6560.1,12895", rects="6322.6,12929,6797.6,12952 6322.6,12891,6797.6,12929 6322.6,12838,6797.6,12891", width="6.5972", height="1.5972"];
				freemind_common_OptionalDontShowMeAgainDialog_DontShowPropertyHandler [label="{+ DontShowPropertyHandler| getProperty(): String \l setProperty(String): void}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="6175.1,12869", rects="6084.6,12877,6265.6,12900 6084.6,12839,6265.6,12877", width="2.5139", height="0.86111"];
			}
			subgraph cluster_freemind_common_FreeMindTask {
				graph [label="*+ FreeMindTask",
					levelType="3_FAMIX.Class",
					bb="6599.4,13031,7253.4,13558"];
				freemind_common_FreeMindTask [label="{FreeMindTask|# mProgressDescription : ProgressDescription\l- mFrame : RootPaneContainer\l- mInterrupted : boolean\l- TIME_TO_DISPLAY\
_PROGRESS_BAR_IN_MILLIS : long\l- mRounds : int\l- mAmountOfSteps : int\l- mProgressMonitor : FreeMindProgressMonitor\l- mFinished\
 : boolean\l- mOldGlassPane : Component\l- mGlass : JPanel\l|+ getRounds(): int \l*# processAction(): boolean \l+ isInterrupted\
(): boolean \l &lt;Initializer&gt;() \l+ setAmountOfSteps(int): void \l+ run(): void \l+ setFinished(boolean): void \l+ getAmountOfSteps\
(): int \l+ FreeMindTask(RootPaneContainer,int,String) \l+ setInterrupted(boolean): void \l+ isFinished(): boolean\
}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="6796.6,13217", rects="6607.6,13371,6985.6,13394 6607.6,13213,6985.6,13371 6607.6,13040,6985.6,13213", width="5.25", height="4.9306"];
				freemind_common_FreeMindTask_ProgressDescription [label="{# ProgressDescription|+ mProgressString : String\l+ mProgressParameters : Object\l|+ ProgressDescription(String,Object[])}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="7127.6,13485", rects="7010.1,13504,7245.1,13527 7010.1,13466,7245.1,13504 7010.1,13443,7245.1,13466", width="3.2639", height="1.1806"];
			}
			subgraph cluster_freemind_common_ScriptEditorProperty {
				graph [label="+ ScriptEditorProperty",
					levelType="3_FAMIX.Class",
					bb="5986.9,13032,6523.9,13456"];
				freemind_common_ScriptEditorProperty [label="{ScriptEditorProperty| mButton : JButton\l- mMindMapController : MindMapController\l menu : JPopupMenu\l label : String\l script\
 : String\l description : String\l- logger : Logger\l|+ setEnabled(boolean): void \l+ getValue(): String \l+ actionPerformed(ActionEvent\
): void \l- setScriptValue(String): void \l+ layout(DefaultFormBuilder,TextTranslator): void \l+ getDescription(): String\
 \l+ getLabel(): String \l+ ScriptEditorProperty(String,String,MindMapController) \l+ setValue(String): void \l &lt;Initializer\
&gt;()}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="6166.1,13187", rects="5994.6,13311,6337.6,13334 5994.6,13198,6337.6,13311 5994.6,13040,6337.6,13198", width="4.7639", height="4.0972"];
				freemind_common_ScriptEditorProperty_ScriptEditorStarter [label="{+ ScriptEditorStarter| startEditor(String): String}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="6437.1,13401", rects="6358.6,13401,6515.6,13424 6358.6,13378,6515.6,13401", width="2.1806", height="0.65278"];
			}
			freemind_common_BooleanProperty [label="{+ BooleanProperty| label : String\l+ FALSE_VALUE : String\l description : String\l mCheckBox : JCheckBox\l# mTrueValue : String\
\l# mFalseValue : String\l+ TRUE_VALUE : String\l|+ getDescription(): String \l+ getLabel(): String \l &lt;Initializer&gt;() \l+\
 layout(DefaultFormBuilder,TextTranslator): void \l+ BooleanProperty(String,String) \l+ setEnabled(boolean): void \l+ getValue()\
: String \l+ setValue(String): void}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="5562.4,12624", rects="5410.9,12733,5713.9,12756 5410.9,12620,5713.9,12733 5410.9,12492,5713.9,12620", width="4.2083", height="3.6806"];
			freemind_common_ColorProperty [label="{+ ColorProperty| color : Color\l- mTranslator : TextTranslator\l- defaultColor : String\l label : String\l menu : JPopupMenu\l \
description : String\l mButton : JButton\l|- getColorValue(): Color \l+ getLabel(): String \l+ actionPerformed(ActionEvent): void\
 \l &lt;Initializer&gt;() \l+ ColorProperty(String,String,String,TextTranslator) \l+ setValue(String): void \l+ getDescription(\
): String \l+ getValue(): String \l- setColorValue(Color): void \l+ layout(DefaultFormBuilder,TextTranslator): void \l+ setEnabled\
(boolean): void}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="5784.4,13511", rects="5626.9,13642,5941.9,13665 5626.9,13529,5941.9,13642 5626.9,13356,5941.9,13529", width="4.375", height="4.3056"];
			freemind_common_IconProperty [label="{+ IconProperty| label : String\l- mFreeMindMain : FreeMindMain\l description : String\l- mIcons : Vector\l mButton : JButton\l-\
 mActualIcon : MindIcon\l|+ setEnabled(boolean): void \l+ IconProperty(String,String,FreeMindMain,Vector) \l+ getValue(): String\
 \l- setIcon(MindIcon): void \l+ setValue(String): void \l+ actionPerformed(ActionEvent): void \l+ getDescription(): String \l+ \
getLabel(): String \l &lt;Initializer&gt;() \l+ layout(DefaultFormBuilder,TextTranslator): void}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="6395.4,13640", rects="6238.9,13756,6551.9,13779 6238.9,13658,6551.9,13756 6238.9,13500,6551.9,13658", width="4.3472", height="3.8889"];
			freemind_common_RemindValueProperty [label="{+ RemindValueProperty|- mTextTranslator : TextTranslator\l|+ RemindValueProperty(String,String,TextTranslator) \l# setState(int\
): void}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="7155.4,12030", rects="6994.9,12049,7315.9,12072 6994.9,12026,7315.9,12049 6994.9,11988,7315.9,12026", width="4.4583", height="1.1806"];
			freemind_common_NamedObject [label="{+ NamedObject|- object : Object\l- name : String\l|+ getObject(): Object \l+ NamedObject(Object,String) \l+ equals(Object): boolean\
 \l- NamedObject() \l+ toString(): String \l+ literal(String): NamedObject}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="6083.4,13580", rects="5986.9,13636,6179.9,13659 5986.9,13598,6179.9,13636 5986.9,13500,6179.9,13598", width="2.6806", height="2.2222"];
			freemind_common_FontProperty [label="{+ FontProperty| mFontComboBox : JComboBox\l- mTranslator : TextTranslator\l label : String\l- mAvailableFontFamilyNames : String\
\l description : String\l font : Font\l|+ setValue(String): void \l+ getDescription(): String \l &lt;Initializer&gt;() \l+ getLabel\
(): String \l+ layout(DefaultFormBuilder,TextTranslator): void \l+ setEnabled(boolean): void \l+ getValue(): String \l+ FontProperty\
(String,String,TextTranslator)}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="6426.4,11969", rects="6274.9,12070,6577.9,12093 6274.9,11972,6577.9,12070 6274.9,11844,6577.9,11972", width="4.2083", height="3.4722"];
			freemind_common_ComboProperty [label="{+ ComboProperty|# possibleValues : Vector\l description : String\l label : String\l# mComboBox : JComboBox\l|+ ComboProperty(String\
,String,String[],TextTranslator) \l+ ComboProperty(String,String,List,List) \l+ getLabel(): String \l+ setValue(String): void\
 \l+ ComboProperty(String,String,String[],List) \l- fillPossibleValues(String[]): void \l+ getValue(): String \l+ updateComboBoxEntries\
(List,List): void \l &lt;Initializer&gt;() \l+ getDescription(): String \l- fillPossibleValues(List): void \l+ layout(DefaultFormBuilder\
,TextTranslator): void \l+ setEnabled(boolean): void}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="5830.4,12243", rects="5662.9,12367,5997.9,12390 5662.9,12299,5997.9,12367 5662.9,12096,5997.9,12299", width="4.6528", height="4.0972"];
			freemind_common_ThreeCheckBoxProperty [label="{+ ThreeCheckBoxProperty|+ TRUE_VALUE : String\l+ FALSE_VALUE : String\l state : int\l description : String\l# TRUE_VALUE_INT : \
int\l# FALSE_VALUE_INT : int\l# mTrueValue : String\l# mDontTouchValue : String\l+ DON_T_TOUCH_VALUE : String\l# DON_T_TOUCH_VALUE\
_INT : int\l- MINUS_IMAGE : ImageIcon\l- PLUS_IMAGE : ImageIcon\l# mFalseValue : String\l mButton : JButton\l label : String\l-\
 NO_IMAGE : Icon\l|+ setEnabled(boolean): void \l# setState(int): void \l+ setValue(String): void \l+ getDescription(): String \
\l+ layout(DefaultFormBuilder,TextTranslator): void \l- transformString(String): int \l- getState(): int \l &lt;Initializer&gt;(\
) \l+ getLabel(): String \l+ ThreeCheckBoxProperty(String,String) \l+ getValue(): String}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="7002.4,12750", rects="6850.9,12949,7153.9,12972 6850.9,12701,7153.9,12949 6850.9,12528,7153.9,12701", width="4.2083", height="6.1806"];
			freemind_common_PropertyControl [label="{+ PropertyControl| layout(DefaultFormBuilder,TextTranslator): void \l layout(?,?) \l setEnabled(boolean): void \l getDescription\
(): String \l getLabel(): String}", levelType="3_FAMIX.Class", hasData=false, hasMethods=true, pos="7320.4,13661", rects="7174.9,13691,7465.9,13714 7174.9,13608,7465.9,13691", width="4.0417", height="1.4861"];
			freemind_common_UnicodeReader [label="{+ UnicodeReader|- BOM_SIZE : int\l internalIn2 : InputStreamReader\l defaultEnc : String\l internalIn : PushbackInputStream\l|#\
 init(): void \l+ getDefaultEncoding(): String \l+ read(char[],int,int): int \l+ getEncoding(): String \l+ close(): void \l+ UnicodeReader\
(InputStream,String) \l &lt;Initializer&gt;()}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="5959.4,11946", rects="5842.9,12025,6075.9,12048 5842.9,11957,6075.9,12025 5842.9,11844,6075.9,11957", width="3.2361", height="2.8472"];
			freemind_common_SeparatorProperty [label="{+ SeparatorProperty| label : String\l|+ setEnabled(boolean): void \l+ layout(DefaultFormBuilder,TextTranslator): void \l+ getDescription\
(): String \l+ getLabel(): String \l+ SeparatorProperty(String)}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="5634.4,11981", rects="5482.9,12022,5785.9,12045 5482.9,11999,5785.9,12022 5482.9,11916,5785.9,11999", width="4.2083", height="1.8056"];
			freemind_common_DontShowNotificationProperty [label="{+ DontShowNotificationProperty|+ DontShowNotificationProperty(String,String)}", levelType="3_FAMIX.Class", hasData=false, hasMethods=true, pos="6991.4,13631", rects="6850.9,13631,7131.9,13654 6850.9,13608,7131.9,13631", width="3.9028", height="0.65278"];
			freemind_common_TextTranslator [label="{+ TextTranslator|*+ getText(String): String}", levelType="3_FAMIX.Class", hasData=false, hasMethods=true, pos="6138.4,12371", rects="6058.9,12371,6217.9,12394 6058.9,12348,6217.9,12371", width="2.2083", height="0.65278"];
			freemind_common_XmlBindingTools [label="{+ XmlBindingTools|- instance : XmlBindingTools\l mBindingFactory : UNKNOWN\l| createUnmarshaller() \l# storeDialogPositions(WindowConfigurationStorage\
,JDialog): String \l+ decorateDialog(String,JDialog): UNKNOWN \l storeDialogPositions(?,?,?,?) \l+ createUnmarshaller\
(): UNKNOWN \l+ decorateDialog(Controller,JDialog,String): UNKNOWN \l+ getInstance(): XmlBindingTools \l storeDialogPositions\
(?,?) \l decorateDialog(?,?,?) \l marshall(?) \l createMarshaller() \l+ createMarshaller(): UNKNOWN \l unMarshall(?) \l+\
 unMarshall(String): UNKNOWN \l+ marshall(XmlAction): String \l+ storeDialogPositions(Controller,JDialog,WindowConfigurationStorage\
,String): void \l decorateDialog(?,?) \l- XmlBindingTools() \l+ unMarshall(Reader): UNKNOWN}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="7099.4,12309", rects="6850.9,12463,7347.9,12486 6850.9,12425,7347.9,12463 6850.9,12132,7347.9,12425", width="6.9028", height="4.9306"];
			freemind_common_NumberProperty [label="{+ NumberProperty|- max : int\l description : String\l- step : int\l- min : int\l- spinner : JSpinner\l label : String\l|+ getIntValue\
(): int \l+ getLabel(): String \l+ getValue(): String \l+ setValue(String): void \l+ layout(DefaultFormBuilder,TextTranslator\
): void \l+ setEnabled(boolean): void \l+ getDescription(): String \l+ NumberProperty(String,String,int,int,int)}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="5562.4,12941", rects="5410.9,13042,5713.9,13065 5410.9,12944,5713.9,13042 5410.9,12816,5713.9,12944", width="4.2083", height="3.4722"];
			freemind_common_PasswordProperty [label="{+ PasswordProperty|+ PasswordProperty(String,String) \l+ getValue(): String \l+ setValue(String): void \l# initializeTextfield(\
): void}", levelType="3_FAMIX.Class", hasData=false, hasMethods=true, pos="5482.4,12394", rects="5374.9,12416,5589.9,12439 5374.9,12348,5589.9,12416", width="2.9861", height="1.2778"];
			freemind_common_NextLineProperty [label="{+ NextLineProperty|+ getLabel(): String \l+ NextLineProperty() \l+ setEnabled(boolean): void \l+ layout(DefaultFormBuilder,TextTranslator\
): void \l+ getDescription(): String}", levelType="3_FAMIX.Class", hasData=false, hasMethods=true, pos="7146.4,11861", rects="6994.9,11891,7297.9,11914 6994.9,11808,7297.9,11891", width="4.2083", height="1.4861"];
			freemind_common_FreeMindProgressMonitor [label="{+ FreeMindProgressMonitor|- mCancelButton : JButton\l# mCanceled : boolean\l- PROGRESS_MONITOR_WINDOW_CONFIGURATION_STORAGE : String\
\l- mProgressBar : JProgressBar\l- mLabel : JLabel\l|+ showProgress(int,int,String,Object[]): boolean \l+ showProgress(int,\
String,Object[]): boolean \l+ setProgress(int): boolean \l+ main(String[]): void \l+ FreeMindProgressMonitor(String) \l &lt;Initializer\
&gt;() \l# getString(String): String \l+ dismiss(): void}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="6516.4,12285", rects="6275.4,12379,6757.4,12402 6275.4,12296,6757.4,12379 6275.4,12168,6757.4,12296", width="6.6944", height="3.2639"];
			freemind_common_PropertyBean [label="{*+ PropertyBean|- mPropertyChangeListeners : Vector\l|*+ getValue(): String \l*+ setValue(String): void \l+ PropertyBean() \l+ \
removePropertyChangeListener(PropertyChangeListener): void \l &lt;Initializer&gt;() \l*+ getLabel(): String \l+ addPropertyChangeListener\
(PropertyChangeListener): void \l# firePropertyChangeEvent(): void}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="5747.4,13227", rects="5555.4,13291,5939.4,13314 5555.4,13268,5939.4,13291 5555.4,13140,5939.4,13268", width="5.3333", height="2.4306"];
			freemind_common_StringProperty [label="{+ StringProperty| label : String\l mTextField : JTextField\l description : String\l|+ getLabel(): String \l+ getValue(): String\
 \l# initializeTextfield(): void \l+ layout(DefaultFormBuilder,TextTranslator): void \l+ setValue(String): void \l+ StringProperty\
(String,String) \l+ getDescription(): String \l+ setEnabled(boolean): void}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="6786.4,11982", rects="6634.9,12061,6937.9,12084 6634.9,12008,6937.9,12061 6634.9,11880,6937.9,12008", width="4.2083", height="2.8472"];
		}
		subgraph cluster_freemind_preferences {
			graph [label=preferences,
				levelType="2_FAMIX.Namespace",
				bb="2687.8,11800,4459.8,13116"];
			subgraph cluster_freemind_preferences_layout {
				graph [label=layout,
					levelType="3_FAMIX.Namespace",
					bb="2695.9,11808,4259.9,12900"];
				subgraph cluster_freemind_preferences_layout_OptionPanel {
					graph [label="+ OptionPanel",
						levelType="4_FAMIX.Class",
						bb="2703.6,11870,3412.6,12594"];
					freemind_preferences_layout_OptionPanel [label="{OptionPanel|- frame : JDialog\l- sContributors : Set\l- TOOLTIP_EXT : String\l- selectedPanel : String\l- MARKED_BUTTON_COLOR :\
 Color\l- tabButtonMap : HashMap\l- feedback : OptionPanelFeedback\l+ changeListeners : Vector\l- tabActionMap : HashMap\l- DEFAULT\
_LAYOUT_FORMAT : String\l- lastKey : String\l- fmMain : FreeMind\l- controls : Vector\l- PREFERENCE_STORAGE_PROPERTY : String\
\l- colorChooser : JColorChooser\l|+ buildPanel(): void \l+ removeContributor(FreemindPropertyContributor): void \l- getAllButtons\
(): Collection \l+ addContributor(FreemindPropertyContributor): void \l- getControls(): Vector \l &lt;Initializer&gt;() \l- registerTabButton\
(JButton,String,ChangeTabAction): void \l+ setProperties(): void \l+ OptionPanel(FreeMind,JDialog,OptionPanelFeedback\
) \l- getOptionProperties(): Properties \l+ closeWindow(): void \l+ getText(String): String \l- getTabButton(String): JButton\
 \l- checkConnectionToFreeMindMain(): void}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="2888.7,12175", rects="2711.2,12389,3066.2,12412 2711.2,12156,3066.2,12389 2711.2,11938,3066.2,12156", width="4.9306", height="6.5972"];
					freemind_preferences_layout_OptionPanel_OptionPanelFeedback [label="{+ OptionPanelFeedback| writeProperties(Properties): void}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="3200.7,11901", rects="3101.7,11901,3299.7,11924 3101.7,11878,3299.7,11901", width="2.75", height="0.65278"];
					freemind_preferences_layout_OptionPanel_KeyProperty [label="{- KeyProperty| description : String\l label : String\l- labelText : String\l rowSpec : UNKNOWN\l mButton : JButton\l- icon : ImageIcon\
\l- modifierMask : int\l|+ getLabel(): String \l+ getValue(): String \l+ KeyProperty(JDialog,String,String) \l+ setEnabled\
(boolean): void \l+ getDescription(): String \l+ setImageIcon(ImageIcon): void \l+ setLabelText(String): void \l+ disableModifiers\
(): void \l+ layout(DefaultFormBuilder,TextTranslator): void \l+ setValue(String): void \l &lt;Initializer&gt;()}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="3252.7,12123", rects="3101.2,12254,3404.2,12277 3101.2,12141,3404.2,12254 3101.2,11968,3404.2,12141", width="4.2083", height="4.3056"];
					freemind_preferences_layout_OptionPanel_ChangeTabAction [label="{- ChangeTabAction|- tabName : String\l- cardLayout : CardLayout\l- centralPanel : JPanel\l|- ChangeTabAction(CardLayout,JPanel,\
String) \l+ actionPerformed(ActionEvent): void}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="2912.7,12505", rects="2771.7,12539,3053.7,12562 2771.7,12486,3053.7,12539 2771.7,12448,3053.7,12486", width="3.9167", height="1.5972"];
					freemind_preferences_layout_OptionPanel_NewTabProperty [label="{+ NewTabProperty|- layoutFormat : String\l- label : String\l|+ OptionPanel.NewTabProperty(String,String) \l+ OptionPanel.NewTabProperty\
(String) \l+ setEnabled(boolean): void \l+ layout(DefaultFormBuilder,TextTranslator): void \l+ getLabel(): String \l+ getDescription\
(): String}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="3252.7,12408", rects="3101.2,12464,3404.2,12487 3101.2,12426,3404.2,12464 3101.2,12328,3404.2,12426", width="4.2083", height="2.2222"];
				}
				subgraph cluster_freemind_preferences_layout_KeyEventTranslator {
					graph [label="+ KeyEventTranslator",
						levelType="4_FAMIX.Class",
						bb="3499.1,12453,3979.1,12773"];
					freemind_preferences_layout_KeyEventTranslator [label="{KeyEventTranslator| a : int\l c : int\l m : int\l- transMap : Map\l s : int\l|+ setModifierMapping(int,int,int,int): void \l+ parseKey\
(String): Key \l+ addTranslation(Key,Key): void \l &lt;Initializer&gt;() \l+ getSymbolicModifierName(int): String \l+ modifiersToString\
(int): String \l+ getModifierString(InputEvent): String \l+ translateKeyEvent(KeyEvent): Key}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="3632.2,12624", rects="3506.7,12718,3757.7,12741 3506.7,12635,3757.7,12718 3506.7,12507,3757.7,12635", width="3.4861", height="3.2639"];
					freemind_preferences_layout_KeyEventTranslator_Key [label="{+ Key|+ key : int\l+ modifiers : String\l+ input : char\l|+ equals(Object): boolean \l+ Key(String,int,char) \l+ toString(): String\
 \l+ hashCode(): int}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="3888.2,12533", rects="3805.7,12582,3970.7,12605 3805.7,12529,3970.7,12582 3805.7,12461,3970.7,12529", width="2.2917", height="2.0139"];
				}
				subgraph cluster_freemind_preferences_layout_GrabKeyDialog {
					graph [label="+ GrabKeyDialog",
						levelType="4_FAMIX.Class",
						bb="3498.6,11816,4251.6,12359"];
					freemind_preferences_layout_GrabKeyDialog [label="{GrabKeyDialog|- shortcut : InputPane\l- binding : KeyBinding\l- clear : JButton\l- debugBuffer : Buffer\l- remove : JButton\l- \
modifierMask : int\l- isOK : boolean\l- cancel : JButton\l- ok : JButton\l- assignedTo : JLabel\l- allBindings : Vector\l- fmMain\
 : FreeMindMain\l+ MODIFIER_SEPARATOR : String\l|+ isOK(): boolean \l &lt;Initializer&gt;() \l+ getFocusTraversalKeysEnabled():\
 boolean \l- getKeyBinding(String): KeyBinding \l- getModifierMask(): int \l+ GrabKeyDialog(FreeMindMain,Dialog,KeyBinding,Vector\
,Buffer,int) \l+ getShortcut(): String \l+ isMacOS(): boolean \l+ toString(KeyEvent): String \l# processKeyEvent(KeyEvent): void\
 \l- getText(String): String \l- getSymbolicName(int): String \l- updateAssignedTo(String): void \l+ GrabKeyDialog(FreeMindMain\
,Dialog,KeyBinding,Vector,Buffer) \l+ isManagingFocus(): boolean \l- init(KeyBinding,Vector,Buffer): void}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="3714.7,12087", rects="3506.2,12301,3923.2,12324 3506.2,12098,3923.2,12301 3506.2,11850,3923.2,12098", width="5.7917", height="6.5972"];
					freemind_preferences_layout_GrabKeyDialog_KeyBinding [label="{+ KeyBinding|+ label : String\l+ name : String\l+ shortcut : String\l+ isPrefix : boolean\l|+ isAssigned(): boolean \l+ KeyBinding\
(String,String,String,boolean)}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="4102.7,11889", rects="3974.2,11931,4231.2,11954 3974.2,11863,4231.2,11931 3974.2,11825,4231.2,11863", width="3.5694", height="1.8056"];
					freemind_preferences_layout_GrabKeyDialog_InputPane [label="{ InputPane|+ getFocusTraversalKeysEnabled(): boolean \l# processKeyEvent(KeyEvent): void \l InputPane()}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="4108.7,12044", rects="3974.2,12059,4243.2,12082 3974.2,12006,4243.2,12059", width="3.7361", height="1.0694"];
					freemind_preferences_layout_GrabKeyDialog_Buffer [label="{- Buffer|+ insert(int,String): void \l+ getLength(): int}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="4050.7,12297", rects="3974.2,12305,4127.2,12328 3974.2,12267,4127.2,12305", width="2.125", height="0.86111"];
					freemind_preferences_layout_GrabKeyDialog_ActionHandler [label="{ ActionHandler| ActionHandler() \l+ actionPerformed(ActionEvent): void \l- canClose(): boolean}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="4091.7,12174", rects="3974.2,12189,4209.2,12212 3974.2,12136,4209.2,12189", width="3.2639", height="1.0694"];
				}
				freemind_preferences_layout_KeyEventWorkaround [label="{+ KeyEventWorkaround|- LAST_NOTHING : int\l lastKeyTime : long\l- last : int\l+ ALT_KEY_PRESSED_DISABLED : boolean\l- LAST_NUMKEYPAD\
 : int\l- LAST_ALT : int\l modifiers : int\l+ ALTERNATIVE_DISPATCHER : boolean\l| &lt;Initializer&gt;() \l+ numericKeypadKey\
(): void \l+ processKeyEvent(KeyEvent): KeyEvent}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="3272.1,12767", rects="3127.6,12846,3416.6,12869 3127.6,12718,3416.6,12846 3127.6,12665,3416.6,12718", width="4.0139", height="2.8472"];
				freemind_preferences_layout_VariableSizeCardLayout [label="{+ VariableSizeCardLayout|+ VariableSizeCardLayout(int,int) \l+ preferredLayoutSize(Container): Dimension \l+ VariableSizeCardLayout\
()}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="2894.1,12703", rects="2756.6,12718,3031.6,12741 2756.6,12665,3031.6,12718", width="3.8194", height="1.0694"];
			}
			freemind_preferences_FreemindPropertyContributor [label="{+ FreemindPropertyContributor|+ getControls(TextTranslator): List}", levelType="3_FAMIX.Class", hasData=false, hasMethods=true, pos="3949.9,13061", rects="3843.4,13061,4056.4,13084 3843.4,13038,4056.4,13061", width="2.9583", height="0.65278"];
			freemind_preferences_FreemindPropertyListener [label="{+ FreemindPropertyListener|*+ propertyChanged(String,String,String): void}", levelType="3_FAMIX.Class", hasData=false, hasMethods=true, pos="4311.9,13061", rects="4171.9,13061,4451.9,13084 4171.9,13038,4451.9,13061", width="3.8889", height="0.65278"];
		}
		subgraph cluster_freemind_view {
			graph [label=view,
				levelType="2_FAMIX.Namespace",
				bb="10728,6440.1,15230,11088"];
			subgraph cluster_freemind_view_mindmapview {
				graph [label=mindmapview,
					levelType="3_FAMIX.Namespace",
					bb="10736,6447.9,14442,11057"];
				subgraph cluster_freemind_view_mindmapview_attributeview {
					graph [label=attributeview,
						levelType="4_FAMIX.Namespace",
						bb="11656,7254.2,13095,8922.2"];
					subgraph cluster_freemind_view_mindmapview_attributeview_AttributeTable {
						graph [label="+ AttributeTable",
							levelType="5_FAMIX.Class",
							bb="11840,7614,12550,8353"];
						freemind_view_mindmapview_attributeview_AttributeTable [label="{AttributeTable|- attributeView : AttributeView\l- defaultComboBoxModel : ComboBoxModel\l- highRowIndex : int\l- MAX_WIDTH : int\
\l- MAX_HEIGTH : int\l- componentListener : MouseListener\l- dtcr : AttributeTableCellRenderer\l- mLogger : Logger\l- TABLE_ROW_\
HEIGHT : float\l- EXTRA_HEIGHT : int\l- prefHeaderSize : Dimension\l- focusListener : MyFocusListener\l| getTableHeaderHeight():\
 int \l+ insertRow(int): void \l+ getAttributeView(): AttributeView \l AttributeTable(AttributeView) \l- removeListenerFromEditor\
(): void \l- changeSelectedRowHeight(int): void \l updateAttributeTable(): void \l- getFontSize(): float \l+ removeRow(int): void\
 \l# processKeyBinding(KeyStroke,KeyEvent,int,boolean): boolean \l+ moveRowUp(int): void \l+ getAttributeTableModel(): AttributeTableModelDecoratorAdapter\
 \l+ columnWidthChanged(ColumnWidthChangeEvent): void \l- updateFontSize(Component,float): void \l- \
updateColumnWidths(): void \l- updateRowHeights(): void \l+ changeSelection(int,int,boolean,boolean): void \l+ viewRemoved(): void\
 \l+ prepareEditor(TableCellEditor,int,int): Component \l+ setOptimalColumnWidths(): void \l+ removeNotify(): void \l+ getCellEditor\
(int,int): TableCellEditor \l+ isVisible(): boolean \l+ moveRowDown(int): void \l+ getPreferredScrollableViewportSize(): Dimension\
 \l &lt;Initializer&gt;() \l+ tableChanged(TableModelEvent): void \l+ getCellRenderer(int,int): TableCellRenderer \l getZoom\
(): float \l getDefaultComboBoxModel(): ComboBoxModel \l+ setModel(TableModel): void \l+ removeEditor(): void}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="12047,7972.3", rects="11848,8298.8,12246,8321.8 11848,8110.8,12246,8298.8 11848,7622.8,12246,8110.8", width="5.5278", height="9.7222"];
						freemind_view_mindmapview_attributeview_AttributeTable_MyFocusListener [label="{- MyFocusListener|- focusedTable : AttributeTable\l|+ focusLost(FocusEvent): void \l+ focusGained(FocusEvent): void \l- MyFocusListener\
()}", levelType="6_FAMIX.Class", hasData=true, hasMethods=true, pos="12421,7780.3", rects="12315,7806.8,12526,7829.8 12315,7783.8,12526,7806.8 12315,7730.8,12526,7783.8", width="2.9306", height="1.3889"];
						freemind_view_mindmapview_attributeview_AttributeTable_HeaderMouseListener [label="{- HeaderMouseListener|- HeaderMouseListener() \l+ mouseReleased(MouseEvent): void}", levelType="6_FAMIX.Class", hasData=false, hasMethods=true, pos="12429,7905.3", rects="12316,7912.8,12542,7935.8 12316,7874.8,12542,7912.8", width="3.1389", height="0.86111"];
					}
					freemind_view_mindmapview_attributeview_ReducedAttributeTableModelDecorator [label="{ ReducedAttributeTableModelDecorator|- visibleRowCount : int\l- index : Vector\l| ReducedAttributeTableModelDecorator(AttributeView\
) \l- rebuildTableModel(): void \l &lt;Initializer&gt;() \l+ setValueAt(Object,int,int): void \l+ stateChanged(ChangeEvent):\
 void \l+ tableChanged(TableModelEvent): void \l+ removeRow(int): Object \l+ getRowCount(): int \l- getIndex(): Vector \l+ areAttributesVisible\
(): boolean \l- calcRow(int): int \l+ insertRow(int,Attribute): void \l+ getValueAt(int,int): Object \l+ addRow(Attribute\
): void \l+ isCellEditable(int,int): boolean}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="12356,7409.5", rects="12191,7533.5,12520,7556.5 12191,7495.5,12520,7533.5 12191,7262.5,12520,7495.5", width="4.5694", height="4.0972"];
					freemind_view_mindmapview_attributeview_AttributePopupMenu [label="{+ AttributePopupMenu|- hide : JMenuItem\l- insert : JMenuItem\l- optimalWidth : JMenuItem\l- up : JMenuItem\l- delete : JMenuItem\
\l- down : JMenuItem\l- oldTable : boolean\l- row : int\l- table : AttributeTable\l- edit : JMenuItem\l|- getInsert(): JMenuItem\
 \l# firePopupMenuWillBecomeInvisible(): void \l+ mouseEntered(MouseEvent): void \l+ mousePressed(MouseEvent): void \l- maybeShowPopup\
(MouseEvent): void \l &lt;Initializer&gt;() \l+ mouseReleased(MouseEvent): void \l+ mouseExited(MouseEvent): void \l+ mouseClicked\
(MouseEvent): void \l- getUp(): JMenuItem \l+ getTable(): AttributeTable \l# firePopupMenuWillBecomeVisible(): void \l-\
 getDelete(): JMenuItem \l- selectTable(Component,Point): void \l+ AttributePopupMenu() \l- getOptimalWidth(): JMenuItem \l- make\
(): void \l- getDown(): JMenuItem}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="12769,8416.5", rects="12632,8623,12906,8646 12632,8465,12906,8623 12632,8187,12906,8465", width="3.8056", height="6.3889"];
					freemind_view_mindmapview_attributeview_AttributeTableCellRenderer [label="{+ AttributeTableCellRenderer|- isPainting : boolean\l- zoom : float\l|+ getWidth(): int \l+ AttributeTableCellRenderer() \l+ getHeight\
(): int \l+ getTableCellRendererComponent(JTable,Object,boolean,boolean,int,int): Component \l+ paint(Graphics): void}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="12314,8478.5", rects="12059,8527.5,12568,8550.5 12059,8489.5,12568,8527.5 12059,8406.5,12568,8489.5", width="7.0694", height="2.0139"];
					freemind_view_mindmapview_attributeview_AttributeView [label="{+ AttributeView|- attributeViewScrollPane : JScrollPane\l- tableHeader : JTableHeader\l- HEADER_BACKGROUND : Color\l- reducedAttributeTableModel\
 : ReducedAttributeTableModelDecorator\l- tablePopupMenu : AttributePopupMenu\l- extendedAttributeTableModel : \
ExtendedAttributeTableModelDecorator\l- attributeTable : AttributeTable\l- nodeView : NodeView\l- currentAttributeTableModel : AttributeTableModelDecoratorAdapter\
\l|- startEditingTable(): void \l+ AttributeView(NodeView) \l- addListeners(): void \l+ stateChanged\
(ChangeEvent): void \l+ getAttributes(): NodeAttributeTableModel \l+ syncronizeAttributeView(): void \l+ startEditing(): void\
 \l &lt;Initializer&gt;() \l- getModeController(): ModeController \l+ update(): void \l getNode(): MindMapNode \l getAttributeRegistry\
(): AttributeRegistry \l+ areAttributesVisible(): boolean \l+ getMapView(): MapView \l- addTableModelListeners(): void \
\l- setViewType(String): void \l+ getCurrentAttributeTableModel(): AttributeTableModel \l+ viewRemoved(): void \l+ stopEditing()\
: void \l- getExtendedAttributeTableModel(): ExtendedAttributeTableModelDecorator \l+ getViewType(): String \l- provideAttributeTable\
(): void \l+ getNodeView(): NodeView \l isPopupShown(): boolean \l- removeListeners(): void \l+ tableChanged(TableModelEvent\
): void \l+ ancestorMoved(AncestorEvent): void}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="12859,7816.5", rects="12631,8083,13086,8106 12631,7940,13086,8083 12631,7527,13086,7940", width="6.3194", height="8.0556"];
					freemind_view_mindmapview_attributeview_ExtendedAttributeTableModelDecorator [label="{ ExtendedAttributeTableModelDecorator|- AFTER_LAST_ROW : int\l newRow : int\l|+ getValueAt(int,int): Object \l+ areAttributesVisible\
(): boolean \l+ ExtendedAttributeTableModelDecorator(AttributeView) \l+ moveRowDown(int): void \l+ getRowCount(): int \l+ insertRow\
(int): void \l+ setValueAt(Object,int,int): void \l+ removeRow(int): Object \l+ isCellEditable(int,int): boolean \l+ moveRowUp\
(int): void \l &lt;Initializer&gt;() \l+ editingCanceled(): void \l+ stateChanged(ChangeEvent): void}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="11836,8626.5", rects="11664,8735.5,12008,8758.5 11664,8697.5,12008,8735.5 11664,8494.5,12008,8697.5", width="4.7778", height="3.6806"];
					freemind_view_mindmapview_attributeview_AttributeViewScrollPane [label="{ AttributeViewScrollPane|+ getPreferredSize(): Dimension \l+ getMaximumSize(): Dimension \l+ isVisible(): boolean \l AttributeViewScrollPane\
(AttributeTable)}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="11787,7484.5", rects="11663,7507,11910,7530 11663,7439,11910,7507", width="3.4306", height="1.2778"];
					freemind_view_mindmapview_attributeview_AttributeTableModelDecoratorAdapter [label="{* AttributeTableModelDecoratorAdapter|# attributeRegistry : AttributeRegistry\l# nodeAttributeModel : NodeAttributeTableModel\l\
|+ AttributeTableModelDecoratorAdapter(AttributeView) \l- addListeners(): void \l+ getNode(): MindMapNode \l- removeListeners():\
 void \l+ getColumnName(int): String \l+ getColumnCount(): int \l*+ areAttributesVisible(): boolean \l+ tableChanged(TableModelEvent\
): void \l+ getColumnClass(int): Class \l+ viewRemoved(): void \l+ getColumnWidth(int): int \l+ setColumnWidth(int,int): void\
 \l+ editingCanceled(): void}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="12404,8758.5", rects="12236,8867.5,12572,8890.5 12236,8829.5,12572,8867.5 12236,8626.5,12572,8829.5", width="4.6667", height="3.6806"];
				}
				subgraph cluster_freemind_view_mindmapview_ConvexHull {
					graph [label="+ ConvexHull",
						levelType="4_FAMIX.Class",
						bb="10915,9590.7,11308,9857.7"];
					freemind_view_mindmapview_ConvexHull [label="{ConvexHull|+ ConvexHull() \l doGraham(Vector): Vector \l+ calculateHull(LinkedList): Vector \l# ccw(Point,Point,Point): int}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="11031,9645", rects="10923,9667.5,11139,9690.5 10923,9599.5,11139,9667.5", width=3, height="1.2778"];
					freemind_view_mindmapview_ConvexHull_thetaComparator [label="{# thetaComparator| p0 : Point\l| theta(Point,Point): double \l+ thetaComparator(Point) \l+ compare(Object,Object): int}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="11207,9777", rects="11114,9803.5,11299,9826.5 11114,9780.5,11299,9803.5 11114,9727.5,11299,9780.5", width="2.5694", height="1.3889"];
				}
				subgraph cluster_freemind_view_mindmapview_NodeFoldingComponent {
					graph [label="+ NodeFoldingComponent",
						levelType="4_FAMIX.Class",
						bb="11086,6798.2,11691,7162.2"];
					freemind_view_mindmapview_NodeFoldingComponent [label="{NodeFoldingComponent|- mIsEnabled : boolean\l# logger : Logger\l- TIMER_DELAY : int\l- SIZE_FACTOR_ON_MOUSE_OVER : int\l- COLOR\
_COUNTER_MAX : int\l- nodeView : NodeView\l- mTimer : Timer\l- mIsEntered : boolean\l- mColorCounter : int\l|# startTimer(): void\
 \l+ getNodeView(): NodeView \l &lt;Initializer&gt;() \l+ NodeFoldingComponent(NodeView) \l+ setCorrectedLocation(Point): void \
\l- getZoomedCircleRadius(): int \l+ dispose(): void \l# isFolded(): boolean \l# stopTimer(): void \l+ getPreferredSize(): Dimension\
}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="11230,6968.5", rects="11094,7107.5,11366,7130.5 11094,6964.5,11366,7107.5 11094,6806.5,11366,6964.5", width="3.7778", height="4.5139"];
					freemind_view_mindmapview_NodeFoldingComponent_RoundImageButtonUI [label="{ RoundImageButtonUI|# base : Shape\l# shape : Shape\l| RoundImageButtonUI() \l# installListeners(AbstractButton): void \l- getColorForCounter\
(): Color \l+ getPreferredSize(JComponent): Dimension \l+ paint(Graphics,JComponent): void \l- initShape(JComponent\
): void \l# installDefaults(AbstractButton): void}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="11548,6893.5", rects="11413,6957.5,11683,6980.5 11413,6919.5,11683,6957.5 11413,6806.5,11683,6919.5", width="3.75", height="2.4306"];
				}
				subgraph cluster_freemind_view_mindmapview_EditNodeTextField {
					graph [label="+ EditNodeTextField",
						levelType="4_FAMIX.Class",
						bb="13366,9077.7,14202,9876.7"];
					freemind_view_mindmapview_EditNodeTextField [label="{EditNodeTextField| cursorWidth : int\l widthAddition : int\l CANCEL : int\l- firstEvent : KeyEvent\l- mFocusListener : JComponent\
\l MINIMAL_LEAF_WIDTH : int\l- mEventSource : IntHolder\l heightAddition : int\l MINIMAL_WIDTH : int\l- mUndoManager : UndoManager\
\l yOffset : int\l# mParent : JComponent\l xOffset : int\l EDIT : int\l MINIMAL_HEIGHT : int\l# logger : Logger\l# textfield\
 : JTextField\l|# addTextfield(): void \l+ EditNodeTextField(NodeView,String,KeyEvent,ModeController,EditControl) \l# setTextfieldLoaction\
(Point): void \l- hideMe(): void \l &lt;Initializer&gt;() \l+ show(): void \l+ EditNodeTextField(NodeView,String,KeyEvent\
,ModeController,EditControl,JComponent,JComponent)}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="13679,9286", rects="13374,9462.5,13984,9485.5 13374,9199.5,13984,9462.5 13374,9086.5,13984,9199.5", width="8.4722", height="5.5556"];
					freemind_view_mindmapview_EditNodeTextField_TextFieldListener [label="{ TextFieldListener|- checkSpelling : boolean\l|+ mouseExited(MouseEvent): void \l+ mousePressed(MouseEvent): void \l+ mouseClicked\
(MouseEvent): void \l+ keyReleased(KeyEvent): void \l+ mouseEntered(MouseEvent): void \l+ componentResized(ComponentEvent): void\
 \l+ focusGained(FocusEvent): void \l+ keyPressed(KeyEvent): void \l+ componentShown(ComponentEvent): void \l+ keyTyped(KeyEvent\
): void \l &lt;Initializer&gt;() \l+ componentMoved(ComponentEvent): void \l TextFieldListener() \l+ focusLost(FocusEvent): void\
 \l+ mouseReleased(MouseEvent): void \l- conditionallyShowPopup(MouseEvent): void \l+ componentHidden(ComponentEvent): void}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="14054,9691", rects="13914,9822.5,14194,9845.5 13914,9799.5,14194,9822.5 13914,9536.5,14194,9799.5", width="3.8889", height="4.3056"];
				}
				subgraph cluster_freemind_view_mindmapview_NodeViewFactory {
					graph [label=" NodeViewFactory",
						levelType="4_FAMIX.Class",
						bb="13195,6740.7,13877,7213.7"];
					freemind_view_mindmapview_NodeViewFactory [label="{NodeViewFactory|- linearEdgeView : EdgeView\l- sharpLinearEdgeView : EdgeView\l- bezierEdgeView : EdgeView\l- factory : NodeViewFactory\
\l- sharpBezierEdgeView : EdgeView\l| newNodeView(MindMapNode,int,MapView,Container): NodeView \l- NodeViewFactory() \l-\
 getSharpLinearEdgeView(): EdgeView \l getInstance(): NodeViewFactory \l- getSharpBezierEdgeView(): EdgeView \l- getBezierEdgeView\
(): EdgeView \l newContentPane(NodeView): JComponent \l- getLinearEdgeView(): EdgeView \l newMainView(MindMapNode): MainView \l-\
 fireNodeViewCreated(NodeView): void \l getEdge(NodeView): EdgeView}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="13400,6889", rects="13203,7005.5,13598,7028.5 13203,6922.5,13598,7005.5 13203,6749.5,13598,6922.5", width="5.4861", height="3.8889"];
					freemind_view_mindmapview_NodeViewFactory_ContentPaneLayout [label="{- ContentPaneLayout|+ addLayoutComponent(String,Component): void \l+ preferredLayoutSize(Container): Dimension \l+ layoutContainer\
(Container): void \l+ minimumLayoutSize(Container): Dimension \l+ removeLayoutComponent(Component): void \l- ContentPaneLayout\
()}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="13718,7122", rects="13567,7159.5,13869,7182.5 13567,7061.5,13869,7159.5", width="4.1944", height="1.6944"];
					freemind_view_mindmapview_NodeViewFactory_ContentPane [label="{- ContentPane|- layoutManager : LayoutManager\l| ContentPane() \l &lt;Initializer&gt;()}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="13409,7103", rects="13307,7122,13511,7145 13307,7099,13511,7122 13307,7061,13511,7099", width="2.8333", height="1.1806"];
				}
				subgraph cluster_freemind_view_mindmapview_EditNodeDialog {
					graph [label="+ EditNodeDialog",
						levelType="4_FAMIX.Class",
						bb="10972,8678.7,11585,9057.7"];
					freemind_view_mindmapview_EditNodeDialog [label="{EditNodeDialog|- firstEvent : KeyEvent\l- booleanHolderForConfirmState : BooleanHolder\l|+ show(): void \l+ EditNodeDialog(NodeView\
,String,KeyEvent,ModeController,EditControl)}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="11201,8737", rects="10979,8763.5,11422,8786.5 10979,8725.5,11422,8763.5 10979,8687.5,11422,8725.5", width="6.1528", height="1.3889"];
					freemind_view_mindmapview_EditNodeDialog_LongNodeDialog [label="{ LongNodeDialog|- textArea : JTextArea\l- serialVersionUID : long\l| LongNodeDialog() \l# cancel(): void \l+ show(): void \l# isChanged\
(): boolean \l# submit(): void \l+ getMostRecentFocusOwner(): Component \l# split(): void \l &lt;Initializer&gt;()}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="11441,8932", rects="11305,9003.5,11577,9026.5 11305,8965.5,11577,9003.5 11305,8837.5,11577,8965.5", width="3.7778", height="2.6389"];
				}
				subgraph cluster_freemind_view_mindmapview_EditNodeWYSIWYG {
					graph [label="+ EditNodeWYSIWYG",
						levelType="4_FAMIX.Class",
						bb="12397,6740.7,13009,7149.7"];
					freemind_view_mindmapview_EditNodeWYSIWYG [label="{EditNodeWYSIWYG|- firstEvent : KeyEvent\l- htmlEditorWindow : HTMLDialog\l|+ show(): void \l+ EditNodeWYSIWYG(NodeView,String,KeyEvent\
,ModeController,EditControl)}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="12643,6799", rects="12405,6825.5,12881,6848.5 12405,6787.5,12881,6825.5 12405,6749.5,12881,6787.5", width="6.6111", height="1.3889"];
					freemind_view_mindmapview_EditNodeWYSIWYG_HTMLDialog [label="{- HTMLDialog|- serialVersionUID : long\l htmlEditorPanel : UNKNOWN\l|- createEditorPanel(): UNKNOWN \l# split(): void \l+ getMostRecentFocusOwner\
(): Component \l- removeBodyStyle(): void \l# cancel(): void \l HTMLDialog(EditNodeBase) \l+ getHtmlEditorPanel\
(): UNKNOWN \l getHtmlEditorPanel() \l# isChanged(): boolean \l# submit(): void \l &lt;Initializer&gt;()}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="12865,7001", rects="12729,7095,13001,7118 12729,7057,13001,7095 12729,6884,13001,7057", width="3.7778", height="3.2639"];
				}
				subgraph cluster_freemind_view_mindmapview_MapView {
					graph [label="+ MapView",
						levelType="4_FAMIX.Class",
						bb="13195,7311.2,14024,8965.2"];
					freemind_view_mindmapview_MapView [label="{MapView|- selectedsValid : boolean\l- mArrowLinkViews : Vector\l- standardSelectionStroke : Stroke\l- shiftSelectionOrigin : NodeView\
\l- maxNodeWidth : int\l standardSelectColor : Color\l NEED_PREF_SIZE_BUG_FIX : boolean\l- nodeToBeVisible : NodeView\l- disableMoveCursor\
 : boolean\l- model : MindMap\l- background : Color\l standardDrawRectangleForSelection : boolean\l- propertyChangeListener\
 : FreemindPropertyListener\l mPaintingAmount : int\l- mCenterNodeTimer : Timer\l- siblingMaxLevel : int\l- boundingRectangle\
 : Rectangle\l- zoom : float\l- fitToPage : boolean\l printOnWhiteBackground : boolean\l- controller : Controller\l mPaintingTime\
 : int\l standardMapBackgroundColor : Color\l- logger : Logger\l- isPrinting : boolean\l- rootContentLocation : Point\l-\
 selected : Selected\l- rootView : NodeView\l standardSelectRectangleColor : Color\l+ standardNodeTextColor : Color\l- margin :\
 int\l- extraWidth : int\l|- getSelected(int): NodeView \l+ selectContinuous(NodeView): boolean \l+ getSelecteds(): LinkedList \l-\
 getVisibleRight(NodeView): NodeView \l+ getRoot(): NodeView \l# paintLinks(NodeView,Graphics2D,HashMap,HashSet): void \l+ getController\
(): Controller \l- getVisibleLeft(NodeView): NodeView \l- repaintSelecteds(): void \l- paintSelected(Graphics2D,NodeView\
): void \l getNodeDragListener(): DragGestureListener \l+ getSingleSelectedNodes(): ArrayList \l+ detectCollision(Point): MindMapArrowLink\
 \l &lt;Initializer&gt;() \l+ getNodeView(MindMapNode): NodeView \l+ endPrinting(): void \l+ isSelected(NodeView): boolean\
 \l+ toggleSelected(NodeView): void \l getNodeMouseMotionListener(): NodeMouseMotionListener \l+ moveToRoot(): void \l+ makeTheSelected\
(NodeView): void \l- setScrollMode(int): void \l+ scrollNodeToVisible(NodeView): void \l- getScrollMode(): int \l+ \
getModel(): MindMap \l+ getSiblingMaxLevel(): int \l+ move(KeyEvent): void \l+ centerNode(NodeView): void \l+ getSelected(): NodeView\
 \l+ scrollBy(int,int): void \l+ getInnerBounds(): Rectangle \l+ setViewLocation(int,int): void \l+ setZoom(float): void \l+\
 MapView(MindMap,Controller) \l# collectLabels(NodeView,HashMap): void \l+ print(Graphics,PageFormat,int): int \l- setViewPositionAfterValidate\
(): void \l+ setSiblingMaxLevel(int): void \l getNodeMotionListener(): NodeMotionListener \l+ isCurrentlyPrinting\
(): boolean \l- extendSelectionWithKeyMove(NodeView,KeyEvent): void \l+ selectBranch(NodeView,boolean): void \l- getVisibleNeighbour\
(int): NodeView \l# setViewPosition(Point): void \l getNodeKeyListener(): NodeKeyListener \l+ paint(Graphics): void \l+ getViewportSize\
(): Dimension \l+ getNodeContentLocation(NodeView): Point \l+ initRoot(): void \l+ getAutoscrollInsets(): Insets \l+\
 scrollNodeToVisible(NodeView,int): void \l+ getZoom(): float \l+ setMoveCursor(boolean): void \l+ paintChildren(Graphics): void\
 \l+ getSelectedNodesSortedByY(): ArrayList \l+ getMaxNodeWidth(): int \l- createPropertyChangeListener(): void \l- getMap(): MapView\
 \l+ preparePrinting(): void \l# validateTree(): void \l- validateSelecteds(): void \l- getMainViewY(NodeView): int \l+ autoscroll\
(Point): void \l+ resetShiftSelectionOrigin(): void \l revalidateSelecteds(): void \l+ getPreferredSize(): Dimension \l+ \
deselect(NodeView): void \l- paintSelecteds(Graphics2D): void \l+ getZoomed(int): int \l- getMindMapLayout(): MindMapLayout \l+ \
selectAsTheOnlyOneSelected(NodeView): void \l+ getViewPosition(): Point \l getNodeDropListener(): DropTargetListener}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="13387,8126.5", rects="13203,8910.5,13571,8933.5 13203,8422.5,13571,8910.5 13203,7319.5,13571,8422.5", width="5.1111", height="22.431"];
					freemind_view_mindmapview_MapView_ResizeListener [label="{- ResizeListener| mSize : Dimension\l| ResizeListener() \l+ componentResized(ComponentEvent): void}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="13856,8522.5", rects="13719,8541.5,13993,8564.5 13719,8518.5,13993,8541.5 13719,8480.5,13993,8518.5", width="3.8056", height="1.1806"];
					freemind_view_mindmapview_MapView_Selected [label="{- Selected|- mySelected : Vector\l| &lt;Initializer&gt;() \l+ contains(NodeView): boolean \l- changeSelection(NodeView,boolean)\
: void \l+ get(int): NodeView \l+ Selected() \l+ size(): int \l+ remove(NodeView): void \l- addFocusForHooks(NodeView): void \l+\
 add(NodeView): void \l- removeFocusForHooks(NodeView): void \l+ clear(): void \l+ moveToFirst(NodeView): void}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="13766,7995.5", rects="13633,8089.5,13899,8112.5 13633,8066.5,13899,8089.5 13633,7878.5,13899,8066.5", width="3.6944", height="3.2639"];
					freemind_view_mindmapview_MapView_CheckLaterForCenterNodeTask [label="{ CheckLaterForCenterNodeTask| mNode : NodeView\l|+ run(): void \l+ CheckLaterForCenterNodeTask(NodeView)}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="13771,8350.5", rects="13632,8369.5,13909,8392.5 13632,8346.5,13909,8369.5 13632,8308.5,13909,8346.5", width="3.8472", height="1.1806"];
					freemind_view_mindmapview_MapView_ScrollPane [label="{+ ScrollPane|# processKeyBinding(KeyStroke,KeyEvent,int,boolean): boolean \l# validateTree(): void \l+ MapView.ScrollPane()}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="13824,8217.5", rects="13632,8232.5,14015,8255.5 13632,8179.5,14015,8232.5", width="5.3194", height="1.0694"];
				}
				subgraph cluster_freemind_view_mindmapview_EditNodeBase {
					graph [label="+ EditNodeBase",
						levelType="4_FAMIX.Class",
						bb="11827,9020.7,12694,10034"];
					subgraph cluster_freemind_view_mindmapview_EditNodeBase_EditDialog {
						graph [label="* EditDialog",
							levelType="5_FAMIX.Class",
							bb="11834,9156.5,12355,9529.5"];
						freemind_view_mindmapview_EditNodeBase_EditDialog [label="{EditDialog|- serialVersionUID : long\l- base : EditNodeBase\l| EditDialog(EditNodeBase) \l# confirmedCancel(): void \l# cancel(\
): void \l# submit(): void \l &lt;Initializer&gt;() \l getBase(): EditNodeBase \l# confirmedSubmit(): void \l setBase(EditNodeBase\
): void \l# split(): void \l*# isChanged(): boolean}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="11990,9292.8", rects="11896,9379.3,12084,9402.3 11896,9341.3,12084,9379.3 11896,9183.3,12084,9341.3", width="2.6111", height="3.0556"];
						freemind_view_mindmapview_EditNodeBase_EditDialog_DialogWindowListener [label="{ DialogWindowListener| DialogWindowListener() \l+ windowClosing(WindowEvent): void}", levelType="6_FAMIX.Class", hasData=false, hasMethods=true, pos="11960,9465.8", rects="11842,9473.3,12078,9496.3 11842,9435.3,12078,9473.3", width="3.2778", height="0.86111"];
						freemind_view_mindmapview_EditNodeBase_EditDialog_SplitAction [label="{ SplitAction|- serialVersionUID : long\l| &lt;Initializer&gt;() \l+ actionPerformed(ActionEvent): void}", levelType="6_FAMIX.Class", hasData=true, hasMethods=true, pos="12227,9206.8", rects="12112,9225.8,12343,9248.8 12112,9202.8,12343,9225.8 12112,9164.8,12343,9202.8", width="3.2083", height="1.1806"];
						freemind_view_mindmapview_EditNodeBase_EditDialog_CancelAction [label="{ CancelAction|- serialVersionUID : long\l| &lt;Initializer&gt;() \l CancelAction() \l+ actionPerformed(ActionEvent): void}", levelType="6_FAMIX.Class", hasData=true, hasMethods=true, pos="12227,9322.8", rects="12112,9349.3,12343,9372.3 12112,9326.3,12343,9349.3 12112,9273.3,12343,9326.3", width="3.2083", height="1.3889"];
						freemind_view_mindmapview_EditNodeBase_EditDialog_SubmitAction [label="{ SubmitAction|- serialVersionUID : long\l| SubmitAction() \l+ actionPerformed(ActionEvent): void \l &lt;Initializer&gt;()}", levelType="6_FAMIX.Class", hasData=true, hasMethods=true, pos="12229,9448.8", rects="12112,9475.3,12347,9498.3 12112,9452.3,12347,9475.3 12112,9399.3,12347,9452.3", width="3.2639", height="1.3889"];
					}
					freemind_view_mindmapview_EditNodeBase [label="{EditNodeBase|- controller : ModeController\l# node : NodeView\l# textFieldListener : FocusListener\l# BUTTON_CANCEL : int\l- editControl\
 : EditControl\l# BUTTON_SPLIT : int\l# BUTTON_OK : int\l# text : String\l# checkSpelling : boolean\l|+ getTextFieldListener\
(): FocusListener \l# redispatchKeyEvents(JTextComponent,KeyEvent): void \l+ getClipboard(): Clipboard \l# getView(): MapView\
 \l+ setText(String): void \l+ closeEdit(): void \l+ setTextFieldListener(FocusListener): void \l# getText(): String \l# binOptionIsTrue\
(String): boolean \l EditNodeBase(NodeView,String,ModeController,EditControl) \l+ getNode(): NodeView \l# getText(String\
): String \l# getFrame(): FreeMindMain \l+ getEditControl(): EditControl \l# getModeController(): ModeController \l &lt;Initializer\
&gt;() \l# getController(): Controller}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="12500,9788", rects="12314,9979.5,12685,10002 12314,9836.5,12685,9979.5 12314,9573.5,12685,9836.5", width="5.1528", height="5.9722"];
					freemind_view_mindmapview_EditNodeBase_EditControl [label="{+ EditControl| split(String,int): void \l cancel(): void \l ok(String): void}", levelType="5_FAMIX.Class", hasData=false, hasMethods=true, pos="11902,9643", rects="11835,9658,11969,9681 11835,9605,11969,9658", width="1.8611", height="1.0694"];
					freemind_view_mindmapview_EditNodeBase_EditPopupMenu [label="{# EditPopupMenu|- serialVersionUID : long\l| &lt;Initializer&gt;() \l+ EditPopupMenu(JTextComponent)}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="12204,9071", rects="12091,9090,12317,9113 12091,9067,12317,9090 12091,9029,12317,9067", width="3.1389", height="1.1806"];
					freemind_view_mindmapview_EditNodeBase_EditCopyAction [label="{# EditCopyAction|- serialVersionUID : long\l- textComponent : JTextComponent\l|+ EditCopyAction(JTextComponent) \l+ actionPerformed\
(ActionEvent): void \l &lt;Initializer&gt;()}", levelType="5_FAMIX.Class", hasData=true, hasMethods=true, pos="12144,9630", rects="12026,9664,12261,9687 12026,9626,12261,9664 12026,9573,12261,9626", width="3.2639", height="1.5972"];
				}
				freemind_view_mindmapview_BezierEdgeView [label="{+ BezierEdgeView| graph : Float\l- CHILD_XCTRL : int\l- XCTRL : int\l|- update(): void \l+ getColor(): Color \l &lt;Initializer\
&gt;() \l# paint(Graphics2D): void \l+ BezierEdgeView()}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="13734,6593.2", rects="13651,6649.7,13818,6672.7 13651,6596.7,13818,6649.7 13651,6513.7,13818,6596.7", width="2.3194", height="2.2222"];
				freemind_view_mindmapview_RootMainView [label="{ RootMainView|+ dropAsSibling(double): boolean \l+ paintDragOver(Graphics2D): void \l+ setDraggedOver(Point): void \l getLeftPoint\
(): Point \l# paintBackground(Graphics2D,Color): void \l getAlignment(): int \l+ getPreferredSize(): Dimension \l+ paintSelected\
(Graphics2D): void \l getCenterPoint(): Point \l+ getTextX(): int \l RootMainView() \l+ dropPosition(double): boolean \l getStyle\
(): String \l+ paint(Graphics): void \l getRightPoint(): Point \l+ getTextWidth(): int}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="10879,7105.2", rects="10744,7217.7,11015,7240.7 10744,6969.7,11015,7217.7", width="3.7639", height="3.7778"];
				freemind_view_mindmapview_EdgeView [label="{*+ EdgeView|# start : Point\l# source : NodeView\l- i : int\l- target : NodeView\l# DEF_STROKE : BasicStroke\l# end : Point\l ECLIPSED\
_STROKE : Stroke\l|*+ getColor(): Color \l# getMap(): MapView \l*# paint(Graphics2D): void \l# reset(): void \l# getSource\
(): NodeView \l# createStart(): void \l# createEnd(): void \l+ EdgeView() \l# isTargetEclipsed(): boolean \l &lt;Initializer&gt\
;() \l+ getWidth(): int \l+ paint(NodeView,Graphics2D): void \l# getModel(): MindMapEdge \l+ getStroke(): Stroke \l# getTarget()\
: NodeView \l# getEclipsedStroke(): Stroke}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="11144,9327.2", rects="11029,9496.2,11259,9519.2 11029,9383.2,11259,9496.2 11029,9135.2,11259,9383.2", width="3.1944", height="5.3472"];
				freemind_view_mindmapview_NodeView [label="{+ NodeView|- sListener : FreemindPropertyListener\l- mainView : MainView\l ALIGN_TOP : int\l- isLong : boolean\l+ DRAGGED_OVER_\
SIBLING : int\l# dragColor : Color\l# motionListenerView : NodeMotionListenerView\l- maxToolTipWidth : int\l ALIGN_CENTER : int\l-\
 FOLDING_SYMBOL_WIDTH : int\l- attributeView : AttributeView\l- left : boolean\l+ DRAGGED_OVER_SON : int\l+ DRAGGED_OVER_SON_LEFT\
 : int\l- preferredChild : NodeView\l- zeroPoint : Point\l# model : MindMapNode\l- contentPane : JComponent\l+ DRAGGED_OVER_NO\
 : int\l# map : MapView\l SPACE_AROUND : int\l- logger : Logger\l- viewDeletionEvent : Object\l ALIGN_BOTTOM : int\l- mFoldingListener\
 : NodeFoldingComponent\l|+ getAdditionalCloudHeigth(): int \l- updateFont(): void \l+ isParentOf(NodeView): boolean \l+ \
getShift(): int \l getLeft(boolean): LinkedList \l+ propertyChanged(String,String,String): void \l+ setIcon(MultipleImage): void\
 \l# getFrame(): FreeMindMain \l+ getText(): String \l+ getParentView(): NodeView \l+ contains(int,int): boolean \l+ setPreferredChild\
(NodeView): void \l# getAntiColor1(Color): Color \l# convertPointToMap(Point): Point \l# getController(): Controller \l repaintSelected\
(): void \l# NodeView(MindMapNode,int,MapView,Container) \l+ getModel(): MindMapNode \l+ getContentPane(): Container\
 \l+ getMap(): MapView \l+ treeNodesInserted(TreeModelEvent): void \l# getNextSiblingSingle(): NodeView \l+ getZoomedFoldingSymbolHalfWidth\
(): int \l- getCoordinates(LinkedList,int,boolean,int,int): void \l remove(): void \l getMainViewInPoint(): Point \l+\
 getFoldingSymbolWidth(): int \l# getInPointInMap(): Point \l+ isContentVisible(): boolean \l# getMainViewWidthWithFoldingMark(\
): int \l# getAntiColor2(Color): Color \l+ getLinkPoint(Point): Point \l# getPreviousSiblingSingle(): NodeView \l- getBackgroundColor\
(): Color \l+ getVisibleParentView(): NodeView \l+ getCoordinates(LinkedList): void \l+ updateToolTip(): void \l insert(): \
void \l+ getDeltaX(): int \l# getPreviousVisibleSibling(): NodeView \l+ isSiblingOf(NodeView): boolean \l getMainViewOutPoint(NodeView\
,Point): Point \l+ getDeltaY(): int \l- paintCloudsAndEdges(Graphics2D): void \l addDragListener(DragGestureListener): void\
 \l+ getMainView(): MainView \l updateAll(): void \l+ treeNodesChanged(TreeModelEvent): void \l getRight(boolean): LinkedList \l\
 insert(MindMapNode,int): NodeView \l# getNextPage(): NodeView \l+ getAttributeView(): AttributeView \l+ isLeft(): boolean \l+ \
getPreferredVisibleChild(boolean): NodeView \l# setModel(MindMapNode): void \l# getMainViewHeightWithFoldingMark(): int \l getAlignment\
(): int \l+ treeStructureChanged(TreeModelEvent): void \l+ getTextFont(): Font \l+ getMotionListenerView(): NodeMotionListenerView\
 \l+ requestFocus(): void \l+ getContent(): JComponent \l &lt;Initializer&gt;() \l# getPreviousPage(): NodeView \l- getLast\
(Component,boolean,boolean): NodeView \l getStyle(): String \l+ getVGap(): int \l+ paint(Graphics): void \l+ createAttributeView\
(): void \l addDropListener(DropTargetListener): void \l+ getHGap(): int \l- updateIcons(): void \l# addFoldingListener(): void\
 \l- updateText(): void \l isParentHidden(): boolean \l- updateTextColor(): void \l# getSelectedColor(): Color \l+ setFocusCycleRoot\
(boolean): void \l+ getFoldingMarkPosition(): Point \l+ getChildrenViews(): LinkedList \l syncronizeAttributeView(): void\
 \l# getSiblingViews(): LinkedList \l+ setVisible(boolean): void \l+ setBounds(int,int,int,int): void \l+ isRoot(): boolean \l- \
updateIconPosition(): void \l update(): void \l+ getTextColor(): Color \l# getModeController(): ModeController \l# removeFoldingListener\
(): void \l+ getInnerBounds(): Rectangle \l# getNextVisibleSibling(): NodeView \l+ isChildOf(NodeView): boolean \l updateStyle\
(): void \l+ toString(): String \l+ getTextBackground(): Color \l+ treeNodesRemoved(TreeModelEvent): void \l+ getMaxToolTipWidth\
(): int \l+ setText(String): void \l# removeFromMap(): void \l+ getIsLong(): boolean \l- paintCloud(Graphics): void \l useSelectionColors\
(): boolean \l setMainView(MainView): void \l+ isSelected(): boolean \l getFirst(Component,boolean,boolean): NodeView\
}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="12957,10023", rects="12796,11002,13118,11025 12796,10619,13118,11002 12796,9021.2,13118,10619", width="4.4722", height="27.847"];
				freemind_view_mindmapview_NodeViewVisitor [label="{+ NodeViewVisitor|*+ visit(NodeView): void}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="14072,7163.2", rects="13993,7163.2,14151,7186.2 13993,7140.2,14151,7163.2", width="2.1944", height="0.65278"];
				freemind_view_mindmapview_NodeViewLayoutAdapter [label="{*+ NodeViewLayoutAdapter|# location : Point\l# logger : Logger\l- content : JComponent\l- vGap : int\l- spaceAround : int\l- view\
 : NodeView\l- minDimension : Dimension\l# LISTENER_VIEW_WIDTH : int\l- childCount : int\l- model : MindMapNode\l|# getChildVerticalShift\
(boolean): int \l# placeLeftChildren(int): void \l+ preferredLayoutSize(Container): Dimension \l*# layout(): void \l#\
 getView(): NodeView \l getVGap(): int \l getSpaceAround(): int \l# getChildHorizontalShift(): int \l- setUp(Container): void \l+\
 NodeViewLayoutAdapter() \l &lt;Initializer&gt;() \l- layoutOtherItems(): void \l# getModel(): MindMapNode \l+ addLayoutComponent\
(String,Component): void \l+ layoutNodeFoldingComponent(NodeFoldingComponent): void \l+ layoutContainer(Container): void \l+ removeLayoutComponent\
(Component): void \l# getChildContentHeight(boolean): int \l+ minimumLayoutSize(Container): Dimension \l# getContent\
(): JComponent \l# placeRightChildren(int): void \l# getChildCount(): int \l- shutDown(): void}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="11393,8319.2", rects="11200,8563.2,11586,8586.2 11200,8405.2,11586,8563.2 11200,8052.2,11586,8405.2", width="5.3611", height="7.4306"];
				freemind_view_mindmapview_EditNodeExternalApplication [label="{+ EditNodeExternalApplication|- firstEvent : KeyEvent\l- lastEditingWasSuccessful : boolean\l|# getFirstEvent(): KeyEvent \l+ EditNodeExternalApplication\
(NodeView,String,KeyEvent,ModeController,EditControl) \l+ show(): void}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="12030,6684.2", rects="11770,6718.2,12290,6741.2 11770,6680.2,12290,6718.2 11770,6627.2,12290,6680.2", width="7.2222", height="1.5972"];
				freemind_view_mindmapview_MainView [label="{*+ MainView|# isDraggedOver : int\l minimumSize : Dimension\l+ ZOOM_CORRECTION_FACTOR : float\l- MIN_HOR_NODE_SIZE : int\l- isPainting\
 : boolean\l maximumSize : Dimension\l- logger : Logger\l|* getStyle(): String \l* getRightPoint(): Point \l# getMainViewHeightWithFoldingMark\
(): int \l# paintBackground(Graphics2D,Color): void \l+ updateCursor(double): boolean \l# getIconWidth(): int\
 \l+ getTextWidth(): int \l# getMainViewWidthWithFoldingMark(): int \l+ paintDragOver(Graphics2D): void \l+ dropPosition(double\
): boolean \l+ setDraggedOver(int): void \l+ paint(Graphics): void \l+ isInVerticalRegion(double,double): boolean \l getZoomedFoldingSymbolHalfWidth\
(): int \l+ getDeltaX(): int \l+ getMinimumSize(): Dimension \l+ getPreferredSize(): Dimension \l+ getTextX\
(): int \l# processKeyBinding(KeyStroke,KeyEvent,int,boolean): boolean \l# convertPointToMap(Point): void \l* getCenterPoint(): \
Point \l+ dropAsSibling(double): boolean \l+ getMaximumSize(): Dimension \l+ getWidth(): int \l# convertPointFromMap(Point): void\
 \l* getAlignment(): int \l+ getDeltaY(): int \l getController(): Controller \l- getZoom(): float \l# isCurrentlyPrinting(): boolean\
 \l+ getNodeView(): NodeView \l+ isInFollowLinkRegion(double): boolean \l# printComponent(Graphics): void \l* getLeftPoint(\
): Point \l+ setDraggedOver(Point): void \l MainView() \l+ getDraggedOver(): int \l+ getHeight(): int \l &lt;Initializer&gt;() \l+\
 paintSelected(Graphics2D): void}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="11562,9507.2", rects="11371,9856.2,11754,9879.2 11371,9743.2,11754,9856.2 11371,9135.2,11754,9743.2", width="5.3194", height="10.347"];
				freemind_view_mindmapview_IndependantMapViewCreator [label="{+ IndependantMapViewCreator|+ main(String[]): void \l# createMapView(Controller,MindMapMapModel): MapView \l+ exportFileToPng(String\
,String,FreeMindMain): void \l+ createMapViewForFile(String,JPanel,FreeMindMain): MapView \l+ IndependantMapViewCreator()}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="12590,6623.2", rects="12397,6653.2,12784,6676.2 12397,6570.2,12784,6653.2", width="5.375", height="1.4861"];
				freemind_view_mindmapview_SharpLinearEdgeView [label="{+ SharpLinearEdgeView|+ SharpLinearEdgeView() \l# paint(Graphics2D): void \l+ getColor(): Color}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="11055,8546.2", rects="10972,8561.2,11139,8584.2 10972,8508.2,11139,8561.2", width="2.3194", height="1.0694"];
				freemind_view_mindmapview_RightNodeViewLayout [label="{+ RightNodeViewLayout|- instance : RightNodeViewLayout\l|+ getMainViewInPoint(NodeView): Point \l+ getMainViewOutPoint(NodeView\
,NodeView,Point): Point \l+ layoutNodeMotionListenerView(NodeMotionListenerView): void \l+ RightNodeViewLayout() \l getInstance(\
): RightNodeViewLayout \l# layout(): void \l &lt;Initializer&gt;()}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="11055,6650.2", rects="10858,6706.7,11253,6729.7 10858,6683.7,11253,6706.7 10858,6570.7,11253,6683.7", width="5.4861", height="2.2222"];
				freemind_view_mindmapview_SharpBezierEdgeView [label="{+ SharpBezierEdgeView| graph : GeneralPath\l- deltaX : int\l two : Float\l line1 : Float\l line2 : Float\l one : Float\l- deltaY\
 : int\l- XCTRL : float\l|# createStart(): void \l- update(): void \l# paint(Graphics2D): void \l &lt;Initializer&gt;() \l+ getColor\
(): Color \l+ SharpBezierEdgeView()}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="10884,9374.2", rects="10801,9475.7,10968,9498.7 10801,9347.7,10968,9475.7 10801,9249.7,10968,9347.7", width="2.3194", height="3.4722"];
				freemind_view_mindmapview_MindMapLayout [label="{+ MindMapLayout|# logger : Logger\l+ MINIMAL_LEAF_WIDTH : int\l BORDER : int\l|+ minimumLayoutSize(Container): Dimension \l+ MindMapLayout\
() \l+ preferredLayoutSize(Container): Dimension \l+ removeLayoutComponent(Component): void \l &lt;Initializer&gt;() \
\l- calcYBorderSize(MapView): int \l- getRoot(Container): NodeView \l+ layoutContainer(Container): void \l+ addLayoutComponent(String\
,Component): void \l- calcXBorderSize(MapView): int}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="14144,6915.2", rects="13993,7009.2,14295,7032.2 13993,6956.2,14295,7009.2 13993,6798.2,14295,6956.2", width="4.1944", height="3.2639"];
				freemind_view_mindmapview_NodeViewLayout [label="{+ NodeViewLayout| layoutNodeMotionListenerView(NodeMotionListenerView): void \l*+ getMainViewInPoint(NodeView): Point \l layoutNodeFoldingComponent\
(NodeFoldingComponent): void \l*+ getMainViewOutPoint(NodeView,NodeView,Point): Point}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="13044,6616.2", rects="12853,6638.7,13236,6661.7 12853,6570.7,13236,6638.7", width="5.3194", height="1.2778"];
				freemind_view_mindmapview_BubbleMainView [label="{ BubbleMainView|- BOLD_STROKE : Stroke\l DEF_STROKE : Stroke\l|+ getPreferredSize(): Dimension \l getAlignment(): int \l# paintBackground\
(Graphics2D,Color): void \l getLeftPoint(): Point \l BubbleMainView() \l getStyle(): String \l+ paint(Graphics): void \
\l getCenterPoint(): Point \l+ getTextWidth(): int \l getRightPoint(): Point \l+ paintSelected(Graphics2D): void \l &lt;Initializer\
&gt;() \l# getMainViewWidthWithFoldingMark(): int \l+ getDeltaX(): int \l+ getTextX(): int}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="10993,8256.2", rects="10858,8380.2,11129,8403.2 10858,8342.2,11129,8380.2 10858,8109.2,11129,8342.2", width="3.7639", height="4.0972"];
				freemind_view_mindmapview_MultipleImage [label="{+ MultipleImage|- isDirty : boolean\l- mImages : Vector\l- zoomFactor : double\l|+ addImage(ImageIcon): void \l+ getImage(): Image\
 \l+ getImageCount(): int \l+ MultipleImage(double) \l &lt;Initializer&gt;() \l+ getIconHeight(): int \l+ paintIcon(Component\
,Graphics,int,int): void \l+ getIconWidth(): int}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="10941,7926.2", rects="10801,8005.2,11082,8028.2 10801,7952.2,11082,8005.2 10801,7824.2,11082,7952.2", width="3.9028", height="2.8472"];
				freemind_view_mindmapview_VerticalRootNodeViewLayout [label="{+ VerticalRootNodeViewLayout| USE_COMMON_OUT_POINT_FOR_ROOT_NODE : boolean\l- instance : VerticalRootNodeViewLayout\l- USE_COMMON\
_OUT_POINT_FOR_ROOT_NODE_STRING : String\l|+ getMainViewOutPoint(NodeView,NodeView,Point): Point \l+ VerticalRootNodeViewLayout\
() \l getInstance(): VerticalRootNodeViewLayout \l# layout(): void \l+ getMainViewInPoint(NodeView): Point \l &lt;Initializer&gt\
;() \l+ layoutNodeMotionListenerView(NodeMotionListenerView): void}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="14213,6608.2", rects="13993,6679.7,14434,6702.7 13993,6626.7,14434,6679.7 13993,6513.7,14434,6626.7", width="6.125", height="2.6389"];
				freemind_view_mindmapview_PathBBox [label="{ PathBBox|- accumCubic(double[],double,double,double,double,double,double,double,double,double): void \l- accum(double[],double\
,double): void \l- findQuadZero(double,double,double): double \l+ getBBox(Shape): Rectangle2D \l- accumQuad(double[],double,double\
,double,double,double,double,double): void \l- findCubicZeros(double[],double,double,double,double): int}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="11311,7372.2", rects="11029,7409.7,11594,7432.7 11029,7311.7,11594,7409.7", width="7.8472", height="1.6944"];
				freemind_view_mindmapview_LeftNodeViewLayout [label="{+ LeftNodeViewLayout|- instance : LeftNodeViewLayout\l|+ getMainViewOutPoint(NodeView,NodeView,Point): Point \l &lt;Initializer\
&gt;() \l getInstance(): LeftNodeViewLayout \l+ layoutNodeMotionListenerView(NodeMotionListenerView): void \l+ getMainViewInPoint\
(NodeView): Point \l+ LeftNodeViewLayout() \l# layout(): void}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="11511,6650.2", rects="11314,6706.7,11709,6729.7 11314,6683.7,11709,6706.7 11314,6570.7,11709,6683.7", width="5.4861", height="2.2222"];
				freemind_view_mindmapview_ForkMainView [label="{ ForkMainView| getLeftPoint(): Point \l+ paint(Graphics): void \l getCenterPoint(): Point \l# getEdgeWidth(): int \l getAlignment\
(): int \l getStyle(): String \l# getMainViewWidthWithFoldingMark(): int \l+ getDeltaX(): int \l# getMainViewHeightWithFoldingMark\
(): int \l ForkMainView() \l getRightPoint(): Point}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="13443,6554.2", rects="13309,6629.2,13578,6652.2 13309,6456.2,13578,6629.2", width="3.7361", height="2.7361"];
				freemind_view_mindmapview_LinearEdgeView [label="{+ LinearEdgeView|+ LinearEdgeView() \l+ getColor(): Color \l# paint(Graphics2D): void}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="10939,6836.2", rects="10858,6851.2,11021,6874.2 10858,6798.2,11021,6851.2", width="2.2639", height="1.0694"];
				freemind_view_mindmapview_NodeMotionListenerView [label="{+ NodeMotionListenerView|- movedView : NodeView\l# logger : Logger\l- isMouseEntered : boolean\l|+ paintComponent(Graphics): void\
 \l+ isMouseEntered(): boolean \l+ setMouseExited(): void \l+ getMovedView(): NodeView \l+ NodeMotionListenerView(NodeView) \l+\
 setMouseEntered(): void \l &lt;Initializer&gt;()}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="10923,7634.2", rects="10801,7705.7,11046,7728.7 10801,7652.7,11046,7705.7 10801,7539.7,11046,7652.7", width="3.4028", height="2.6389"];
				freemind_view_mindmapview_ArrowLinkView [label="{+ ArrowLinkView| DEF_STROKE : Stroke\l# target : NodeView\l# iterativeLevel : int\l# source : NodeView\l# arrowLinkCurve : CubicCurve2D\
\l- MAXIMAL_RECTANGLE_SIZE_FOR_COLLISION_DETECTION : int\l# arrowLinkModel : MindMapArrowLink\l|+ detectCollision(Point)\
: boolean \l- calcInclination(NodeView,double): Point \l+ getColor(): Color \l+ changeInclination(int,int,int,int): void \l+ getStroke\
(): Stroke \l- isTargetVisible(): boolean \l+ getRealWidth(): int \l+ getWidth(): int \l+ getModel(): MindMapArrowLink \l-\
 paintArrow(Point,Point,Graphics2D): void \l# getMap(): MapView \l- isSourceVisible(): boolean \l# getControlPoint(Point2D): Rectangle2D\
 \l# getZoom(): double \l+ paint(Graphics): void \l &lt;Initializer&gt;() \l# ArrowLinkView(MindMapArrowLink,NodeView,NodeView\
) \l+ getBounds(): Rectangle}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="11366,7746.2", rects="11143,7930.2,11589,7953.2 11143,7817.2,11589,7930.2 11143,7539.2,11589,7817.2", width="6.1944", height="5.7639"];
				freemind_view_mindmapview_CloudView [label="{+ CloudView|# cloudModel : MindMapCloud\l DEF_STROKE : Stroke\l- heightCalculator : CloudView\l# source : NodeView\l|# CloudView\
(MindMapCloud,NodeView) \l &lt;Initializer&gt;() \l+ getWidth(): int \l+ getStroke(): Stroke \l+ getExteriorColor(): Color \l# \
getMap(): MapView \l# getZoom(): double \l+ getRealWidth(): int \l- paintClouds(Graphics2D,Graphics2D,double,double,double,double\
,double): void \l# getIterativeLevel(): int \l+ getColor(): Color \l+ getAdditionalHeigth(MindMapCloud,NodeView): int \l# getModel\
(): MindMapCloud \l+ paint(Graphics): void \l- getDistanceToConvexHull(): double}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="12012,7017.2", rects="11770,7156.2,12255,7179.2 11770,7088.2,12255,7156.2 11770,6855.2,12255,7088.2", width="6.7361", height="4.5139"];
			}
			freemind_view_MapModule [label="{+ MapModule|- name : String\l- model : MindMap\l- modeController : ModeController\l- displayName : String\l- mode : Mode\l- unnamedMapsNumber\
 : int\l- view : MapView\l|+ MapModule(MindMap,MapView,Mode,ModeController) \l+ rename(): void \l+ getDisplayName(\
): String \l+ getMode(): Mode \l+ toString(): String \l+ getView(): MapView \l &lt;Initializer&gt;() \l+ getModel(): MindMap \l+\
 getModeController(): ModeController \l+ setDisplayName(String): void \l+ getName(): String \l+ setName(String): void}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="15046,6610.4", rects="14870,6749.4,15222,6772.4 14870,6636.4,15222,6749.4 14870,6448.4,15222,6636.4", width="4.8889", height="4.5139"];
		}
		subgraph cluster_freemind_extensions {
			graph [label=extensions,
				levelType="2_FAMIX.Namespace",
				bb="8047.3,11800,9986.3,13566"];
			subgraph cluster_freemind_extensions_HookFactory {
				graph [label="+ HookFactory",
					levelType="3_FAMIX.Class",
					bb="9069.9,12858,9682.9,13240"];
				freemind_extensions_HookFactory [label="{HookFactory|*+ getPluginBaseClass(String): Object \l*+ createModeControllerHook(String): ModeControllerHook \l*+ registerRegistrationContainer\
(RegistrationContainer,HookRegistration): void \l*+ getInstanciationMethod(String): HookInstanciationMethod \l*+ \
getPossibleModeControllerHooks(): Vector \l*+ getHookMenuPositions(String): List \l*+ createNodeHook(String): NodeHook \l*+ getHookInNode\
(MindMapNode,String): PermanentNodeHook \l*+ getRegistrations(): List \l*+ getPossibleNodeHooks(): Vector \l*+ deregisterAllRegistrationContainer\
(): void}", levelType="3_FAMIX.Class", hasData=false, hasMethods=true, pos="9310.1,12965", rects="9078.1,13040,9542.1,13063 9078.1,12867,9542.1,13040", width="6.4444", height="2.7361"];
				freemind_extensions_HookFactory_RegistrationContainer [label="{+ RegistrationContainer|+ isPluginBase : boolean\l+ hookRegistrationClass : Class\l correspondingPlugin : UNKNOWN\l|+ RegistrationContainer\
()}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="9565.1,13160", rects="9455.6,13186,9674.6,13209 9455.6,13133,9674.6,13186 9455.6,13110,9674.6,13133", width="3.0417", height="1.3889"];
			}
			subgraph cluster_freemind_extensions_MindMapHook {
				graph [label="+ MindMapHook",
					levelType="3_FAMIX.Class",
					bb="9280.4,12508,9780.4,12794"];
				freemind_extensions_MindMapHook [label="{MindMapHook| startupMapHook(): void \l shutdownMapHook(): void \l getResourceString(String): String \l setController(ModeController\
): void \l setProperties(Properties): void \l setPluginBaseClass(PluginBaseClassSearcher): void \l*+ getName(): String \l getPluginBaseClass\
(): Object \l setName(String): void}", levelType="3_FAMIX.Class", hasData=false, hasMethods=true, pos="9445.6,12600", rects="9288.6,12660,9602.6,12683 9288.6,12517,9602.6,12660", width="4.3611", height="2.3194"];
				freemind_extensions_MindMapHook_PluginBaseClassSearcher [label="{+ PluginBaseClassSearcher|*+ getPluginBaseObject(): Object}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="9670.6,12740", rects="9568.6,12740,9772.6,12763 9568.6,12717,9772.6,12740", width="2.8333", height="0.65278"];
			}
			subgraph cluster_freemind_extensions_HookInstanciationMethod {
				graph [label="+ HookInstanciationMethod",
					levelType="3_FAMIX.Class",
					bb="8265.4,12228,9215.4,12818"];
				freemind_extensions_HookInstanciationMethod [label="{HookInstanciationMethod|+ Other : HookInstanciationMethod\l+ Once : HookInstanciationMethod\l+ OnceForAllNodes : HookInstanciationMethod\
\l- isPermanent : boolean\l+ ApplyToRoot : HookInstanciationMethod\l- isUndoable : boolean\l+ OnceForRoot : HookInstanciationMethod\
\l- getter : DestinationNodesGetter\l- isSingleton : boolean\l| &lt;Initializer&gt;() \l+ isUndoable(): boolean \l- \
HookInstanciationMethod(boolean,boolean,DestinationNodesGetter,boolean) \l+ isSingleton(): boolean \l+ isPermanent(): boolean \l+\
 getAllInstanciationMethods(): HashMap \l+ getDestinationNodes(ModeController,MindMapNode,List): Collection \l+ isAlreadyPresent\
(ModeController,String,MindMapNode): boolean \l+ getCenterNode(ModeController,MindMapNode,List): MindMapNode}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="8503.6,12500", rects="8273.1,12631,8734.1,12654 8273.1,12488,8734.1,12631 8273.1,12345,8734.1,12488", width="6.4028", height="4.3056"];
				freemind_extensions_HookInstanciationMethod_RootDestinationNodesGetter [label="{- RootDestinationNodesGetter|+ getCenterNode(ModeController,MindMapNode,List): MindMapNode \l- RootDestinationNodesGetter() \l+\
 getDestinationNodes(ModeController,MindMapNode,List): Collection}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="8996.6,12383", rects="8786.1,12398,9207.1,12421 8786.1,12345,9207.1,12398", width="5.8472", height="1.0694"];
				freemind_extensions_HookInstanciationMethod_AllDestinationNodesGetter [label="{- AllDestinationNodesGetter|+ getCenterNode(ModeController,MindMapNode,List): MindMapNode \l+ getDestinationNodes(ModeController\
,MindMapNode,List): Collection \l- AllDestinationNodesGetter() \l- addChilds(MindMapNode,Collection): void}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="8917.6,12742", rects="8705.6,12764,9129.6,12787 8705.6,12696,9129.6,12764", width="5.8889", height="1.2778"];
				freemind_extensions_HookInstanciationMethod_DefaultDestinationNodesGetter [label="{- DefaultDestinationNodesGetter|- DefaultDestinationNodesGetter() \l+ getDestinationNodes(ModeController,MindMapNode,List): Collection\
 \l+ getCenterNode(ModeController,MindMapNode,List): MindMapNode}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="8728.6,12275", rects="8516.6,12290,8940.6,12313 8516.6,12237,8940.6,12290", width="5.8889", height="1.0694"];
				freemind_extensions_HookInstanciationMethod_DestinationNodesGetter [label="{- DestinationNodesGetter| getCenterNode(ModeController,MindMapNode,List): MindMapNode \l getDestinationNodes(ModeController,MindMapNode\
,List): Collection}", levelType="4_FAMIX.Class", hasData=false, hasMethods=true, pos="8992.6,12484", rects="8786.6,12491,9198.6,12514 8786.6,12453,9198.6,12491", width="5.7222", height="0.86111"];
			}
			subgraph cluster_freemind_extensions_ExportHook {
				graph [label="+ ExportHook",
					levelType="3_FAMIX.Class",
					bb="8439.9,12858,9014.9,13204"];
				freemind_extensions_ExportHook [label="{ExportHook|- view : MapView\l|+ chooseImageFile(String,String,String,ModeController): File \l+ createBufferedImage(): BufferedImage\
 \l# getTranslatableResourceString(String): String \l# copyFromFile(String,String,String): void \l# copyFromResource(String,\
String,String): void \l# chooseFile(String,String,String): File \l+ ExportHook()}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="8629.1,12947", rects="8448.1,13003,8810.1,13026 8448.1,12980,8810.1,13003 8448.1,12867,8810.1,12980", width="5.0278", height="2.2222"];
				freemind_extensions_ExportHook_ImageFilter [label="{+ ImageFilter|- description : String\l- type : String\l|+ getDescription(): String \l+ ExportHook.ImageFilter(String,String) \l+\
 accept(File): boolean}", levelType="4_FAMIX.Class", hasData=true, hasMethods=true, pos="8883.1,13116", rects="8759.6,13150,9006.6,13173 8759.6,13112,9006.6,13150 8759.6,13059,9006.6,13112", width="3.4306", height="1.5972"];
			}
			freemind_extensions_DontSaveMarker [label="{+ DontSaveMarker}", levelType="3_FAMIX.Class", hasData=false, hasMethods=false, pos="8151.4,12456", rects="8089.9,12438,8212.9,12474", width="1.7083", height="0.51389"];
			freemind_extensions_HookDescriptorBase [label="{+ HookDescriptorBase|+ FREEMIND_BASE_DIR_STRING : String\l# frame : FreeMindMain\l pluginBase : UNKNOWN\l- logger : Logger\l# mXmlPluginFile\
 : String\l- classLoaderCache : HashMap\l|+ HookDescriptorBase(Plugin,FreeMindMain,String) \l- getPluginDirectory()\
: String \l- createPluginClasspathString(List): String \l# getFromResourceIfNecessary(String): String \l- getClassLoader(List): \
ClassLoader \l# getFromPropertiesIfNecessary(String): String \l+ getPluginBase(): UNKNOWN \l+ getPluginClassLoader(): ClassLoader\
 \l &lt;Initializer&gt;() \l+ getPluginClasspath(): List}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="8213.4,13383", rects="8055.4,13500,8371.4,13523 8055.4,13402,8371.4,13500 8055.4,13244,8371.4,13402", width="4.3889", height="3.8889"];
			freemind_extensions_ModeControllerHookAdapter [label="{+ ModeControllerHookAdapter|+ ModeControllerHookAdapter()}", levelType="3_FAMIX.Class", hasData=false, hasMethods=true, pos="8541.4,11901", rects="8439.9,11901,8642.9,11924 8439.9,11878,8642.9,11901", width="2.8194", height="0.65278"];
			freemind_extensions_PermanentNodeHookAdapter [label="{+ PermanentNodeHookAdapter|+ PARAMETERS : String\l|+ onLostFocusNode(NodeView): void \l+ deregisterFilter(): void \l# executeTransaction\
(ActionPair): void \l# setToolTip(String,String): void \l+ onNewChild(MindMapNode): void \l+ onRemoveChildren(MindMapNode\
,MindMapNode): void \l+ onViewRemovedHook(NodeView): void \l+ loadFrom(XMLElement): void \l# saveNameValuePairs(HashMap,XMLElement\
): void \l# setToolTip(MindMapNode,String,String): void \l+ PermanentNodeHookAdapter() \l+ processUnfinishedLinks(): void \l+\
 saveHtml(Writer): void \l+ onFocusNode(NodeView): void \l &lt;Initializer&gt;() \l+ onUpdateNodeHook(): void \l+ onAddChildren\
(MindMapNode): void \l+ onRemoveChild(MindMapNode): void \l+ onAddChild(MindMapNode): void \l+ filterAction(ActionPair): ActionPair\
 \l+ registerFilter(): void \l+ onUpdateChildrenHook(MindMapNode): void \l+ onViewCreatedHook(NodeView): void \l+ save(XMLElement\
): void \l# loadNameValuePairs(XMLElement): HashMap \l+ shutdownMapHook(): void}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="9458.4,12240", rects="9280.4,12439,9636.4,12462 9280.4,12416,9636.4,12439 9280.4,12018,9636.4,12416", width="4.9444", height="6.1806"];
			freemind_extensions_UndoEventReceiver [label="{+ UndoEventReceiver}", levelType="3_FAMIX.Class", hasData=false, hasMethods=false, pos="8125.4,12771", rects="8055.4,12753,8195.4,12789", width="1.9444", height="0.51389"];
			freemind_extensions_PermanentNodeHook [label="{+ PermanentNodeHook| onViewCreatedHook(NodeView): void \l onFocusNode(NodeView): void \l onUpdateChildrenHook(MindMapNode): void\
 \l loadFrom(XMLElement): void \l onViewRemovedHook(NodeView): void \l onAddChild(MindMapNode): void \l onRemoveChildren(MindMapNode\
,MindMapNode): void \l saveHtml(Writer): void \l onAddChildren(MindMapNode): void \l onNewChild(MindMapNode): void \l processUnfinishedLinks\
(): void \l onUpdateNodeHook(): void \l onRemoveChild(MindMapNode): void \l onLostFocusNode(NodeView): void \l \
save(XMLElement): void}", levelType="3_FAMIX.Class", hasData=false, hasMethods=true, pos="8823.4,13406", rects="8649.9,13511,8996.9,13534 8649.9,13278,8996.9,13511", width="4.8194", height="3.5694"];
			freemind_extensions_HookFactoryAdapter [label="{*+ HookFactoryAdapter|# allRegistrationInstances : HashMap\l|# HookFactoryAdapter() \l+ getHookInNode(MindMapNode,String): PermanentNodeHook\
 \l+ deregisterAllRegistrationContainer(): void \l+ registerRegistrationContainer(RegistrationContainer,HookRegistration\
): void}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="9751.4,13370", rects="9524.9,13404,9977.9,13427 9524.9,13381,9977.9,13404 9524.9,13313,9977.9,13381", width="6.2917", height="1.5972"];
			freemind_extensions_HookDescriptorPluginAction [label="{+ HookDescriptorPluginAction| pluginAction : UNKNOWN\l- properties : Properties\l+ menuPositions : Vector\l- modes : Vector\l|+\
 getDocumentation(): String \l+ HookDescriptorPluginAction(FreeMindMain,String,Plugin,PluginAction) \l+ getClassName(): String \l\
 getPluginBase() \l+ getName(): String \l+ getModes(): Vector \l+ getProperties(): Properties \l HookDescriptorPluginAction(?,?\
,?,?) \l+ getInstanciationMethod(): HookInstanciationMethod \l+ getKeyStroke(): String \l+ isSelectable(): boolean \l+ getIconPath\
(): String \l+ toString(): String \l+ getBaseClass(): String}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="8973.4,12033", rects="8754.9,12165,9191.9,12188 8754.9,12097,9191.9,12165 8754.9,11879,9191.9,12097", width="6.0694", height="4.3056"];
			freemind_extensions_ModeControllerHook [label="{+ ModeControllerHook}", levelType="3_FAMIX.Class", hasData=false, hasMethods=false, pos="8129.4,12666", rects="8054.9,12648,8203.9,12684", width="2.0694", height="0.51389"];
			freemind_extensions_HookDescriptorRegistration [label="{+ HookDescriptorRegistration| mRegistration : UNKNOWN\l|+ getClassName(): String \l getPluginBase() \l+ HookDescriptorRegistration\
(FreeMindMain,String,Plugin,PluginRegistration) \l+ getListPluginModeList(): List \l+ getIsPluginBase(): boolean \l HookDescriptorRegistration\
(?,?,?,?)}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="9475.4,11880", rects="9244.9,11929,9705.9,11952 9244.9,11906,9705.9,11929 9244.9,11808,9705.9,11906", width="6.4028", height="2.0139"];
			freemind_extensions_HookAdapter [label="{+ HookAdapter|- name : String\l- properties : Properties\l- baseClass : PluginBaseClassSearcher\l# logger : Logger\l- controller\
 : ModeController\l|+ getResourceString(String): String \l+ getResource(String): URL \l+ getName(): String \l+ getPluginBaseClass\
(): Object \l# getProperties(): Properties \l+ setProperties(Properties): void \l+ setController(ModeController): void \l# getController\
(): ModeController \l+ setPluginBaseClass(PluginBaseClassSearcher): void \l+ setName(String): void \l+ shutdownMapHook\
(): void \l# obtainFocusForSelected(): void \l+ HookAdapter() \l+ startupMapHook(): void}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="8216.4,12005", rects="8055.4,12144,8377.4,12167 8055.4,12061,8377.4,12144 8055.4,11843,8377.4,12061", width="4.4722", height="4.5139"];
			freemind_extensions_HookRegistration [label="{+ HookRegistration| register(): void \l deRegister(): void}", levelType="3_FAMIX.Class", hasData=false, hasMethods=true, pos="8153.4,12574", rects="8089.9,12582,8216.9,12605 8089.9,12544,8216.9,12582", width="1.7639", height="0.86111"];
			freemind_extensions_NodeHookAdapter [label="{*+ NodeHookAdapter|- selfUpdateExpected : boolean\l- map : MindMap\l- node : MindMapNode\l|# getMap(): MindMap \l+ invoke(MindMapNode\
): void \l+ setMap(MindMap): void \l+ getNode(): MindMapNode \l+ NodeHookAdapter() \l# nodeChanged(MindMapNode): void \l+ \
setNode(MindMapNode): void \l+ getNodeId(): String}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="8557.4,12085", rects="8439.9,12164,8674.9,12187 8439.9,12111,8674.9,12164 8439.9,11983,8674.9,12111", width="3.2639", height="2.8472"];
			freemind_extensions_PermanentNodeHookSubstituteUnknown [label="{+ PermanentNodeHookSubstituteUnknown|- hookName : String\l- child : XMLElement\l|+ save(XMLElement): void \l+ PermanentNodeHookSubstituteUnknown\
(String) \l+ loadFrom(XMLElement): void \l+ getName(): String}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="9327.4,13378", rects="9174.9,13420,9479.9,13443 9174.9,13382,9479.9,13420 9174.9,13314,9479.9,13382", width="4.2361", height="1.8056"];
			freemind_extensions_NodeHook [label="{+ NodeHook| invoke(MindMapNode): void \l setMap(MindMap): void \l setNode(MindMapNode): void}", levelType="3_FAMIX.Class", hasData=false, hasMethods=true, pos="8291.4,12896", rects="8194.9,12911,8387.9,12934 8194.9,12858,8387.9,12911", width="2.6806", height="1.0694"];
			freemind_extensions_ImportWizard [label="{+ ImportWizard|+ lookFor : String\l- logger : Logger\l+ CLASS_LIST : Vector\l- mFrame : FreeMindMain\l| &lt;Initializer&gt;() \l+\
 ImportWizard(FreeMindMain) \l+ buildClassList(): void \l+ addClassesFromZip(Vector,File): void \l- isInteresting(String): boolean\
 \l+ addClassesFromDir(Vector,File,File,int): void}", levelType="3_FAMIX.Class", hasData=true, hasMethods=true, pos="8232.4,13093", rects="8090.4,13165,8374.4,13188 8090.4,13097,8374.4,13165 8090.4,12999,8374.4,13097", width="3.9444", height="2.6389"];
		}
	}
}
