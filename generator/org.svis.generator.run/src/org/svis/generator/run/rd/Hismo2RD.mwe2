module org.svis.generator.run.rd

var projectName = "org.svis.generator.run"
var runtimeProject = "../${projectName}"
var inputPath = "./input/hismo"
var outputPath = "./output/rd/hismo"

Workflow {

	bean = org.eclipse.emf.mwe.utils.StandaloneSetup {
		platformUri = "${runtimeProject}/.."
		registerGeneratedEPackage = "org.svis.xtext.rd.RdPackage"
		registerGeneratedEPackage = "org.svis.xtext.hismo.HismoPackage"
		
	}

	component = org.eclipse.xtext.mwe.Reader {
		path = "${inputPath}"
		register = org.svis.xtext.HismoStandaloneSetup {}
		loadResource = {
			slot = "hismo"
		}
	}
	
	// support lazy loading of textual models
	component = org.svis.generator.ResolveLazyComponent {}

	// transform famix into rds (s2m)
	component = org.svis.generator.rd.s2m.Hismo2RD {
		modelSlot = "hismo"
	}
	
	// write metaData
	component = org.eclipse.xtext.generator.GeneratorComponent {
		register = org.svis.generator.hismo.m2t.Hismo2JSONStandaloneSetup {}
		slot = 'metadata'
		outlet = {
			path = "${outputPath}"
		}
	}
	
//	// famix stats
//	component = org.eclipse.xtext.generator.GeneratorComponent {
//		register = org.svis.generator.FamixStatsStandaloneSetup {}
//		slot = 'famixstats'
//		outlet = {
//			path = "output/rd"
//		}
//	}


	// write out resulting model (rd)
	component = org.eclipse.emf.mwe.utils.Writer {
		modelSlot = "rdwriter"
		uri = "${outputPath}/rd.xml"	
	}
	
	
	// calculate rd layout (m2m)
	component = org.svis.generator.rd.m2m.RD2RD {
		modelSlot = "rd"
	}

	// rd2x3d bzw. x3dom (m2t)
	component = org.eclipse.xtext.generator.GeneratorComponent {
		register = org.svis.generator.rd.m2t.RDOutputStandaloneSetup {}
		slot = 'rdextended'
		outlet = {
			path = "${outputPath}"
		}
	}
}