grammar org.svis.xtext.Hismo  with org.svis.xtext.Famix


import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "http://www.svis.org/famix" as famix

generate hismo "http://www.svis.org/hismo"


HismoRoot: 
	hismoDocument=HismoDocument?;
	
HismoDocument:
	{HismoDocument}
	'(' elements+=(HISMOElement|FAMIXElement)*	')';


HISMOElement returns famix::FAMIXElement:
	HISMONamespaceHistory | 
	HISMOClassHistory | 
	HISMOMethodHistory | 
	HISMOAttributeHistory  | 
	HISMONamespaceVersion | 
	HISMOClassVersion | 
	HISMOMethodVersion | 
	HISMOAttributeVersion 
;


//history elements
HISMONamespaceHistory:
    '(HISMO.NamespaceHistory'
	'(id:' name=INT_ID ')'
	('(name:' value= MSESTRING ')')?
	('(containingNamespaceHistory' containingNamespaceHistory=IntegerReference ')')?
	('(namespaceHistories' namespaceHistories+=IntegerReference* ')')?
	('(namespaceVersions' namespaceVersions+=IntegerReference* ')')?
	('(classHistories' classHistories+=IntegerReference* ')')?
	')'
;

HISMOClassHistory:
	'(HISMO.ClassHistory' 
	'(id:' name=INT_ID ')'
	('(name:' value= MSESTRING ')')?
	('(classVersions' classVersions+=IntegerReference* ')')?
	('(containingNamespaceHistory' containingNamespaceHistory=IntegerReference ')')? //parentelement can be class or namespace TODO change
	('(methodHistories' methodHistories+=IntegerReference* ')')?
	('(attributeHistories' attributeHistories+=IntegerReference* ')')?
	('(evolutionNumberOfStatements' evolutionNumberOfStatements=INT ')' )? 
	('(lastAuthor' lastAuthor=MSESTRING ')')?
	')';	
	
HISMOMethodHistory:
	'(HISMO.MethodHistory' 
	'(id:' name=INT_ID ')'
	('(name:' value= MSESTRING ')')?
	('(methodVersions' methodVersions+=IntegerReference* ')')?
	('(containingClassHistory' containingClassHistory=IntegerReference ')')?
	('(signature' signature=MSESTRING ')')?
	//Measurements
	('(maxNumberOfStatements' maxNumberOfStatements=INT ')' )?
	('(minNumberOfStatements' minNumberOfStatements=INT ')' )?
	('(averageNumberOfStatements' averageNumberOfStatements=INT ')' )?
	('(evolutionNumberOfStatements' evolutionNumberOfStatements=INT ')' )? 
	')'
;

HISMOAttributeHistory:
	'(HISMO.AttributeHistory'
	'(id:' name=INT_ID ')' 
	('(name:' value= MSESTRING ')')?
	('(attributeVersions' attributeVersions+=IntegerReference* ')')?
	('(containingClassHistory' containingClassHistory=IntegerReference ')')?
	')'
;




//version elements
HISMONamespaceVersion:
	'(HISMO.NamespaceVersion'
	'(id:' name=INT_ID ')'
	'(name' value=MSESTRING ')'
	('(parentHistory' parentHistory=IntegerReference ')')?	
	('(classVersions' classVersions+=IntegerReference* ')')?
	('(versionEntity' versionEntity=IntegerReference ')')?
	('(author' author=MSESTRING ')')?	
	('(timestamp' timestamp=Timestamp')')?
	('(commitId' commitId=MSESTRING ')')?	
	')';
	
	
	
HISMOClassVersion:
	'(HISMO.ClassVersion'
	'(id:' name=INT_ID ')'
	'(name' value=MSESTRING ')'
	('(parentHistory' parentHistory=IntegerReference ')')?	
	('(methodVersions' methodVersions+=IntegerReference* ')')?
	('(attributeVersions' attributeVersions+=IntegerReference* ')')?
	('(versionEntity' versionEntity=IntegerReference ')')?
	('(author' author=MSESTRING ')')?	
	('(timestamp' timestamp=Timestamp')')?
	('(commitId' commitId=MSESTRING ')')?	
	')';

HISMOMethodVersion:
	'(HISMO.MethodVersion'
	'(id:' name=INT_ID ')'
	'(name' value=MSESTRING ')'
	('(parentHistory' parentHistory=IntegerReference ')')?	
	('(versionEntity' versionEntity=IntegerReference ')')?
	('(author' author=MSESTRING ')')?	
	('(timestamp' timestamp=Timestamp')')?
	('(commitId' commitId=MSESTRING ')')?	
	//Measurements	
	('(evolutionNumberOfStatements' evolutionNumberOfStatements=INT ')' )? //Sum of absolute Changes in subsequent Versions
	')';

HISMOAttributeVersion:
	'(HISMO.AttributeVersion'
	'(id:' name=INT_ID ')'
	'(name' value=MSESTRING ')'
	('(parentHistory' parentHistory=IntegerReference ')')?	
	('(versionEntity' versionEntity=IntegerReference ')')?
	('(author' author=MSESTRING ')')?	
	('(timestamp' timestamp=Timestamp')')?
	('(commitId' commitId=MSESTRING ')')?	
	')';


//IntegerReference Types




// FAMIX DATA Types
/*
FAMIXNamespace:
	'(FAMIX.Namespace'
	'(id: ' name=INT_ID ')'
	'(name' value=MSESTRING ')'
	('(isStub' isStub=Boolean ')')?
	('(parentScope' parentScope=IntegerReference ')')?
	')';

FAMIXFileAnchor:
	'(FAMIX.FileAnchor'
	'(id: ' name=INT_ID ')'
	('(element' element=IntegerReference ')')?
	'(endLine' endline=INT ')'
	'(fileName' filename=MSESTRING ')'
	'(startLine' startline=INT ')'
	')';

FAMIXClass:
	'(FAMIX.Class'
	'(id: ' name=INT_ID ')'
	'(name' value=MSESTRING ')'
	'(container' container=IntegerReference ')'
	('(isInterface' isInterface=Boolean ')')?
	('(isStub' isStub=Boolean ')')?
	('(modifiers' modifiers+=MSESTRING* ')')?
	('(sourceAnchor' type=IntegerReference ')')?
	')';

FAMIXParameterizableClass:
	'(FAMIX.ParameterizableClass'
	'(id: ' name=INT_ID ')'
	'(name' value=MSESTRING ')'
	'(container' container=IntegerReference ')'
	('(isInterface' isInterface=Boolean ')')?
	('(isStub' isStub=Boolean ')')?
	('(modifiers' modifiers+=MSESTRING* ')')?
	('(sourceAnchor' type=IntegerReference ')')?
	')';

FAMIXMethod:
	'(FAMIX.Method'
	'(id: ' name=INT_ID ')'
	'(name' value=MSESTRING ')'
	('(cyclomaticComplexity' cyclomaticComplexity=INT ')')?
	('(declaredType' declaredType=IntegerReference ')')?
	('(hasClassScope' hasClassScope=Boolean ')')?
	('(isStub' isStub=Boolean ')')?
	('(kind' kind=MSESTRING ')')?
	('(modifiers' modifiers+=MSESTRING* ')')?
	('(numberOfStatements' numberOfStatements=INT ')')?
	'(parentType' parentType=IntegerReference ')'
	'(signature' signature=MSESTRING ')'
	('(sourceAnchor' sourceAnchor=IntegerReference ')')?
	')';

FAMIXInvocation:
	'(FAMIX.Invocation'
	'(id: ' name=INT_ID ')'
	'(candidates' candidates=IntegerReference ')'
	('(previous' previous=IntegerReference ')')?
	('(receiver' receiver=IntegerReference ')')?
	'(sender' sender=IntegerReference ')'
	'(signature' signature=MSESTRING ')'
	')';

FAMIXAttribute:
	'(FAMIX.Attribute'
	'(id: ' name=INT_ID ')'
	'(name' value=MSESTRING ')'
	('(declaredType' declaredType=IntegerReference ')')?
	('(hasClassScope' hasClassScope=Boolean ')')?
	('(isStub' isStub=Boolean ')')?
	('(modifiers' modifiers+=MSESTRING* ')')?
	'(parentType' parentType=IntegerReference ')'
	('(sourceAnchor' sourceAnchor=IntegerReference ')')?
	')';

FAMIXAccess:
	'(FAMIX.Access'
	'(id: ' name=INT_ID ')'
	'(accessor' accessor=IntegerReference ')'
	('(isWrite' isWrite=Boolean ')')?
	('(previous' previous=IntegerReference ')')?
	'(variable' variable=IntegerReference ')'
	')';

FAMIXPrimitiveType:
	'(FAMIX.PrimitiveType'
	'(id: ' name=INT_ID ')'
	'(name' value=MSESTRING ')'
	'(isStub' isStub=Boolean ')'
	')';

FAMIXComment:
	'(FAMIX.Comment'
	'(id: ' name=INT_ID ')'
	'(container' container=IntegerReference ')'
	'(content' content=MSESTRING ')'
	'(sourceAnchor' sourceAnchor=IntegerReference ')'
	')';

FAMIXParameter:
	'(FAMIX.Parameter'
	'(id: ' name=INT_ID ')'
	'(name' value=MSESTRING ')'
	'(declaredType' declaredType=IntegerReference ')'
	'(parentBehaviouralEntity' parentBehaviouralEntity=IntegerReference ')'
	')';

FAMIXInheritance:
	'(FAMIX.Inheritance'
	'(id: ' name=INT_ID ')'
	('(previous' previous=IntegerReference ')')?
	'(subclass' subclass=IntegerReference ')'
	'(superclass' superclass=IntegerReference ')'
	')';

FAMIXReference:
	'(FAMIX.Reference'
	'(id: ' name=INT_ID ')'
	'(source' source=IntegerReference ')'
	'(target' target=IntegerReference ')'
	')';

FAMIXParameterizedType:
	'(FAMIX.ParameterizedType'
	'(id: ' name=INT_ID ')'
	'(name' value=MSESTRING ')'
	('(arguments' arguments+=IntegerReference* ')')?
	'(container' container=IntegerReference ')'
	('(isStub' isStub=Boolean ')')?
	'(parameterizableClass' parameterizableClass=IntegerReference ')'
	')';

FAMIXAnnotationInstance:
	'(FAMIX.AnnotationInstance'
	'(id: ' name=INT_ID ')'
	'(annotatedEntity' annotatedEntity=IntegerReference ')'
	'(annotationType' annotationType=IntegerReference ')'
	')';

FAMIXAnnotationInstanceAttribute:
	'(FAMIX.AnnotationInstanceAttribute'
	'(id: ' name=INT_ID ')'
	('(annotationTypeAttribute' annotationTypeAttribute=IntegerReference ')')?
	'(parentAnnotationInstance' parentAnnotationInstance=IntegerReference ')'
	'(value' value=MSESTRING ')'
	')';

FAMIXAnnotationType:
	'(FAMIX.AnnotationType'
	'(id: ' name=INT_ID ')'
	'(name' value=MSESTRING ')'
	'(container' container=IntegerReference ')'
	('(isStub' isStub=Boolean ')')?
	('(modifiers' modifiers+=MSESTRING* ')')?
	('(sourceAnchor' sourceAnchor=IntegerReference ')')?
	')';

FAMIXAnnotationTypeAttribute:
	'(FAMIX.AnnotationTypeAttribute'
	'(id: ' name=INT_ID ')'
	'(name' value=MSESTRING ')'
	('(isStub' isStub=Boolean ')')?
	('(modifiers' modifiers+=MSESTRING* ')')?
	'(parentType' parentType=IntegerReference ')'
	('(sourceAnchor' sourceAnchor=IntegerReference ')')?
	')';

FAMIXLocalVariable:
	'(FAMIX.LocalVariable'
	'(id: ' name=INT_ID ')'
	'(name' value=MSESTRING ')'
	'(declaredType' declaredType=IntegerReference ')'
	('(isStub' isStub=Boolean ')')?
	'(parentBehaviouralEntity' parentBehaviouralEntity=IntegerReference ')'
	('(sourceAnchor' sourceAnchor=IntegerReference ')')?
	')';

FAMIXImplicitVariable:
	'(FAMIX.ImplicitVariable'
	'(id: ' name=INT_ID ')'
	'(name' value=MSESTRING ')'
	('(parentBehaviouralEntity' parentBehaviouralEntity=IntegerReference ')')?
	')';

FAMIXType:
	'(FAMIX.Type'
	'(id: ' name=INT_ID ')'
	'(name' value=MSESTRING ')'
	'(container' container=IntegerReference ')'
	'(isStub' isStub=Boolean ')'
	')';

FAMIXParameterType:
	'(FAMIX.ParameterType'
	'(id: ' name=INT_ID ')'
	'(name' value=MSESTRING ')'
	'(container' container=IntegerReference ')'
	('(isStub' isStub=Boolean ')')?
	')';

FAMIXJavaSourceLanguage:
	'(FAMIX.JavaSourceLanguage'
	'(id: ' name=INT_ID ')'
	')';

FAMIXDeclaredException:
	'(FAMIX.DeclaredException'
	'(id: ' name=INT_ID ')'
	'(definingMethod' definingMethod=IntegerReference ')'
	'(exceptionClass' exceptionClass=IntegerReference ')'
	')';

FAMIXThrownException:
	'(FAMIX.ThrownException'
	'(id: ' name=INT_ID ')'
	'(definingMethod' definingMethod=IntegerReference ')'
	'(exceptionClass' exceptionClass=IntegerReference ')'
	')';

FAMIXCaughtException:
	'(FAMIX.CaughtException'
	'(id: ' name=INT_ID ')'
	'(definingMethod' definingMethod=IntegerReference ')'
	'(exceptionClass' exceptionClass=IntegerReference ')'
	')';

FAMIXEnum:
	'(FAMIX.Enum'
	'(id: ' name=INT_ID ')'
	'(name' value=MSESTRING ')'
	'(container' container=IntegerReference ')'
	('(isStub' isStub=Boolean ')')?
	('(modifiers' modifiers+=MSESTRING* ')')?
	('(sourceAnchor' sourceAnchor=IntegerReference ')')?
	')';

FAMIXEnumValue:
	'(FAMIX.EnumValue'
	'(id: ' name=INT_ID ')'
	'(name' value=MSESTRING ')'
	('(isStub' isStub=Boolean ')')?
	'(parentEnum' parentEnum=IntegerReference ')'
	')';

* 
* 
*/
//common Data Types
	
Timestamp returns ecore::EString : MSESTRING;


//terminal ID  		: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
//terminal INT returns ecore::EInt: ('0'..'9')+;
//terminal ML_COMMENT	: '/*' -> '*/';
//terminal SL_COMMENT 	: '//' !('\n'|'\r')* ('\r'? '\n')?;
//terminal WS			: (' '|'\t'|'\r'|'\n')+;
//terminal ANY_OTHER: .;
